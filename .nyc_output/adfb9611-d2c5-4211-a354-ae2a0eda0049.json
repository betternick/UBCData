{"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/IInsightFacade.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/IInsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":113}},"2":{"start":{"line":5,"column":0},"end":{"line":8,"column":89}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":42}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":23}},"6":{"start":{"line":12,"column":8},"end":{"line":12,"column":52}},"7":{"start":{"line":15,"column":0},"end":{"line":15,"column":36}},"8":{"start":{"line":18,"column":8},"end":{"line":18,"column":23}},"9":{"start":{"line":19,"column":8},"end":{"line":19,"column":53}},"10":{"start":{"line":22,"column":0},"end":{"line":22,"column":38}},"11":{"start":{"line":25,"column":8},"end":{"line":25,"column":23}},"12":{"start":{"line":26,"column":8},"end":{"line":26,"column":59}},"13":{"start":{"line":29,"column":0},"end":{"line":29,"column":50}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":1},"end":{"line":5,"column":2}},"loc":{"start":{"line":5,"column":31},"end":{"line":8,"column":1}},"line":5},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":25},"end":{"line":13,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":25},"end":{"line":20,"column":5}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":25},"end":{"line":27,"column":5}},"line":24}},"branchMap":{"0":{"loc":{"start":{"line":8,"column":24},"end":{"line":8,"column":87}},"type":"binary-expr","locations":[{"start":{"line":8,"column":24},"end":{"line":8,"column":50}},{"start":{"line":8,"column":55},"end":{"line":8,"column":86}}],"line":8}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":24,"6":24,"7":1,"8":2,"9":2,"10":1,"11":0,"12":0,"13":1},"f":{"0":1,"1":24,"2":2,"3":0},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/IInsightFacade.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/IInsightFacade.ts"],"names":[],"mappings":";;;AAMA,IAAY,kBAGX;AAHD,WAAY,kBAAkB;IAC7B,2CAAqB,CAAA;IACrB,qCAAe,CAAA;AAChB,CAAC,EAHW,kBAAkB,GAAlB,0BAAkB,KAAlB,0BAAkB,QAG7B;AAmDD,MAAa,YAAa,SAAQ,KAAK;IACtC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;IAC7C,CAAC;CACD;AALD,oCAKC;AAED,MAAa,aAAc,SAAQ,KAAK;IACvC,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;IAC9C,CAAC;CACD;AALD,sCAKC;AAED,MAAa,mBAAoB,SAAQ,KAAK;IAC7C,YAAY,OAAgB;QAC3B,KAAK,CAAC,OAAO,CAAC,CAAC;QACf,KAAK,CAAC,iBAAiB,CAAC,IAAI,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC;CACD;AALD,kDAKC","sourcesContent":["/*\n * This is the primary high-level API for the project. In this folder there should be:\n * A class called InsightFacade, this should be in a file called InsightFacade.ts.\n * You should not change this interface at all or the test suite will not work.\n */\n\nexport enum InsightDatasetKind {\n\tSections = \"sections\",\n\tRooms = \"rooms\",\n}\n\n// This is our dataset interface\nexport interface Dataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n\tdatasetArray: JSON[];\n}\n\n// This is the given georesponse interface for location data\nexport interface GeoResponse {\n\tlat?: number;\n\tlon?: number;\n\terror?: string;\n}\n\n// This is our rooms interface for rooms\nexport interface Rooms {\n\tfullname: string;\n\tshortname: string;\n\tnumber: string;\n\tname: string;\n\taddress: string;\n\tlat: number | string | undefined;\n\tlon: number | string | undefined;\n\tseats: number;\n\ttype: string;\n\tfurniture: string;\n\thref: string;\n}\n\n\nexport interface Building {\n\tfullname: string;\n\tshortname: string;\n\taddress: string;\n\tlat: number | string | undefined;\n\tlon: number | string | undefined;\n}\n\nexport interface InsightDataset {\n\tid: string;\n\tkind: InsightDatasetKind;\n\tnumRows: number;\n}\n\nexport interface InsightResult {\n\t[key: string]: string | number;\n}\n\nexport class InsightError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, InsightError);\n\t}\n}\n\nexport class NotFoundError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, NotFoundError);\n\t}\n}\n\nexport class ResultTooLargeError extends Error {\n\tconstructor(message?: string) {\n\t\tsuper(message);\n\t\tError.captureStackTrace(this, ResultTooLargeError);\n\t}\n}\n\nexport interface IInsightFacade {\n\t/**\n\t * Add a dataset to insightUBC.\n\t *\n\t * @param id  The id of the dataset being added. Follows the format /^[^_]+$/\n\t * @param content  The base64 content of the dataset. This content should be in the form of a serialized zip file.\n\t * @param kind  The kind of the dataset\n\t *\n\t * @return Promise <string[]>\n\t *\n\t * The promise should fulfill on a successful add, reject for any failures.\n\t * The promise should fulfill with a string array,\n\t * containing the ids of all currently added datasets upon a successful add.\n\t * The promise should reject with an InsightError describing the error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t * If id is the same as the id of an already added dataset, the dataset should be rejected and not saved.\n\t *\n\t * After receiving the dataset, it should be processed into a data structure of\n\t * your design. The processed data structure should be persisted to disk; your\n\t * system should be able to load this persisted value into memory for answering\n\t * queries.\n\t *\n\t * Ultimately, a dataset must be added or loaded from disk before queries can\n\t * be successfully answered.\n\t */\n\taddDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]>;\n\n\t/**\n\t * Remove a dataset from insightUBC.\n\t *\n\t * @param id  The id of the dataset to remove. Follows the format /^[^_]+$/\n\t *\n\t * @return Promise <string>\n\t *\n\t * The promise should fulfill upon a successful removal, reject on any error.\n\t * Attempting to remove a dataset that hasn't been added yet counts as an error.\n\t *\n\t * An id is invalid if it contains an underscore, or is only whitespace characters.\n\t *\n\t * The promise should fulfill the id of the dataset that was removed.\n\t * The promise should reject with a NotFoundError (if a valid id was not yet added)\n\t * or an InsightError (invalid id or any other source of failure) describing the error.\n\t *\n\t * This will delete both disk and memory caches for the dataset for the id meaning\n\t * that subsequent queries for that id should fail unless a new addDataset happens first.\n\t */\n\tremoveDataset(id: string): Promise<string>;\n\n\t/**\n\t * Perform a query on insightUBC.\n\t *\n\t * @param query  The query to be performed.\n\t *\n\t * If a query is incorrectly formatted, references a dataset not added (in memory or on disk),\n\t * or references multiple datasets, it should be rejected.\n\t *\n\t * @return Promise <InsightResult[]>\n\t *\n\t * The promise should fulfill with an array of results.\n\t * The promise should reject with a ResultTooLargeError (if the query returns too many results)\n\t * or an InsightError (for any other source of failure) describing the error.\n\t */\n\tperformQuery(query: unknown): Promise<InsightResult[]>;\n\n\t/**\n\t * List all currently added datasets, their types, and number of rows.\n\t *\n\t * @return Promise <InsightDataset[]>\n\t * The promise should fulfill an array of currently added InsightDatasets, and will only fulfill.\n\t */\n\tlistDatasets(): Promise<InsightDataset[]>;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b47b85e2d535a56157168d4464d029fa3d89d1b1","contentHash":"65de73eeafc73645bc09ca4fb4ac6066bd0634a7b88ae509af59f72a584f6025"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/InsightFacade.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/InsightFacade.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":25},"end":{"line":3,"column":52}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":59}},"3":{"start":{"line":5,"column":36},"end":{"line":5,"column":74}},"4":{"start":{"line":6,"column":25},"end":{"line":6,"column":52}},"5":{"start":{"line":7,"column":26},"end":{"line":7,"column":54}},"6":{"start":{"line":9,"column":10},"end":{"line":9,"column":19}},"7":{"start":{"line":10,"column":24},"end":{"line":10,"column":32}},"8":{"start":{"line":11,"column":25},"end":{"line":11,"column":50}},"9":{"start":{"line":13,"column":8},"end":{"line":13,"column":49}},"10":{"start":{"line":14,"column":8},"end":{"line":14,"column":91}},"11":{"start":{"line":17,"column":8},"end":{"line":48,"column":11}},"12":{"start":{"line":19,"column":28},"end":{"line":19,"column":29}},"13":{"start":{"line":20,"column":28},"end":{"line":25,"column":13}},"14":{"start":{"line":26,"column":12},"end":{"line":47,"column":15}},"15":{"start":{"line":28,"column":16},"end":{"line":34,"column":17}},"16":{"start":{"line":29,"column":20},"end":{"line":29,"column":113}},"17":{"start":{"line":32,"column":20},"end":{"line":32,"column":79}},"18":{"start":{"line":33,"column":20},"end":{"line":33,"column":100}},"19":{"start":{"line":37,"column":16},"end":{"line":37,"column":43}},"20":{"start":{"line":38,"column":16},"end":{"line":38,"column":44}},"21":{"start":{"line":39,"column":16},"end":{"line":39,"column":44}},"22":{"start":{"line":40,"column":16},"end":{"line":40,"column":92}},"23":{"start":{"line":43,"column":16},"end":{"line":43,"column":42}},"24":{"start":{"line":46,"column":16},"end":{"line":46,"column":70}},"25":{"start":{"line":51,"column":8},"end":{"line":70,"column":11}},"26":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"27":{"start":{"line":53,"column":16},"end":{"line":53,"column":95}},"28":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"29":{"start":{"line":56,"column":16},"end":{"line":56,"column":100}},"30":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"31":{"start":{"line":59,"column":16},"end":{"line":59,"column":46}},"32":{"start":{"line":60,"column":16},"end":{"line":60,"column":91}},"33":{"start":{"line":62,"column":12},"end":{"line":62,"column":32}},"34":{"start":{"line":63,"column":12},"end":{"line":69,"column":15}},"35":{"start":{"line":65,"column":16},"end":{"line":65,"column":35}},"36":{"start":{"line":68,"column":16},"end":{"line":68,"column":93}},"37":{"start":{"line":73,"column":8},"end":{"line":114,"column":11}},"38":{"start":{"line":74,"column":12},"end":{"line":112,"column":13}},"39":{"start":{"line":75,"column":16},"end":{"line":75,"column":92}},"40":{"start":{"line":77,"column":17},"end":{"line":112,"column":13}},"41":{"start":{"line":78,"column":16},"end":{"line":78,"column":95}},"42":{"start":{"line":81,"column":32},"end":{"line":81,"column":56}},"43":{"start":{"line":82,"column":37},"end":{"line":82,"column":60}},"44":{"start":{"line":83,"column":16},"end":{"line":111,"column":17}},"45":{"start":{"line":84,"column":20},"end":{"line":84,"column":123}},"46":{"start":{"line":87,"column":20},"end":{"line":93,"column":21}},"47":{"start":{"line":88,"column":40},"end":{"line":88,"column":77}},"48":{"start":{"line":89,"column":24},"end":{"line":89,"column":87}},"49":{"start":{"line":92,"column":24},"end":{"line":92,"column":78}},"50":{"start":{"line":94,"column":36},"end":{"line":94,"column":41}},"51":{"start":{"line":95,"column":20},"end":{"line":109,"column":21}},"52":{"start":{"line":97,"column":42},"end":{"line":97,"column":79}},"53":{"start":{"line":98,"column":24},"end":{"line":98,"column":72}},"54":{"start":{"line":99,"column":24},"end":{"line":99,"column":88}},"55":{"start":{"line":100,"column":38},"end":{"line":100,"column":40}},"56":{"start":{"line":101,"column":24},"end":{"line":106,"column":25}},"57":{"start":{"line":102,"column":28},"end":{"line":102,"column":109}},"58":{"start":{"line":105,"column":28},"end":{"line":105,"column":49}},"59":{"start":{"line":107,"column":24},"end":{"line":107,"column":66}},"60":{"start":{"line":108,"column":24},"end":{"line":108,"column":48}},"61":{"start":{"line":110,"column":20},"end":{"line":110,"column":107}},"62":{"start":{"line":113,"column":12},"end":{"line":113,"column":71}},"63":{"start":{"line":117,"column":8},"end":{"line":131,"column":11}},"64":{"start":{"line":118,"column":24},"end":{"line":118,"column":26}},"65":{"start":{"line":119,"column":12},"end":{"line":129,"column":15}},"66":{"start":{"line":120,"column":28},"end":{"line":124,"column":17}},"67":{"start":{"line":125,"column":16},"end":{"line":125,"column":31}},"68":{"start":{"line":126,"column":16},"end":{"line":126,"column":40}},"69":{"start":{"line":127,"column":16},"end":{"line":127,"column":46}},"70":{"start":{"line":128,"column":16},"end":{"line":128,"column":34}},"71":{"start":{"line":130,"column":12},"end":{"line":130,"column":34}},"72":{"start":{"line":134,"column":28},"end":{"line":134,"column":49}},"73":{"start":{"line":135,"column":32},"end":{"line":135,"column":56}},"74":{"start":{"line":136,"column":31},"end":{"line":136,"column":80}},"75":{"start":{"line":138,"column":8},"end":{"line":138,"column":72}},"76":{"start":{"line":139,"column":8},"end":{"line":139,"column":22}},"77":{"start":{"line":142,"column":20},"end":{"line":142,"column":22}},"78":{"start":{"line":143,"column":8},"end":{"line":147,"column":9}},"79":{"start":{"line":143,"column":21},"end":{"line":143,"column":22}},"80":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"81":{"start":{"line":145,"column":16},"end":{"line":145,"column":26}},"82":{"start":{"line":148,"column":8},"end":{"line":148,"column":21}},"83":{"start":{"line":151,"column":0},"end":{"line":151,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":4},"end":{"line":12,"column":5}},"loc":{"start":{"line":12,"column":18},"end":{"line":15,"column":5}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":34},"end":{"line":49,"column":5}},"line":16},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":27},"end":{"line":17,"column":28}},"loc":{"start":{"line":17,"column":48},"end":{"line":48,"column":9}},"line":17},"3":{"name":"(anonymous_3)","decl":{"start":{"line":27,"column":22},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":32},"end":{"line":35,"column":13}},"line":27},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":34},"end":{"line":41,"column":13}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":22},"end":{"line":42,"column":23}},"loc":{"start":{"line":42,"column":37},"end":{"line":44,"column":13}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":23},"end":{"line":45,"column":24}},"loc":{"start":{"line":45,"column":32},"end":{"line":47,"column":13}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":50,"column":4},"end":{"line":50,"column":5}},"loc":{"start":{"line":50,"column":22},"end":{"line":71,"column":5}},"line":50},"8":{"name":"(anonymous_8)","decl":{"start":{"line":51,"column":27},"end":{"line":51,"column":28}},"loc":{"start":{"line":51,"column":48},"end":{"line":70,"column":9}},"line":51},"9":{"name":"(anonymous_9)","decl":{"start":{"line":64,"column":22},"end":{"line":64,"column":23}},"loc":{"start":{"line":64,"column":28},"end":{"line":66,"column":13}},"line":64},"10":{"name":"(anonymous_10)","decl":{"start":{"line":67,"column":23},"end":{"line":67,"column":24}},"loc":{"start":{"line":67,"column":29},"end":{"line":69,"column":13}},"line":67},"11":{"name":"(anonymous_11)","decl":{"start":{"line":72,"column":4},"end":{"line":72,"column":5}},"loc":{"start":{"line":72,"column":24},"end":{"line":115,"column":5}},"line":72},"12":{"name":"(anonymous_12)","decl":{"start":{"line":73,"column":27},"end":{"line":73,"column":28}},"loc":{"start":{"line":73,"column":48},"end":{"line":114,"column":9}},"line":73},"13":{"name":"(anonymous_13)","decl":{"start":{"line":116,"column":4},"end":{"line":116,"column":5}},"loc":{"start":{"line":116,"column":19},"end":{"line":132,"column":5}},"line":116},"14":{"name":"(anonymous_14)","decl":{"start":{"line":117,"column":27},"end":{"line":117,"column":28}},"loc":{"start":{"line":117,"column":48},"end":{"line":131,"column":9}},"line":117},"15":{"name":"(anonymous_15)","decl":{"start":{"line":119,"column":29},"end":{"line":119,"column":30}},"loc":{"start":{"line":119,"column":51},"end":{"line":129,"column":13}},"line":119},"16":{"name":"(anonymous_16)","decl":{"start":{"line":133,"column":4},"end":{"line":133,"column":5}},"loc":{"start":{"line":133,"column":24},"end":{"line":140,"column":5}},"line":133},"17":{"name":"(anonymous_17)","decl":{"start":{"line":141,"column":4},"end":{"line":141,"column":5}},"loc":{"start":{"line":141,"column":32},"end":{"line":149,"column":5}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":28,"column":16},"end":{"line":34,"column":17}},"type":"if","locations":[{"start":{"line":28,"column":16},"end":{"line":34,"column":17}},{"start":{"line":28,"column":16},"end":{"line":34,"column":17}}],"line":28},"1":{"loc":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},{"start":{"line":52,"column":12},"end":{"line":54,"column":13}}],"line":52},"2":{"loc":{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},"type":"if","locations":[{"start":{"line":55,"column":12},"end":{"line":57,"column":13}},{"start":{"line":55,"column":12},"end":{"line":57,"column":13}}],"line":55},"3":{"loc":{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},"type":"if","locations":[{"start":{"line":58,"column":12},"end":{"line":61,"column":13}},{"start":{"line":58,"column":12},"end":{"line":61,"column":13}}],"line":58},"4":{"loc":{"start":{"line":74,"column":12},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":74,"column":12},"end":{"line":112,"column":13}},{"start":{"line":74,"column":12},"end":{"line":112,"column":13}}],"line":74},"5":{"loc":{"start":{"line":77,"column":17},"end":{"line":112,"column":13}},"type":"if","locations":[{"start":{"line":77,"column":17},"end":{"line":112,"column":13}},{"start":{"line":77,"column":17},"end":{"line":112,"column":13}}],"line":77},"6":{"loc":{"start":{"line":77,"column":21},"end":{"line":77,"column":58}},"type":"binary-expr","locations":[{"start":{"line":77,"column":21},"end":{"line":77,"column":35}},{"start":{"line":77,"column":39},"end":{"line":77,"column":58}}],"line":77},"7":{"loc":{"start":{"line":83,"column":16},"end":{"line":111,"column":17}},"type":"if","locations":[{"start":{"line":83,"column":16},"end":{"line":111,"column":17}},{"start":{"line":83,"column":16},"end":{"line":111,"column":17}}],"line":83},"8":{"loc":{"start":{"line":95,"column":20},"end":{"line":109,"column":21}},"type":"if","locations":[{"start":{"line":95,"column":20},"end":{"line":109,"column":21}},{"start":{"line":95,"column":20},"end":{"line":109,"column":21}}],"line":95},"9":{"loc":{"start":{"line":95,"column":24},"end":{"line":96,"column":78}},"type":"binary-expr","locations":[{"start":{"line":95,"column":24},"end":{"line":95,"column":76}},{"start":{"line":96,"column":24},"end":{"line":96,"column":78}}],"line":95},"10":{"loc":{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},"type":"if","locations":[{"start":{"line":144,"column":12},"end":{"line":146,"column":13}},{"start":{"line":144,"column":12},"end":{"line":146,"column":13}}],"line":144}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":22,"7":1,"8":1,"9":22,"10":22,"11":24,"12":24,"13":24,"14":24,"15":19,"16":14,"17":5,"18":5,"19":13,"20":13,"21":13,"22":13,"23":13,"24":11,"25":6,"26":6,"27":1,"28":5,"29":1,"30":4,"31":2,"32":2,"33":2,"34":2,"35":2,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":12,"64":12,"65":12,"66":18,"67":18,"68":18,"69":18,"70":18,"71":12,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1},"f":{"0":22,"1":24,"2":24,"3":19,"4":13,"5":13,"6":11,"7":6,"8":6,"9":2,"10":0,"11":0,"12":0,"13":12,"14":12,"15":18,"16":0,"17":0},"b":{"0":[14,5],"1":[1,5],"2":[1,4],"3":[2,2],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/InsightFacade.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/InsightFacade.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n\tDataset,\n\tIInsightFacade,\n\tInsightDataset,\n\tInsightDatasetKind,\n\tInsightError,\n\tInsightResult,\n\tNotFoundError,\n} from \"./IInsightFacade\";\n\nimport {QueryContainer} from \"../model/QueryContainer\";\n\nimport {\n\taddToPersistFolder,\n\tcheckIdAndKind,\n\tdeleteDatasetFromPersistence,\n\treadDirectory,\n\treadSectionsContent,\n} from \"./helperFunctionsAddDataset\";\n\nimport {QueryValidator} from \"./queryValidator\";\nimport {readRoomsContent} from \"./AddDatasetRooms\";\nimport {getContentFromArchives} from \"../../test/TestUtil\";\n\n\n/**\n * This is the main programmatic entry point for the project.\n * Method documentation is in IInsightFacade\n *\n */\nexport default class InsightFacade implements IInsightFacade {\n\tpublic map: Map<string, Dataset> = new Map<string, Dataset>();\n\n\tpublic static persistDir = \"./data\";\n\tpublic static persistFile = \"./data/persistFile.json\";\n\n\tconstructor() {\n\t\t// InsightFacade.map = new Map<string, Dataset>();\n\t\tconsole.log(\"InsightFacadeImpl::init()\");\n\t\treadDirectory(InsightFacade.persistDir, this.map);\n\t}\n\n\tpublic addDataset(id: string, content: string, kind: InsightDatasetKind): Promise<string[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet keys: string[];\n\t\t\tlet throwFlag = 0;\n\n\t\t\tlet myDataset: Dataset = {\n\t\t\t\tid: id,\n\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\tnumRows: 0,\n\t\t\t\tdatasetArray: [],\n\t\t\t};\n\n\t\t\tcheckIdAndKind(id, kind, this.map)\n\t\t\t\t.then((type) => {\n\t\t\t\t\tif (type === \"sections\"){\n\t\t\t\t\t\treturn readSectionsContent(content, myDataset.datasetArray);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmyDataset.kind = InsightDatasetKind.Rooms;\n\t\t\t\t\t\treturn readRoomsContent(content, myDataset.datasetArray);\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t.then((length) => {\n\t\t\t\t\tmyDataset.numRows = length;\n\t\t\t\t\tthis.map.set(id, myDataset);\n\t\t\t\t\t// ref: https://linuxhint.com/convert-map-keys-to-array-javascript/\n\t\t\t\t\tkeys = [...this.map.keys()];\n\t\t\t\t\t// resolve(keys);\n\t\t\t\t\t// Step 5): diskWrite: write this object to data folder for persistence.\n\t\t\t\t\t// console.log(myDataset);\n\t\t\t\t\treturn addToPersistFolder(myDataset, keys);\n\t\t\t\t})\n\t\t\t\t.then((keysParam) => {\n\t\t\t\t\treturn resolve(keysParam);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\treturn reject(new InsightError(err));\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic removeDataset(id: string): Promise<string> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tif (id.includes(\"_\")) {\n\t\t\t\treturn reject(new InsightError(\"_ character is not allowed\"));\n\t\t\t}\n\t\t\t// Removing whitespace reference: https://stackoverflow.com/questions/10800355/remove-whitespaces-inside-a-string-in-javascript\n\t\t\tif (id.replace(/\\s+/g, \"\").length === 0) {\n\t\t\t\treturn reject(new InsightError(\"ID cannot have only whitespaces\"));\n\t\t\t}\n\n\t\t\tif (!this.map.has(id)) {\n\t\t\t\tconsole.log(this.map.has(id));\n\t\t\t\treturn reject(new NotFoundError(\"Dataset doesn't exist\"));\n\t\t\t}\n\n\t\t\tthis.map.delete(id);\n\n\t\t\tdeleteDatasetFromPersistence(InsightFacade.persistDir, id)\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn resolve(id);\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\treturn reject(new InsightError(\"could not delete dataset\"));\n\t\t\t\t});\n\t\t});\n\t}\n\n\tpublic performQuery(query: unknown): Promise<InsightResult[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\t// Step 1) check if the query is a JSON object\n\t\t\t// console.log(\"Does this query NOT violate LT/EQ/GT rules?: Answer: \" + g);\n\t\t\tif (typeof query !== \"object\") {\n\t\t\t\treturn reject(new InsightError(\"Not a valid JSON object\"));\n\t\t\t} else if (query === null || query === undefined) {\n\t\t\t\treturn reject(new InsightError(\"query is null or undefined\"));\n\t\t\t} else {\n\t\t\t\tlet datasetID = this.getDatasetID(query);\n\t\t\t\tlet datasetToQuery = this.map.get(datasetID);\n\n\t\t\t\tif (datasetToQuery === undefined) {\n\t\t\t\t\treturn reject(new InsightError(\"the dataset you are looking for has not been added\"));\n\t\t\t\t} else {\n\n\t\t\t\t\ttry {\n\t\t\t\t\t\tlet validator = new QueryValidator();\n\t\t\t\t\t\tvalidator.validateQuery(query, datasetID, datasetToQuery.kind);\n\t\t\t\t\t} catch (err: any) {\n\t\t\t\t\t\treturn reject(new InsightError(err));\n\t\t\t\t\t}\n\n\t\t\t\t\tlet queryJSON = query;\n\t\t\t\t\t// check that query object has BOTH OPTIONS and WHERE\n\t\t\t\t\tif (Object.prototype.hasOwnProperty.call(query, \"WHERE\") &&\n\t\t\t\t\t\tObject.prototype.hasOwnProperty.call(query, \"OPTIONS\")\n\t\t\t\t\t) {\n\t\t\t\t\t\tlet queryObject = new QueryContainer();\n\n\t\t\t\t\t\t// handleOptions\n\t\t\t\t\t\tqueryObject.handleOptions(queryJSON[\"OPTIONS\" as keyof typeof queryJSON]);\n\n\t\t\t\t\t\t// handleTransformations\n\t\t\t\t\t\tqueryObject.handleTransformations(queryJSON[\"TRANSFORMATIONS\" as keyof typeof queryJSON]);\n\n\t\t\t\t\t\t// handleWhere\n\t\t\t\t\t\tlet results: InsightResult[] = [];\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tresults = queryObject.handleWhere(queryJSON[\"WHERE\" as keyof typeof queryJSON], datasetID,\n\t\t\t\t\t\t\t\tdatasetToQuery);\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\treturn reject(error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// handleSort\n\t\t\t\t\t\tresults = queryObject.handleSort(results);\n\t\t\t\t\t\treturn resolve(results);\n\t\t\t\t\t}\n\t\t\t\t\treturn reject(new InsightError(\"query missing WHERE/OPTIONS blocks\"));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn reject (new InsightError(\"reject\"));\n\t\t});\n\t}\n\n\tpublic listDatasets(): Promise<InsightDataset[]> {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\tlet array: InsightDataset[] = [];\n\t\t\t// ref: https://www.hackinbits.com/articles/js/how-to-iterate-a-map-in-javascript---map-part-2\n\t\t\tthis.map.forEach(function (value, key) {\n\t\t\t\tlet thing: InsightDataset = {\n\t\t\t\t\tid: \"a\",\n\t\t\t\t\tkind: InsightDatasetKind.Sections,\n\t\t\t\t\tnumRows: 0,\n\t\t\t\t};\n\t\t\t\tthing.id = key;\n\t\t\t\tthing.kind = value.kind;\n\t\t\t\tthing.numRows = value.numRows;\n\t\t\t\tarray.push(thing);\n\t\t\t});\n\t\t\treturn resolve(array);\n\t\t});\n\t}\n\n\t// ------------------  HELPER FUNCTIONS ------------------\n\n\n\t// finds the first dataset ID from a query\n\tpublic getDatasetID(query: object): string {\n\t\tconst queryString = JSON.stringify(query);\n\t\tconst indexUnderscore = queryString.indexOf(\"_\");\n\t\tconst indexStartOfID = queryString.lastIndexOf('\"', indexUnderscore) + 1;\n\t\tlet result: string;\n\t\tresult = queryString.substring(indexStartOfID, indexUnderscore);\n\t\treturn result;\n\t}\n\n\tpublic getIndex(queryParsed: string | any, item: string): number {\n\t\tlet index: number = -1;\n\t\tfor (let x = 0; x < queryParsed.length; x++) {\n\t\t\tif (queryParsed[x][0] === item) {\n\t\t\t\tindex = x;\n\t\t\t}\n\t\t}\n\t\treturn index;\n\t}\n}\n\n\n// let rooms: string;\n// rooms = getContentFromArchives(\"campus.zip\");\n// // let roomsBroken = getContentFromArchives(\"campus9buildings.zip\");\n// // let dataset: JSON[] = [];\n// //\n// let facade = new InsightFacade();\n// facade.addDataset(\"rooms\",rooms,InsightDatasetKind.Rooms).then(() => {\n// \tconsole.log(\"yes\");\n// });\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"949536766de05d8e5613e467d01e2f85c9cdc453","contentHash":"55dadcb4f1aeb031ef51afcbf3b27e67f400becd310ecc66512d008317d0943d"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/QueryContainer.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/QueryContainer.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":32}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":64}},"5":{"start":{"line":8,"column":40},"end":{"line":8,"column":82}},"6":{"start":{"line":9,"column":21},"end":{"line":9,"column":59}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":34}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":24}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":26}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":24}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":21}},"13":{"start":{"line":26,"column":26},"end":{"line":26,"column":28}},"14":{"start":{"line":27,"column":23},"end":{"line":27,"column":43}},"15":{"start":{"line":28,"column":8},"end":{"line":48,"column":9}},"16":{"start":{"line":29,"column":12},"end":{"line":35,"column":13}},"17":{"start":{"line":30,"column":32},"end":{"line":30,"column":45}},"18":{"start":{"line":31,"column":16},"end":{"line":34,"column":17}},"19":{"start":{"line":32,"column":42},"end":{"line":32,"column":144}},"20":{"start":{"line":33,"column":20},"end":{"line":33,"column":54}},"21":{"start":{"line":38,"column":28},"end":{"line":38,"column":30}},"22":{"start":{"line":39,"column":12},"end":{"line":45,"column":13}},"23":{"start":{"line":40,"column":32},"end":{"line":40,"column":45}},"24":{"start":{"line":41,"column":16},"end":{"line":44,"column":17}},"25":{"start":{"line":42,"column":42},"end":{"line":42,"column":144}},"26":{"start":{"line":43,"column":20},"end":{"line":43,"column":52}},"27":{"start":{"line":46,"column":12},"end":{"line":46,"column":92}},"28":{"start":{"line":47,"column":12},"end":{"line":47,"column":72}},"29":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"30":{"start":{"line":50,"column":12},"end":{"line":50,"column":80}},"31":{"start":{"line":52,"column":8},"end":{"line":52,"column":27}},"32":{"start":{"line":55,"column":21},"end":{"line":55,"column":23}},"33":{"start":{"line":56,"column":25},"end":{"line":56,"column":27}},"34":{"start":{"line":57,"column":23},"end":{"line":57,"column":35}},"35":{"start":{"line":58,"column":8},"end":{"line":58,"column":34}},"36":{"start":{"line":59,"column":28},"end":{"line":59,"column":30}},"37":{"start":{"line":60,"column":8},"end":{"line":62,"column":9}},"38":{"start":{"line":61,"column":12},"end":{"line":61,"column":59}},"39":{"start":{"line":63,"column":20},"end":{"line":63,"column":21}},"40":{"start":{"line":64,"column":8},"end":{"line":83,"column":9}},"41":{"start":{"line":65,"column":26},"end":{"line":65,"column":42}},"42":{"start":{"line":66,"column":32},"end":{"line":66,"column":34}},"43":{"start":{"line":67,"column":12},"end":{"line":69,"column":13}},"44":{"start":{"line":68,"column":16},"end":{"line":68,"column":62}},"45":{"start":{"line":70,"column":24},"end":{"line":70,"column":81}},"46":{"start":{"line":70,"column":56},"end":{"line":70,"column":80}},"47":{"start":{"line":71,"column":12},"end":{"line":82,"column":13}},"48":{"start":{"line":72,"column":16},"end":{"line":72,"column":41}},"49":{"start":{"line":73,"column":16},"end":{"line":73,"column":24}},"50":{"start":{"line":76,"column":38},"end":{"line":76,"column":102}},"51":{"start":{"line":77,"column":16},"end":{"line":77,"column":45}},"52":{"start":{"line":78,"column":16},"end":{"line":78,"column":46}},"53":{"start":{"line":79,"column":16},"end":{"line":79,"column":32}},"54":{"start":{"line":80,"column":16},"end":{"line":80,"column":50}},"55":{"start":{"line":81,"column":16},"end":{"line":81,"column":24}},"56":{"start":{"line":84,"column":30},"end":{"line":84,"column":112}},"57":{"start":{"line":85,"column":8},"end":{"line":85,"column":37}},"58":{"start":{"line":86,"column":8},"end":{"line":86,"column":22}},"59":{"start":{"line":89,"column":30},"end":{"line":89,"column":32}},"60":{"start":{"line":90,"column":8},"end":{"line":103,"column":9}},"61":{"start":{"line":91,"column":22},"end":{"line":91,"column":39}},"62":{"start":{"line":93,"column":12},"end":{"line":101,"column":13}},"63":{"start":{"line":94,"column":16},"end":{"line":94,"column":34}},"64":{"start":{"line":97,"column":27},"end":{"line":97,"column":47}},"65":{"start":{"line":98,"column":28},"end":{"line":98,"column":48}},"66":{"start":{"line":99,"column":28},"end":{"line":99,"column":39}},"67":{"start":{"line":100,"column":16},"end":{"line":100,"column":61}},"68":{"start":{"line":102,"column":12},"end":{"line":102,"column":39}},"69":{"start":{"line":104,"column":8},"end":{"line":104,"column":31}},"70":{"start":{"line":107,"column":21},"end":{"line":107,"column":22}},"71":{"start":{"line":108,"column":8},"end":{"line":146,"column":9}},"72":{"start":{"line":109,"column":12},"end":{"line":113,"column":13}},"73":{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},"74":{"start":{"line":111,"column":20},"end":{"line":111,"column":47}},"75":{"start":{"line":115,"column":13},"end":{"line":146,"column":9}},"76":{"start":{"line":116,"column":12},"end":{"line":116,"column":30}},"77":{"start":{"line":117,"column":12},"end":{"line":121,"column":13}},"78":{"start":{"line":118,"column":16},"end":{"line":120,"column":17}},"79":{"start":{"line":119,"column":20},"end":{"line":119,"column":47}},"80":{"start":{"line":123,"column":13},"end":{"line":146,"column":9}},"81":{"start":{"line":124,"column":24},"end":{"line":124,"column":51}},"82":{"start":{"line":125,"column":24},"end":{"line":125,"column":25}},"83":{"start":{"line":126,"column":12},"end":{"line":130,"column":13}},"84":{"start":{"line":127,"column":26},"end":{"line":127,"column":69}},"85":{"start":{"line":128,"column":16},"end":{"line":128,"column":61}},"86":{"start":{"line":129,"column":16},"end":{"line":129,"column":24}},"87":{"start":{"line":131,"column":22},"end":{"line":131,"column":46}},"88":{"start":{"line":132,"column":12},"end":{"line":132,"column":44}},"89":{"start":{"line":134,"column":13},"end":{"line":146,"column":9}},"90":{"start":{"line":135,"column":12},"end":{"line":137,"column":13}},"91":{"start":{"line":136,"column":16},"end":{"line":136,"column":44}},"92":{"start":{"line":138,"column":12},"end":{"line":138,"column":47}},"93":{"start":{"line":141,"column":27},"end":{"line":141,"column":29}},"94":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"95":{"start":{"line":143,"column":16},"end":{"line":143,"column":49}},"96":{"start":{"line":145,"column":12},"end":{"line":145,"column":44}},"97":{"start":{"line":147,"column":8},"end":{"line":147,"column":22}},"98":{"start":{"line":150,"column":21},"end":{"line":150,"column":26}},"99":{"start":{"line":151,"column":8},"end":{"line":189,"column":9}},"100":{"start":{"line":152,"column":12},"end":{"line":184,"column":13}},"101":{"start":{"line":153,"column":16},"end":{"line":183,"column":17}},"102":{"start":{"line":154,"column":36},"end":{"line":154,"column":54}},"103":{"start":{"line":155,"column":37},"end":{"line":155,"column":85}},"104":{"start":{"line":156,"column":20},"end":{"line":161,"column":21}},"105":{"start":{"line":156,"column":36},"end":{"line":156,"column":37}},"106":{"start":{"line":157,"column":39},"end":{"line":157,"column":60}},"107":{"start":{"line":158,"column":24},"end":{"line":160,"column":25}},"108":{"start":{"line":159,"column":28},"end":{"line":159,"column":89}},"109":{"start":{"line":162,"column":20},"end":{"line":162,"column":40}},"110":{"start":{"line":164,"column":21},"end":{"line":183,"column":17}},"111":{"start":{"line":165,"column":36},"end":{"line":165,"column":54}},"112":{"start":{"line":166,"column":37},"end":{"line":166,"column":85}},"113":{"start":{"line":167,"column":20},"end":{"line":172,"column":21}},"114":{"start":{"line":167,"column":36},"end":{"line":167,"column":37}},"115":{"start":{"line":168,"column":39},"end":{"line":168,"column":60}},"116":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"117":{"start":{"line":170,"column":28},"end":{"line":170,"column":89}},"118":{"start":{"line":173,"column":20},"end":{"line":173,"column":40}},"119":{"start":{"line":175,"column":21},"end":{"line":183,"column":17}},"120":{"start":{"line":176,"column":20},"end":{"line":176,"column":83}},"121":{"start":{"line":179,"column":30},"end":{"line":179,"column":61}},"122":{"start":{"line":180,"column":32},"end":{"line":180,"column":65}},"123":{"start":{"line":181,"column":37},"end":{"line":181,"column":167}},"124":{"start":{"line":182,"column":20},"end":{"line":182,"column":93}},"125":{"start":{"line":185,"column":12},"end":{"line":185,"column":26}},"126":{"start":{"line":188,"column":12},"end":{"line":188,"column":24}},"127":{"start":{"line":192,"column":27},"end":{"line":192,"column":46}},"128":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"129":{"start":{"line":194,"column":12},"end":{"line":194,"column":51}},"130":{"start":{"line":196,"column":8},"end":{"line":203,"column":9}},"131":{"start":{"line":197,"column":12},"end":{"line":202,"column":13}},"132":{"start":{"line":198,"column":16},"end":{"line":198,"column":36}},"133":{"start":{"line":201,"column":16},"end":{"line":201,"column":52}},"134":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"135":{"start":{"line":205,"column":12},"end":{"line":205,"column":48}},"136":{"start":{"line":207,"column":8},"end":{"line":223,"column":9}},"137":{"start":{"line":208,"column":12},"end":{"line":208,"column":42}},"138":{"start":{"line":210,"column":13},"end":{"line":223,"column":9}},"139":{"start":{"line":211,"column":12},"end":{"line":211,"column":40}},"140":{"start":{"line":213,"column":13},"end":{"line":223,"column":9}},"141":{"start":{"line":214,"column":12},"end":{"line":214,"column":40}},"142":{"start":{"line":217,"column":12},"end":{"line":222,"column":13}},"143":{"start":{"line":218,"column":16},"end":{"line":218,"column":97}},"144":{"start":{"line":221,"column":16},"end":{"line":221,"column":46}},"145":{"start":{"line":226,"column":8},"end":{"line":234,"column":9}},"146":{"start":{"line":227,"column":12},"end":{"line":233,"column":13}},"147":{"start":{"line":228,"column":16},"end":{"line":228,"column":45}},"148":{"start":{"line":231,"column":16},"end":{"line":231,"column":46}},"149":{"start":{"line":232,"column":16},"end":{"line":232,"column":63}},"150":{"start":{"line":235,"column":8},"end":{"line":235,"column":37}},"151":{"start":{"line":238,"column":8},"end":{"line":243,"column":9}},"152":{"start":{"line":239,"column":12},"end":{"line":241,"column":13}},"153":{"start":{"line":240,"column":16},"end":{"line":240,"column":188}},"154":{"start":{"line":242,"column":12},"end":{"line":242,"column":19}},"155":{"start":{"line":244,"column":8},"end":{"line":244,"column":33}},"156":{"start":{"line":245,"column":8},"end":{"line":247,"column":9}},"157":{"start":{"line":246,"column":12},"end":{"line":246,"column":182}},"158":{"start":{"line":248,"column":24},"end":{"line":248,"column":35}},"159":{"start":{"line":249,"column":8},"end":{"line":256,"column":9}},"160":{"start":{"line":250,"column":28},"end":{"line":250,"column":42}},"161":{"start":{"line":251,"column":27},"end":{"line":251,"column":52}},"162":{"start":{"line":252,"column":30},"end":{"line":252,"column":49}},"163":{"start":{"line":253,"column":12},"end":{"line":253,"column":52}},"164":{"start":{"line":254,"column":24},"end":{"line":254,"column":51}},"165":{"start":{"line":255,"column":12},"end":{"line":255,"column":113}},"166":{"start":{"line":257,"column":8},"end":{"line":259,"column":9}},"167":{"start":{"line":258,"column":12},"end":{"line":258,"column":138}},"168":{"start":{"line":262,"column":8},"end":{"line":262,"column":86}},"169":{"start":{"line":265,"column":0},"end":{"line":265,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":4},"end":{"line":17,"column":5}},"loc":{"start":{"line":17,"column":18},"end":{"line":24,"column":5}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":43},"end":{"line":53,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":45},"end":{"line":87,"column":5}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":70,"column":44},"end":{"line":70,"column":45}},"loc":{"start":{"line":70,"column":56},"end":{"line":70,"column":80}},"line":70},"5":{"name":"(anonymous_5)","decl":{"start":{"line":88,"column":4},"end":{"line":88,"column":5}},"loc":{"start":{"line":88,"column":52},"end":{"line":105,"column":5}},"line":88},"6":{"name":"(anonymous_6)","decl":{"start":{"line":106,"column":4},"end":{"line":106,"column":5}},"loc":{"start":{"line":106,"column":38},"end":{"line":148,"column":5}},"line":106},"7":{"name":"(anonymous_7)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":44},"end":{"line":190,"column":5}},"line":149},"8":{"name":"(anonymous_8)","decl":{"start":{"line":191,"column":4},"end":{"line":191,"column":5}},"loc":{"start":{"line":191,"column":65},"end":{"line":224,"column":5}},"line":191},"9":{"name":"(anonymous_9)","decl":{"start":{"line":225,"column":4},"end":{"line":225,"column":5}},"loc":{"start":{"line":225,"column":25},"end":{"line":236,"column":5}},"line":225},"10":{"name":"(anonymous_10)","decl":{"start":{"line":237,"column":4},"end":{"line":237,"column":5}},"loc":{"start":{"line":237,"column":33},"end":{"line":260,"column":5}},"line":237},"11":{"name":"(anonymous_11)","decl":{"start":{"line":261,"column":4},"end":{"line":261,"column":5}},"loc":{"start":{"line":261,"column":22},"end":{"line":263,"column":5}},"line":261}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":28,"column":8},"end":{"line":48,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":48,"column":9}},{"start":{"line":28,"column":8},"end":{"line":48,"column":9}}],"line":28},"4":{"loc":{"start":{"line":31,"column":16},"end":{"line":34,"column":17}},"type":"if","locations":[{"start":{"line":31,"column":16},"end":{"line":34,"column":17}},{"start":{"line":31,"column":16},"end":{"line":34,"column":17}}],"line":31},"5":{"loc":{"start":{"line":41,"column":16},"end":{"line":44,"column":17}},"type":"if","locations":[{"start":{"line":41,"column":16},"end":{"line":44,"column":17}},{"start":{"line":41,"column":16},"end":{"line":44,"column":17}}],"line":41},"6":{"loc":{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},"type":"if","locations":[{"start":{"line":49,"column":8},"end":{"line":51,"column":9}},{"start":{"line":49,"column":8},"end":{"line":51,"column":9}}],"line":49},"7":{"loc":{"start":{"line":71,"column":12},"end":{"line":82,"column":13}},"type":"if","locations":[{"start":{"line":71,"column":12},"end":{"line":82,"column":13}},{"start":{"line":71,"column":12},"end":{"line":82,"column":13}}],"line":71},"8":{"loc":{"start":{"line":93,"column":12},"end":{"line":101,"column":13}},"type":"if","locations":[{"start":{"line":93,"column":12},"end":{"line":101,"column":13}},{"start":{"line":93,"column":12},"end":{"line":101,"column":13}}],"line":93},"9":{"loc":{"start":{"line":108,"column":8},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":108,"column":8},"end":{"line":146,"column":9}},{"start":{"line":108,"column":8},"end":{"line":146,"column":9}}],"line":108},"10":{"loc":{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},"type":"if","locations":[{"start":{"line":110,"column":16},"end":{"line":112,"column":17}},{"start":{"line":110,"column":16},"end":{"line":112,"column":17}}],"line":110},"11":{"loc":{"start":{"line":115,"column":13},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":13},"end":{"line":146,"column":9}},{"start":{"line":115,"column":13},"end":{"line":146,"column":9}}],"line":115},"12":{"loc":{"start":{"line":118,"column":16},"end":{"line":120,"column":17}},"type":"if","locations":[{"start":{"line":118,"column":16},"end":{"line":120,"column":17}},{"start":{"line":118,"column":16},"end":{"line":120,"column":17}}],"line":118},"13":{"loc":{"start":{"line":123,"column":13},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":123,"column":13},"end":{"line":146,"column":9}},{"start":{"line":123,"column":13},"end":{"line":146,"column":9}}],"line":123},"14":{"loc":{"start":{"line":134,"column":13},"end":{"line":146,"column":9}},"type":"if","locations":[{"start":{"line":134,"column":13},"end":{"line":146,"column":9}},{"start":{"line":134,"column":13},"end":{"line":146,"column":9}}],"line":134},"15":{"loc":{"start":{"line":151,"column":8},"end":{"line":189,"column":9}},"type":"if","locations":[{"start":{"line":151,"column":8},"end":{"line":189,"column":9}},{"start":{"line":151,"column":8},"end":{"line":189,"column":9}}],"line":151},"16":{"loc":{"start":{"line":153,"column":16},"end":{"line":183,"column":17}},"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":183,"column":17}},{"start":{"line":153,"column":16},"end":{"line":183,"column":17}}],"line":153},"17":{"loc":{"start":{"line":158,"column":24},"end":{"line":160,"column":25}},"type":"if","locations":[{"start":{"line":158,"column":24},"end":{"line":160,"column":25}},{"start":{"line":158,"column":24},"end":{"line":160,"column":25}}],"line":158},"18":{"loc":{"start":{"line":164,"column":21},"end":{"line":183,"column":17}},"type":"if","locations":[{"start":{"line":164,"column":21},"end":{"line":183,"column":17}},{"start":{"line":164,"column":21},"end":{"line":183,"column":17}}],"line":164},"19":{"loc":{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},"type":"if","locations":[{"start":{"line":169,"column":24},"end":{"line":171,"column":25}},{"start":{"line":169,"column":24},"end":{"line":171,"column":25}}],"line":169},"20":{"loc":{"start":{"line":175,"column":21},"end":{"line":183,"column":17}},"type":"if","locations":[{"start":{"line":175,"column":21},"end":{"line":183,"column":17}},{"start":{"line":175,"column":21},"end":{"line":183,"column":17}}],"line":175},"21":{"loc":{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":195,"column":9}},{"start":{"line":193,"column":8},"end":{"line":195,"column":9}}],"line":193},"22":{"loc":{"start":{"line":196,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":8},"end":{"line":203,"column":9}},{"start":{"line":196,"column":8},"end":{"line":203,"column":9}}],"line":196},"23":{"loc":{"start":{"line":197,"column":12},"end":{"line":202,"column":13}},"type":"if","locations":[{"start":{"line":197,"column":12},"end":{"line":202,"column":13}},{"start":{"line":197,"column":12},"end":{"line":202,"column":13}}],"line":197},"24":{"loc":{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},"type":"if","locations":[{"start":{"line":204,"column":8},"end":{"line":206,"column":9}},{"start":{"line":204,"column":8},"end":{"line":206,"column":9}}],"line":204},"25":{"loc":{"start":{"line":207,"column":8},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":223,"column":9}},{"start":{"line":207,"column":8},"end":{"line":223,"column":9}}],"line":207},"26":{"loc":{"start":{"line":210,"column":13},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":210,"column":13},"end":{"line":223,"column":9}},{"start":{"line":210,"column":13},"end":{"line":223,"column":9}}],"line":210},"27":{"loc":{"start":{"line":213,"column":13},"end":{"line":223,"column":9}},"type":"if","locations":[{"start":{"line":213,"column":13},"end":{"line":223,"column":9}},{"start":{"line":213,"column":13},"end":{"line":223,"column":9}}],"line":213},"28":{"loc":{"start":{"line":217,"column":12},"end":{"line":222,"column":13}},"type":"if","locations":[{"start":{"line":217,"column":12},"end":{"line":222,"column":13}},{"start":{"line":217,"column":12},"end":{"line":222,"column":13}}],"line":217},"29":{"loc":{"start":{"line":226,"column":8},"end":{"line":234,"column":9}},"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":234,"column":9}},{"start":{"line":226,"column":8},"end":{"line":234,"column":9}}],"line":226},"30":{"loc":{"start":{"line":227,"column":12},"end":{"line":233,"column":13}},"type":"if","locations":[{"start":{"line":227,"column":12},"end":{"line":233,"column":13}},{"start":{"line":227,"column":12},"end":{"line":233,"column":13}}],"line":227},"31":{"loc":{"start":{"line":232,"column":27},"end":{"line":232,"column":62}},"type":"cond-expr","locations":[{"start":{"line":232,"column":56},"end":{"line":232,"column":57}},{"start":{"line":232,"column":60},"end":{"line":232,"column":62}}],"line":232},"32":{"loc":{"start":{"line":238,"column":8},"end":{"line":243,"column":9}},"type":"if","locations":[{"start":{"line":238,"column":8},"end":{"line":243,"column":9}},{"start":{"line":238,"column":8},"end":{"line":243,"column":9}}],"line":238}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":1},"f":{"0":1,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/QueryContainer.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/QueryContainer.ts"],"names":[],"mappings":"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","sourcesContent":["import {Dataset, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\nimport {\n\treturnIdentifier, transformQueryToDatasetConvention, transformDatasetToQueryConvention, wildcardMatcher,\n\tsort, createIResWhereHelper\n} from \"./helperFunctionsQueryContainer\";\nimport Decimal from \"decimal.js\";\n\nexport class QueryContainer {\n\n\tpublic fieldsToExtract: string[];\t// keys needed to create InsightResult\n\tpublic group: string[];\t\t\t\t// keys used to group sections together\n\tpublic applyRules: {[key: string]: object};\n\tpublic columns: string[];\t\t\t// only used if there are TRANSFORMATIONS\n\tpublic order: string[];\n\tpublic dir: number;\n\n\tconstructor() {\n\t\tthis.fieldsToExtract = [];\n\t\tthis.group = [];\n\t\tthis.applyRules = {};\n\t\tthis.columns = [];\n\t\tthis.order = [];\n\t\tthis.dir = 1;\t\t// UP = ascending = 1      DOWN = descending = -1\n\t}\n\n\tpublic handleWhere (query: any, datasetID: string, dataset: Dataset): InsightResult[] {\n\t\tlet resultArray: InsightResult[] = [];\n\t\tlet sections = dataset.datasetArray;\n\t\tif (this.group.length === 0) {\n\t\t\tfor (let sec in sections) {\n\t\t\t\tlet mySection = sections[sec];\n\t\t\t\tif (this.applyFilters(query, datasetID, dataset.datasetArray[sec])) {\n\t\t\t\t\tlet myInsightResult = createIResWhereHelper(datasetID, mySection, this.fieldsToExtract);\n\t\t\t\t\tresultArray.push(myInsightResult);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tlet tempArray: InsightResult[] = [];\n\t\t\tfor (let sec in sections) {\n\t\t\t\tlet mySection = sections[sec];\n\t\t\t\tif (this.applyFilters(query, datasetID, dataset.datasetArray[sec])) {\n\t\t\t\t\tlet myInsightResult = createIResWhereHelper(datasetID, mySection, this.fieldsToExtract);\n\t\t\t\t\ttempArray.push(myInsightResult);\n\t\t\t\t}\n\t\t\t}\n\t\t\ttempArray = sort(tempArray, this.group, 1);\n\t\t\tresultArray = this.applyGroupAndRules(tempArray, datasetID);\n\t\t}\n\n\t\tif (resultArray.length > 5000) {\n\t\t\tthrow new ResultTooLargeError(\"Too many results!\");\n\t\t}\n\n\t\treturn resultArray;\n\t}\n\n\tprivate applyGroupAndRules(tempArray: InsightResult[], datasetID: string): InsightResult[] {\n\t\tlet result: InsightResult[] = [];\n\t\tlet indivGroup: InsightResult[] = []; // all insight results in a single group\n\t\tlet firstRes: InsightResult = tempArray[0];\n\t\tindivGroup.push(firstRes);\n\t\tlet lastGroupVals: Array<string | number> = [];\n\t\tfor (let prop in this.group) {\n\t\t\tlastGroupVals.push(firstRes[this.group[prop]]);\n\t\t}\n\t\tlet index: number = 1;\n\t\twhile (index !== tempArray.length) {\n\t\t\tlet thisRes: InsightResult = tempArray[index];\n\t\t\tlet currGroupVals: Array<string | number> = [];\n\t\t\tfor (let prop in this.group) {\n\t\t\t\tcurrGroupVals.push(thisRes[this.group[prop]]);\n\t\t\t}\n\t\t\tlet match = lastGroupVals.every((val, i) => val === currGroupVals[i]);\n\t\t\tif (match) {\n\t\t\t\tindivGroup.push(thisRes);\n\t\t\t\tindex++;\n\t\t\t} else {\n\t\t\t\tlet myInsightResult = this.createIResApplyHelper(datasetID, indivGroup[0], indivGroup);\n\t\t\t\tresult.push(myInsightResult);\n\t\t\t\tlastGroupVals = currGroupVals;\n\t\t\t\tindivGroup = [];\n\t\t\t\tindivGroup.push(tempArray[index]);\n\t\t\t\tindex++;\n\t\t\t}\n\t\t}\n\t\tlet myInsightResult: InsightResult = this.createIResApplyHelper(datasetID, tempArray[tempArray.length - 1],\n\t\t\tindivGroup);\n\t\tresult.push(myInsightResult);\n\t\treturn result;\n\t}\n\n\tprivate createIResApplyHelper(datasetID: string, insRes: InsightResult, group: InsightResult[]): InsightResult {\n\t\tlet myInsightResult: InsightResult = {};\n\t\tfor (let col in this.columns) {\n\t\t\tlet key = this.columns[col];\n\t\t\tlet val: string | number;\n\t\t\tif (key.includes(datasetID)) {\n\t\t\t\tval = insRes[key];\n\t\t\t} else {\n\t\t\t\tlet rule = this.applyRules[key];\n\t\t\t\tlet token = Object.keys(rule)[0];\n\t\t\t\tlet field = rule[token as keyof typeof rule];\n\t\t\t\tval = this.applyTheRule(token, field, group); // apply the rule!!!\n\t\t\t}\n\t\t\tmyInsightResult[key] = val;\n\t\t}\n\t\treturn myInsightResult;\n\t}\n\n\tprivate applyTheRule(token: string, field: string, group: InsightResult[]): number {\n\t\tlet result = 0;\n\t\tif (token === \"MAX\") {\n\t\t\tfor (let res in group) {\n\t\t\t\tif (group[res][field] > result) {\n\t\t\t\t\tresult = group[res][field] as typeof result;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (token === \"MIN\") {\n\t\t\tresult = Infinity;\n\t\t\tfor (let res in group) {\n\t\t\t\tif (group[res][field] < result) {\n\t\t\t\t\tresult = group[res][field] as typeof result;\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (token === \"AVG\") {\n\t\t\tlet total = new Decimal(0);\n\t\t\tlet count = 0;\n\t\t\tfor (let res in group){\n\t\t\t\tlet val = new Decimal(group[res][field] as typeof result);\n\t\t\t\ttotal = Decimal.add(total, val);\n\t\t\t\tcount++;\n\t\t\t}\n\t\t\tlet avg = total.toNumber() / count;\n\t\t\tresult = Number(avg.toFixed(2));\n\t\t} else if (token === \"SUM\") {\n\t\t\tfor (let res in group) {\n\t\t\t\tresult += group[res][field] as typeof result;\n\t\t\t}\n\t\t\tresult = Number(result.toFixed(2));\n\t\t} else { // (token === \"COUNT\")\n\t\t\tlet valArray = [];\n\t\t\tfor (let res in group) {\n\t\t\t\tvalArray.push(group[res][field]);\n\t\t\t}\n\t\t\tresult = new Set(valArray).size;\n\t\t}\n\t\treturn result;\n\t}\n\n\n// Applies the filters in the query to the given section and returns\n\t// true if the section matches all filters, false otherwise\n\tpublic applyFilters(query: any, datasetID: string, section: any): boolean {\n\t\tlet result: boolean = false;\n\t\tif (JSON.stringify(query) !== \"{}\") {  // WHERE block is not empty\n\t\t\t// recursively traverse JSON query object:\n\t\t\t// ref: https://blog.boot.dev/javascript/how-to-recursively-traverse-objects/\n\t\t\tfor (let queryKey in query) {\n\t\t\t\tif (queryKey === \"OR\") {\n\t\t\t\t\tlet firstItem = query[queryKey][0];\n\t\t\t\t\tlet tempResult: boolean = this.applyFilters(firstItem, datasetID, section);\n\t\t\t\t\tfor (let item = 1; item < query[queryKey].length; item++) {\n\t\t\t\t\t\tlet nextItem = query[queryKey][item];\n\t\t\t\t\t\tif (!tempResult) {\n\t\t\t\t\t\t\ttempResult = this.applyFilters(nextItem, datasetID, section);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = tempResult;\n\t\t\t\t} else if (queryKey === \"AND\") {\n\t\t\t\t\tlet firstItem = query[queryKey][0];\n\t\t\t\t\tlet tempResult: boolean = this.applyFilters(firstItem, datasetID, section);\n\t\t\t\t\tfor (let item = 1; item < query[queryKey].length; item++) {\n\t\t\t\t\t\tlet nextItem = query[queryKey][item];\n\t\t\t\t\t\tif (tempResult) {\n\t\t\t\t\t\t\ttempResult = this.applyFilters(nextItem, datasetID, section);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tresult = tempResult;\n\t\t\t\t} else if (queryKey === \"NOT\") {\n\t\t\t\t\treturn !this.applyFilters(query[queryKey], datasetID, section);\n\t\t\t\t} else {\n\t\t\t\t\tlet key = Object.keys(query[queryKey])[0]; \t\t\t\t\t\t// something like: sections_avg\n\t\t\t\t\tlet value = Object.values(query[queryKey])[0];   \t\t\t\t// something like: 40\n\t\t\t\t\tlet identifier = transformQueryToDatasetConvention(returnIdentifier(key));\t// something like: Avg\n\t\t\t\t\tresult = this.doesThisSectionMatch(section, identifier, value, queryKey);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t} else { // empty where block -> return all sections\n\t\t\treturn true;\n\t\t}\n\t}\n\n\t// checks if the given section matches the values from the query for the\n\t// given comparator. Returns true if it matches, false otherwise\n\tpublic doesThisSectionMatch(section: any, identifier: string, value: any, comparator: string): boolean {\n\t\tlet valOfSection = section[identifier];\n\t\tif (identifier === \"id\") {\n\t\t\tvalOfSection = valOfSection.toString();\n\t\t}\n\t\tif (identifier === \"Year\") {\n\t\t\tif (section[\"Section\"] === \"overall\") {\n\t\t\t\tvalOfSection = 1900;\n\t\t\t} else {\n\t\t\t\tvalOfSection = Number(valOfSection);\n\t\t\t}\n\t\t}\n\t\tif (identifier === \"seats\") {\n\t\t\tvalOfSection = Number(valOfSection);\n\t\t}\n\t\tif (comparator === \"EQ\") {\n\t\t\treturn valOfSection === value;\n\t\t} else if (comparator === \"GT\") {\n\t\t\treturn valOfSection > value;\n\t\t} else if (comparator === \"LT\") {\n\t\t\treturn valOfSection < value;\n\t\t} else { // comparator === \"IS\"\n\t\t\tif (value.includes(\"*\")) {\n\t\t\t\treturn wildcardMatcher(valOfSection, value);\n\t\t\t} else {\n\t\t\t\treturn valOfSection === value;\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic handleOptions(query: any) {\n\t\t// if there is an ORDER section, extract the order\n\t\tif (Object.prototype.hasOwnProperty.call(query, \"ORDER\")) {\n\t\t\tif (typeof query.ORDER === \"string\") {\n\t\t\t\tthis.order.push(query.ORDER);\n\t\t\t} else {\n\t\t\t\tthis.order = query.ORDER.keys;\n\t\t\t\tthis.dir = (query.ORDER.dir === \"UP\") ? 1 : -1;\n\t\t\t}\n\t\t}\n\t\tthis.columns = query.COLUMNS;\n\t}\n\n\tpublic handleTransformations(query: any) {\n\t\t// if the query does not have a transformation block\n\t\tif (query === undefined) {\n\t\t\tfor (let col in this.columns) {\n\t\t\t\tthis.fieldsToExtract.push(transformQueryToDatasetConvention(returnIdentifier(this.columns[col])));\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// extracts all the group identifiers and puts them into the group array\n\t\tthis.group = query.GROUP;\n\n\t\t// extracts all the fields from group, and add to fieldsToExtract array\n\t\tfor (let col in this.group) {\n\t\t\tthis.fieldsToExtract.push(transformQueryToDatasetConvention(returnIdentifier(this.group[col])));\n\t\t}\n\n\t\t// extract apply rules, add them to applyRules Object, and add appropriate fields to fieldsToExtract array\n\t\tlet ruleArray = query.APPLY;\n\t\tfor (let col in ruleArray){\n\t\t\tlet applyRule = ruleArray[col];\n\t\t\tlet applyKey = Object.keys(applyRule)[0];\n\t\t\tlet applyKeyObj = applyRule[applyKey as keyof typeof applyRule];\n\n\t\t\t// add rule to applyRules Object\n\t\t\tthis.applyRules[applyKey] = applyKeyObj;\n\n\t\t\t// extract fields from the applyRules and add to fieldsToExtract array\n\t\t\tlet token = Object.keys(applyKeyObj)[0];\n\t\t\tthis.fieldsToExtract.push(returnIdentifier(applyKeyObj[token as keyof typeof applyKeyObj]));\n\t\t}\n\n\t\tfor (let col in this.fieldsToExtract) {\n\t\t\tthis.fieldsToExtract[col] = transformQueryToDatasetConvention(this.fieldsToExtract[col]);\n\t\t}\n\t}\n\n\tpublic handleSort (array: InsightResult[]): InsightResult[] {\n\t\treturn sort(array, this.order, this.dir);\n\t}\n}\n\n\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"dba2ee0b9390b1c5903f1611859006ac11f19053","contentHash":"54e52bb65ac518f9f7f5038469c2fbf65dfacd56493e1c51fe51918526d0f0a6"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/helperFunctionsQueryContainer.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/helperFunctionsQueryContainer.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":214}},"2":{"start":{"line":5,"column":28},"end":{"line":5,"column":46}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":48}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":44}},"5":{"start":{"line":10,"column":22},"end":{"line":10,"column":29}},"6":{"start":{"line":11,"column":4},"end":{"line":11,"column":35}},"7":{"start":{"line":13,"column":0},"end":{"line":13,"column":28}},"8":{"start":{"line":15,"column":4},"end":{"line":44,"column":5}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"10":{"start":{"line":18,"column":9},"end":{"line":44,"column":5}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":25}},"12":{"start":{"line":21,"column":9},"end":{"line":44,"column":5}},"13":{"start":{"line":22,"column":8},"end":{"line":22,"column":24}},"14":{"start":{"line":24,"column":9},"end":{"line":44,"column":5}},"15":{"start":{"line":25,"column":8},"end":{"line":25,"column":28}},"16":{"start":{"line":27,"column":9},"end":{"line":44,"column":5}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":26}},"18":{"start":{"line":30,"column":9},"end":{"line":44,"column":5}},"19":{"start":{"line":31,"column":8},"end":{"line":31,"column":23}},"20":{"start":{"line":33,"column":9},"end":{"line":44,"column":5}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":22}},"22":{"start":{"line":36,"column":9},"end":{"line":44,"column":5}},"23":{"start":{"line":37,"column":8},"end":{"line":37,"column":23}},"24":{"start":{"line":39,"column":9},"end":{"line":44,"column":5}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":23}},"26":{"start":{"line":42,"column":9},"end":{"line":44,"column":5}},"27":{"start":{"line":43,"column":8},"end":{"line":43,"column":24}},"28":{"start":{"line":45,"column":4},"end":{"line":45,"column":17}},"29":{"start":{"line":47,"column":0},"end":{"line":47,"column":78}},"30":{"start":{"line":49,"column":4},"end":{"line":78,"column":5}},"31":{"start":{"line":50,"column":8},"end":{"line":50,"column":23}},"32":{"start":{"line":52,"column":9},"end":{"line":78,"column":5}},"33":{"start":{"line":53,"column":8},"end":{"line":53,"column":21}},"34":{"start":{"line":55,"column":9},"end":{"line":78,"column":5}},"35":{"start":{"line":56,"column":8},"end":{"line":56,"column":24}},"36":{"start":{"line":58,"column":9},"end":{"line":78,"column":5}},"37":{"start":{"line":59,"column":8},"end":{"line":59,"column":29}},"38":{"start":{"line":61,"column":9},"end":{"line":78,"column":5}},"39":{"start":{"line":62,"column":8},"end":{"line":62,"column":23}},"40":{"start":{"line":64,"column":9},"end":{"line":78,"column":5}},"41":{"start":{"line":65,"column":8},"end":{"line":65,"column":23}},"42":{"start":{"line":67,"column":9},"end":{"line":78,"column":5}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":22}},"44":{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},"45":{"start":{"line":71,"column":8},"end":{"line":71,"column":23}},"46":{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},"47":{"start":{"line":74,"column":8},"end":{"line":74,"column":23}},"48":{"start":{"line":76,"column":9},"end":{"line":78,"column":5}},"49":{"start":{"line":77,"column":8},"end":{"line":77,"column":24}},"50":{"start":{"line":79,"column":4},"end":{"line":79,"column":17}},"51":{"start":{"line":81,"column":0},"end":{"line":81,"column":78}},"52":{"start":{"line":83,"column":27},"end":{"line":83,"column":60}},"53":{"start":{"line":84,"column":30},"end":{"line":84,"column":48}},"54":{"start":{"line":85,"column":4},"end":{"line":99,"column":5}},"55":{"start":{"line":86,"column":33},"end":{"line":86,"column":57}},"56":{"start":{"line":87,"column":8},"end":{"line":92,"column":9}},"57":{"start":{"line":88,"column":35},"end":{"line":88,"column":59}},"58":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"59":{"start":{"line":90,"column":16},"end":{"line":90,"column":28}},"60":{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},"61":{"start":{"line":94,"column":35},"end":{"line":94,"column":84}},"62":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"63":{"start":{"line":96,"column":16},"end":{"line":96,"column":28}},"64":{"start":{"line":100,"column":4},"end":{"line":105,"column":5}},"65":{"start":{"line":101,"column":31},"end":{"line":101,"column":80}},"66":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"67":{"start":{"line":103,"column":12},"end":{"line":103,"column":24}},"68":{"start":{"line":106,"column":4},"end":{"line":106,"column":17}},"69":{"start":{"line":108,"column":0},"end":{"line":108,"column":42}},"70":{"start":{"line":110,"column":26},"end":{"line":110,"column":28}},"71":{"start":{"line":111,"column":4},"end":{"line":134,"column":5}},"72":{"start":{"line":112,"column":21},"end":{"line":112,"column":95}},"73":{"start":{"line":113,"column":27},"end":{"line":113,"column":64}},"74":{"start":{"line":114,"column":21},"end":{"line":114,"column":23}},"75":{"start":{"line":115,"column":8},"end":{"line":132,"column":9}},"76":{"start":{"line":116,"column":27},"end":{"line":116,"column":57}},"77":{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},"78":{"start":{"line":118,"column":16},"end":{"line":118,"column":30}},"79":{"start":{"line":121,"column":16},"end":{"line":121,"column":46}},"80":{"start":{"line":124,"column":13},"end":{"line":132,"column":9}},"81":{"start":{"line":125,"column":12},"end":{"line":125,"column":45}},"82":{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},"83":{"start":{"line":128,"column":12},"end":{"line":128,"column":42}},"84":{"start":{"line":131,"column":12},"end":{"line":131,"column":34}},"85":{"start":{"line":133,"column":8},"end":{"line":133,"column":41}},"86":{"start":{"line":135,"column":4},"end":{"line":135,"column":27}},"87":{"start":{"line":137,"column":0},"end":{"line":137,"column":54}},"88":{"start":{"line":139,"column":4},"end":{"line":146,"column":7}},"89":{"start":{"line":140,"column":8},"end":{"line":145,"column":14}},"90":{"start":{"line":141,"column":25},"end":{"line":141,"column":67}},"91":{"start":{"line":142,"column":12},"end":{"line":142,"column":34}},"92":{"start":{"line":143,"column":20},"end":{"line":143,"column":34}},"93":{"start":{"line":144,"column":12},"end":{"line":144,"column":21}},"94":{"start":{"line":148,"column":0},"end":{"line":148,"column":20}}},"fnMap":{"0":{"name":"returnIdentifier","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":25}},"loc":{"start":{"line":4,"column":33},"end":{"line":7,"column":1}},"line":4},"1":{"name":"getValue","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":17}},"loc":{"start":{"line":9,"column":39},"end":{"line":12,"column":1}},"line":9},"2":{"name":"transformQueryToDatasetConvention","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":42}},"loc":{"start":{"line":14,"column":50},"end":{"line":46,"column":1}},"line":14},"3":{"name":"transformDatasetToQueryConvention","decl":{"start":{"line":48,"column":9},"end":{"line":48,"column":42}},"loc":{"start":{"line":48,"column":50},"end":{"line":80,"column":1}},"line":48},"4":{"name":"wildcardMatcher","decl":{"start":{"line":82,"column":9},"end":{"line":82,"column":24}},"loc":{"start":{"line":82,"column":53},"end":{"line":107,"column":1}},"line":82},"5":{"name":"createIResWhereHelper","decl":{"start":{"line":109,"column":9},"end":{"line":109,"column":30}},"loc":{"start":{"line":109,"column":66},"end":{"line":136,"column":1}},"line":109},"6":{"name":"sort","decl":{"start":{"line":138,"column":9},"end":{"line":138,"column":13}},"loc":{"start":{"line":138,"column":32},"end":{"line":147,"column":1}},"line":138},"7":{"name":"(anonymous_7)","decl":{"start":{"line":139,"column":22},"end":{"line":139,"column":23}},"loc":{"start":{"line":139,"column":38},"end":{"line":146,"column":5}},"line":139},"8":{"name":"(anonymous_8)","decl":{"start":{"line":140,"column":27},"end":{"line":140,"column":28}},"loc":{"start":{"line":140,"column":46},"end":{"line":145,"column":9}},"line":140}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":4},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":44,"column":5}},{"start":{"line":15,"column":4},"end":{"line":44,"column":5}}],"line":15},"1":{"loc":{"start":{"line":18,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":9},"end":{"line":44,"column":5}},{"start":{"line":18,"column":9},"end":{"line":44,"column":5}}],"line":18},"2":{"loc":{"start":{"line":21,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":21,"column":9},"end":{"line":44,"column":5}},{"start":{"line":21,"column":9},"end":{"line":44,"column":5}}],"line":21},"3":{"loc":{"start":{"line":24,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":24,"column":9},"end":{"line":44,"column":5}},{"start":{"line":24,"column":9},"end":{"line":44,"column":5}}],"line":24},"4":{"loc":{"start":{"line":27,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":44,"column":5}},{"start":{"line":27,"column":9},"end":{"line":44,"column":5}}],"line":27},"5":{"loc":{"start":{"line":30,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":30,"column":9},"end":{"line":44,"column":5}},{"start":{"line":30,"column":9},"end":{"line":44,"column":5}}],"line":30},"6":{"loc":{"start":{"line":33,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":44,"column":5}},{"start":{"line":33,"column":9},"end":{"line":44,"column":5}}],"line":33},"7":{"loc":{"start":{"line":36,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":36,"column":9},"end":{"line":44,"column":5}},{"start":{"line":36,"column":9},"end":{"line":44,"column":5}}],"line":36},"8":{"loc":{"start":{"line":39,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":39,"column":9},"end":{"line":44,"column":5}},{"start":{"line":39,"column":9},"end":{"line":44,"column":5}}],"line":39},"9":{"loc":{"start":{"line":42,"column":9},"end":{"line":44,"column":5}},"type":"if","locations":[{"start":{"line":42,"column":9},"end":{"line":44,"column":5}},{"start":{"line":42,"column":9},"end":{"line":44,"column":5}}],"line":42},"10":{"loc":{"start":{"line":49,"column":4},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":78,"column":5}},{"start":{"line":49,"column":4},"end":{"line":78,"column":5}}],"line":49},"11":{"loc":{"start":{"line":52,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":78,"column":5}},{"start":{"line":52,"column":9},"end":{"line":78,"column":5}}],"line":52},"12":{"loc":{"start":{"line":55,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":9},"end":{"line":78,"column":5}},{"start":{"line":55,"column":9},"end":{"line":78,"column":5}}],"line":55},"13":{"loc":{"start":{"line":58,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":58,"column":9},"end":{"line":78,"column":5}},{"start":{"line":58,"column":9},"end":{"line":78,"column":5}}],"line":58},"14":{"loc":{"start":{"line":61,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":61,"column":9},"end":{"line":78,"column":5}},{"start":{"line":61,"column":9},"end":{"line":78,"column":5}}],"line":61},"15":{"loc":{"start":{"line":64,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":64,"column":9},"end":{"line":78,"column":5}},{"start":{"line":64,"column":9},"end":{"line":78,"column":5}}],"line":64},"16":{"loc":{"start":{"line":67,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":67,"column":9},"end":{"line":78,"column":5}},{"start":{"line":67,"column":9},"end":{"line":78,"column":5}}],"line":67},"17":{"loc":{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":70,"column":9},"end":{"line":78,"column":5}},{"start":{"line":70,"column":9},"end":{"line":78,"column":5}}],"line":70},"18":{"loc":{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":73,"column":9},"end":{"line":78,"column":5}},{"start":{"line":73,"column":9},"end":{"line":78,"column":5}}],"line":73},"19":{"loc":{"start":{"line":76,"column":9},"end":{"line":78,"column":5}},"type":"if","locations":[{"start":{"line":76,"column":9},"end":{"line":78,"column":5}},{"start":{"line":76,"column":9},"end":{"line":78,"column":5}}],"line":76},"20":{"loc":{"start":{"line":85,"column":4},"end":{"line":99,"column":5}},"type":"if","locations":[{"start":{"line":85,"column":4},"end":{"line":99,"column":5}},{"start":{"line":85,"column":4},"end":{"line":99,"column":5}}],"line":85},"21":{"loc":{"start":{"line":87,"column":8},"end":{"line":92,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":92,"column":9}},{"start":{"line":87,"column":8},"end":{"line":92,"column":9}}],"line":87},"22":{"loc":{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},"type":"if","locations":[{"start":{"line":89,"column":12},"end":{"line":91,"column":13}},{"start":{"line":89,"column":12},"end":{"line":91,"column":13}}],"line":89},"23":{"loc":{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":98,"column":9}},{"start":{"line":93,"column":8},"end":{"line":98,"column":9}}],"line":93},"24":{"loc":{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},"type":"if","locations":[{"start":{"line":95,"column":12},"end":{"line":97,"column":13}},{"start":{"line":95,"column":12},"end":{"line":97,"column":13}}],"line":95},"25":{"loc":{"start":{"line":100,"column":4},"end":{"line":105,"column":5}},"type":"if","locations":[{"start":{"line":100,"column":4},"end":{"line":105,"column":5}},{"start":{"line":100,"column":4},"end":{"line":105,"column":5}}],"line":100},"26":{"loc":{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},"type":"if","locations":[{"start":{"line":102,"column":8},"end":{"line":104,"column":9}},{"start":{"line":102,"column":8},"end":{"line":104,"column":9}}],"line":102},"27":{"loc":{"start":{"line":115,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":132,"column":9}},{"start":{"line":115,"column":8},"end":{"line":132,"column":9}}],"line":115},"28":{"loc":{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},"type":"if","locations":[{"start":{"line":117,"column":12},"end":{"line":122,"column":13}},{"start":{"line":117,"column":12},"end":{"line":122,"column":13}}],"line":117},"29":{"loc":{"start":{"line":124,"column":13},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":13},"end":{"line":132,"column":9}},{"start":{"line":124,"column":13},"end":{"line":132,"column":9}}],"line":124},"30":{"loc":{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":13},"end":{"line":132,"column":9}},{"start":{"line":127,"column":13},"end":{"line":132,"column":9}}],"line":127},"31":{"loc":{"start":{"line":141,"column":25},"end":{"line":141,"column":67}},"type":"cond-expr","locations":[{"start":{"line":141,"column":41},"end":{"line":141,"column":43}},{"start":{"line":141,"column":46},"end":{"line":141,"column":67}}],"line":141},"32":{"loc":{"start":{"line":141,"column":46},"end":{"line":141,"column":67}},"type":"cond-expr","locations":[{"start":{"line":141,"column":62},"end":{"line":141,"column":63}},{"start":{"line":141,"column":66},"end":{"line":141,"column":67}}],"line":141},"33":{"loc":{"start":{"line":143,"column":20},"end":{"line":143,"column":34}},"type":"binary-expr","locations":[{"start":{"line":143,"column":20},"end":{"line":143,"column":24}},{"start":{"line":143,"column":28},"end":{"line":143,"column":34}}],"line":143}},"s":{"0":1,"1":1,"2":0,"3":0,"4":1,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":1,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/helperFunctionsQueryContainer.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/model/helperFunctionsQueryContainer.ts"],"names":[],"mappings":"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","sourcesContent":["import {Dataset, InsightError, InsightResult, ResultTooLargeError} from \"../controller/IInsightFacade\";\n\n\n// returns the identifier after an underscore\nexport function returnIdentifier(query: string): string {\n\tconst indexUnderscore = query.indexOf(\"_\");\n\treturn query.substring(indexUnderscore + 1);\n}\n// return value after identifier in a string\n// Linda -> probably want to refactor returnValueToSearch and doesThisSectionMatch to just use this function instead\nexport function getValue(section: any, identifier: string): string | number {\n\tlet sectionJSON = section;\n\treturn sectionJSON[identifier];\n}\n// transform field from naming convention in query to naming convention in dataset\nexport function transformQueryToDatasetConvention(field: string): string {\n\tif (field === \"uuid\") {\n\t\tfield = \"id\";\n\t} else if (field === \"id\") {\n\t\tfield = \"Course\";\n\t} else if (field === \"title\") {\n\t\tfield = \"Title\";\n\t} else if (field === \"instructor\") {\n\t\tfield = \"Professor\";\n\t} else if (field === \"dept\") {\n\t\tfield = \"Subject\";\n\t} else if (field === \"year\") {\n\t\tfield = \"Year\";\n\t} else if (field === \"avg\") {\n\t\tfield = \"Avg\";\n\t} else if (field === \"pass\") {\n\t\tfield = \"Pass\";\n\t} else if (field === \"fail\") {\n\t\tfield = \"Fail\";\n\t} else if (field === \"audit\") {\n\t\tfield = \"Audit\";\n\t}\n\treturn field;\t\t\t\t\t// used for rooms keys and applyKeys\n}\n// transform field from naming convention in dataset to naming convention in query\nexport function transformDatasetToQueryConvention(field: string): string {\n\tif (field === \"id\") {\n\t\tfield = \"uuid\";\n\t} else if (field === \"Course\") {\n\t\tfield = \"id\";\n\t} else if (field === \"Title\") {\n\t\tfield = \"title\";\n\t} else if (field === \"Professor\") {\n\t\tfield = \"instructor\";\n\t} else if (field === \"Subject\") {\n\t\tfield = \"dept\";\n\t} else if (field === \"Year\") {\n\t\tfield = \"year\";\n\t} else if (field === \"Avg\") {\n\t\tfield = \"avg\";\n\t} else if (field === \"Pass\") {\n\t\tfield = \"pass\";\n\t} else if (field === \"Fail\") {\n\t\tfield = \"fail\";\n\t} else if (field === \"Audit\") {\n\t\tfield = \"audit\";\n\t}\n\treturn field;\t\t\t\t\t\t// used for rooms keys and applyKeys\n}\n\nexport function wildcardMatcher (stringToCheck: string, queryString: string): boolean {\n\tlet countOfAsterisks = queryString.split(\"*\").length - 1;\n\tlet lengthOfQueryString = queryString.length;\n\tif (countOfAsterisks === 1) {\t\t\t\t\t\t\t\t// CASE 1: When there is 1 asterisk\n\t\tlet positionOfAsterisk = queryString.indexOf(\"*\");\n\t\tif (positionOfAsterisk === 0) { \t\t\t\t\t\t// Asterisk is at start of string\n\t\t\tlet subStringToMatch = queryString.substring(1);\n\t\t\tif (stringToCheck.endsWith(subStringToMatch)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\tif (positionOfAsterisk === lengthOfQueryString - 1) { \t// Asterisk is at end of string\n\t\t\tlet subStringToMatch = queryString.substring(0, lengthOfQueryString - 1);\n\t\t\tif (stringToCheck.startsWith(subStringToMatch)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t}\n\tif (countOfAsterisks === 2) {\n\t\tlet subStringToMatch = queryString.substring(1, lengthOfQueryString - 1);\n\t\tif (stringToCheck.includes(subStringToMatch)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\nexport function createIResWhereHelper(datasetID: string, mySection: JSON, fieldsArray: string[]): InsightResult {\n\tlet myInsightResult: InsightResult = {};\n\tfor (let col in fieldsArray) {\n\t\tlet keyCol = datasetID.concat(\"_\", transformDatasetToQueryConvention(fieldsArray[col]));\n\t\tlet valOfSection = getValue(mySection, fieldsArray[col]);\n\t\tlet keyVal: string | number = \"\";\n\t\tif (keyCol === datasetID + \"_year\") {\n\t\t\t// need to check if sections = overall, if yes, year = 1900\n\t\t\tlet secField = getValue(mySection, \"Section\");\n\t\t\tif (secField === \"overall\") {\n\t\t\t\tkeyVal = 1900;\n\t\t\t} else {\n\t\t\t\tkeyVal = Number(valOfSection); \t// need to convert year to number\n\t\t\t}\n\t\t} else if (keyCol === datasetID + \"_uuid\") {\n\t\t\tkeyVal = valOfSection.toString();\t// need to convert uuid to string\n\t\t} else if (keyCol === datasetID + \"_seats\") {\n\t\t\tkeyVal = Number(valOfSection);\t\t// need to convert seats to number\n\t\t} else {\n\t\t\tkeyVal = valOfSection;\n\t\t}\n\t\tmyInsightResult[keyCol] = keyVal;\n\t}\n\treturn myInsightResult;\n}\n\n// sorts array by string of keys, using sortByThenBy logic, in ascending or descending order based on dir\n// Order of keys determines how ties are broken\nexport function sort (array: InsightResult[], keys: string[], dir: number): InsightResult[] {\n\t// sorting array of objects by list of keys, dynamically: https://stackoverflow.com/questions/41808710/\n\t// sort-an-array-of-objects-by-dynamically-provided-list-of-object-properties-in-a\n\n\treturn array.sort(function(a, b) {\n\t\t// generate compare function return value by iterating over the properties array\n\t\treturn keys.reduce(function(bool, k) {\n\t\t\t// if previous compare result is `0` then compare with the next property value and return result\n\t\t\tlet result = (a[k] < b[k]) ? -1 : (a[k] > b[k]) ? 1 : 0;\n\t\t\tresult = result * dir;\n\t\t\tlet r = bool || result;\n\t\t\treturn r;\n\t\t}, 0);   // set initial value as 0\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4288b0a821317430f4cd694b7495e41ac88a476","contentHash":"6632f0b6482826d7a1f544bad26a17d61fe767b6344d10139aff2764a0617c68"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsAddDataset.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsAddDataset.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":182}},"4":{"start":{"line":7,"column":16},"end":{"line":7,"column":49}},"5":{"start":{"line":8,"column":25},"end":{"line":8,"column":52}},"6":{"start":{"line":9,"column":19},"end":{"line":9,"column":55}},"7":{"start":{"line":10,"column":19},"end":{"line":10,"column":27}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":45}},"9":{"start":{"line":13,"column":4},"end":{"line":32,"column":7}},"10":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":82}},"12":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"13":{"start":{"line":18,"column":12},"end":{"line":18,"column":81}},"14":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"15":{"start":{"line":21,"column":12},"end":{"line":21,"column":87}},"16":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"17":{"start":{"line":24,"column":12},"end":{"line":24,"column":113}},"18":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"19":{"start":{"line":27,"column":12},"end":{"line":27,"column":39}},"20":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"21":{"start":{"line":30,"column":12},"end":{"line":30,"column":36}},"22":{"start":{"line":34,"column":0},"end":{"line":34,"column":40}},"23":{"start":{"line":36,"column":4},"end":{"line":74,"column":7}},"24":{"start":{"line":37,"column":18},"end":{"line":37,"column":39}},"25":{"start":{"line":38,"column":28},"end":{"line":38,"column":30}},"26":{"start":{"line":39,"column":27},"end":{"line":39,"column":29}},"27":{"start":{"line":40,"column":8},"end":{"line":73,"column":11}},"28":{"start":{"line":42,"column":12},"end":{"line":44,"column":15}},"29":{"start":{"line":43,"column":16},"end":{"line":43,"column":57}},"30":{"start":{"line":47,"column":12},"end":{"line":47,"column":46}},"31":{"start":{"line":50,"column":12},"end":{"line":55,"column":13}},"32":{"start":{"line":51,"column":37},"end":{"line":51,"column":56}},"33":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"34":{"start":{"line":53,"column":20},"end":{"line":53,"column":54}},"35":{"start":{"line":57,"column":12},"end":{"line":63,"column":13}},"36":{"start":{"line":58,"column":16},"end":{"line":62,"column":19}},"37":{"start":{"line":59,"column":20},"end":{"line":61,"column":21}},"38":{"start":{"line":60,"column":24},"end":{"line":60,"column":46}},"39":{"start":{"line":64,"column":12},"end":{"line":69,"column":13}},"40":{"start":{"line":65,"column":16},"end":{"line":65,"column":94}},"41":{"start":{"line":68,"column":16},"end":{"line":68,"column":47}},"42":{"start":{"line":72,"column":12},"end":{"line":72,"column":109}},"43":{"start":{"line":76,"column":0},"end":{"line":76,"column":50}},"44":{"start":{"line":78,"column":20},"end":{"line":78,"column":40}},"45":{"start":{"line":79,"column":17},"end":{"line":88,"column":35}},"46":{"start":{"line":89,"column":4},"end":{"line":89,"column":18}},"47":{"start":{"line":91,"column":0},"end":{"line":91,"column":46}},"48":{"start":{"line":93,"column":4},"end":{"line":93,"column":43}},"49":{"start":{"line":94,"column":20},"end":{"line":94,"column":56}},"50":{"start":{"line":95,"column":4},"end":{"line":99,"column":5}},"51":{"start":{"line":96,"column":8},"end":{"line":96,"column":30}},"52":{"start":{"line":97,"column":24},"end":{"line":97,"column":84}},"53":{"start":{"line":98,"column":8},"end":{"line":98,"column":63}},"54":{"start":{"line":101,"column":0},"end":{"line":101,"column":38}},"55":{"start":{"line":103,"column":4},"end":{"line":122,"column":7}},"56":{"start":{"line":104,"column":37},"end":{"line":106,"column":9}},"57":{"start":{"line":107,"column":8},"end":{"line":121,"column":11}},"58":{"start":{"line":109,"column":12},"end":{"line":109,"column":62}},"59":{"start":{"line":110,"column":12},"end":{"line":110,"column":80}},"60":{"start":{"line":113,"column":12},"end":{"line":113,"column":41}},"61":{"start":{"line":114,"column":12},"end":{"line":114,"column":90}},"62":{"start":{"line":117,"column":12},"end":{"line":117,"column":33}},"63":{"start":{"line":120,"column":12},"end":{"line":120,"column":105}},"64":{"start":{"line":124,"column":0},"end":{"line":124,"column":48}},"65":{"start":{"line":126,"column":4},"end":{"line":145,"column":7}},"66":{"start":{"line":127,"column":8},"end":{"line":144,"column":11}},"67":{"start":{"line":129,"column":12},"end":{"line":129,"column":61}},"68":{"start":{"line":132,"column":12},"end":{"line":138,"column":13}},"69":{"start":{"line":133,"column":16},"end":{"line":133,"column":38}},"70":{"start":{"line":134,"column":16},"end":{"line":137,"column":17}},"71":{"start":{"line":135,"column":20},"end":{"line":135,"column":79}},"72":{"start":{"line":136,"column":20},"end":{"line":136,"column":26}},"73":{"start":{"line":139,"column":12},"end":{"line":139,"column":43}},"74":{"start":{"line":142,"column":12},"end":{"line":142,"column":29}},"75":{"start":{"line":143,"column":12},"end":{"line":143,"column":92}},"76":{"start":{"line":147,"column":0},"end":{"line":147,"column":68}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"checkIdAndKind","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":23}},"loc":{"start":{"line":12,"column":39},"end":{"line":33,"column":1}},"line":12},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":23},"end":{"line":13,"column":24}},"loc":{"start":{"line":13,"column":50},"end":{"line":32,"column":5}},"line":13},"3":{"name":"readSectionsContent","decl":{"start":{"line":35,"column":9},"end":{"line":35,"column":28}},"loc":{"start":{"line":35,"column":47},"end":{"line":75,"column":1}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":23},"end":{"line":36,"column":24}},"loc":{"start":{"line":36,"column":50},"end":{"line":74,"column":5}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":41,"column":18},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":29},"end":{"line":45,"column":9}},"line":41},"6":{"name":"(anonymous_6)","decl":{"start":{"line":42,"column":45},"end":{"line":42,"column":46}},"loc":{"start":{"line":42,"column":75},"end":{"line":44,"column":13}},"line":42},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":18},"end":{"line":46,"column":19}},"loc":{"start":{"line":46,"column":24},"end":{"line":48,"column":9}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":49,"column":18},"end":{"line":49,"column":19}},"loc":{"start":{"line":49,"column":33},"end":{"line":70,"column":9}},"line":49},"9":{"name":"(anonymous_9)","decl":{"start":{"line":58,"column":38},"end":{"line":58,"column":39}},"loc":{"start":{"line":58,"column":51},"end":{"line":62,"column":17}},"line":58},"10":{"name":"(anonymous_10)","decl":{"start":{"line":71,"column":19},"end":{"line":71,"column":20}},"loc":{"start":{"line":71,"column":34},"end":{"line":73,"column":9}},"line":71},"11":{"name":"checkValidSection","decl":{"start":{"line":77,"column":9},"end":{"line":77,"column":26}},"loc":{"start":{"line":77,"column":36},"end":{"line":90,"column":1}},"line":77},"12":{"name":"readDirectory","decl":{"start":{"line":92,"column":9},"end":{"line":92,"column":22}},"loc":{"start":{"line":92,"column":34},"end":{"line":100,"column":1}},"line":92},"13":{"name":"addToPersistFolder","decl":{"start":{"line":102,"column":9},"end":{"line":102,"column":27}},"loc":{"start":{"line":102,"column":40},"end":{"line":123,"column":1}},"line":102},"14":{"name":"(anonymous_14)","decl":{"start":{"line":103,"column":23},"end":{"line":103,"column":24}},"loc":{"start":{"line":103,"column":50},"end":{"line":122,"column":5}},"line":103},"15":{"name":"(anonymous_15)","decl":{"start":{"line":108,"column":18},"end":{"line":108,"column":19}},"loc":{"start":{"line":108,"column":24},"end":{"line":111,"column":9}},"line":108},"16":{"name":"(anonymous_16)","decl":{"start":{"line":112,"column":18},"end":{"line":112,"column":19}},"loc":{"start":{"line":112,"column":31},"end":{"line":115,"column":9}},"line":112},"17":{"name":"(anonymous_17)","decl":{"start":{"line":116,"column":18},"end":{"line":116,"column":19}},"loc":{"start":{"line":116,"column":24},"end":{"line":118,"column":9}},"line":116},"18":{"name":"(anonymous_18)","decl":{"start":{"line":119,"column":19},"end":{"line":119,"column":20}},"loc":{"start":{"line":119,"column":28},"end":{"line":121,"column":9}},"line":119},"19":{"name":"deleteDatasetFromPersistence","decl":{"start":{"line":125,"column":9},"end":{"line":125,"column":37}},"loc":{"start":{"line":125,"column":48},"end":{"line":146,"column":1}},"line":125},"20":{"name":"(anonymous_20)","decl":{"start":{"line":126,"column":23},"end":{"line":126,"column":24}},"loc":{"start":{"line":126,"column":50},"end":{"line":145,"column":5}},"line":126},"21":{"name":"(anonymous_21)","decl":{"start":{"line":128,"column":18},"end":{"line":128,"column":19}},"loc":{"start":{"line":128,"column":24},"end":{"line":130,"column":9}},"line":128},"22":{"name":"(anonymous_22)","decl":{"start":{"line":131,"column":18},"end":{"line":131,"column":19}},"loc":{"start":{"line":131,"column":33},"end":{"line":140,"column":9}},"line":131},"23":{"name":"(anonymous_23)","decl":{"start":{"line":141,"column":19},"end":{"line":141,"column":20}},"loc":{"start":{"line":141,"column":28},"end":{"line":144,"column":9}},"line":141}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":16,"column":9}},{"start":{"line":14,"column":8},"end":{"line":16,"column":9}}],"line":14},"4":{"loc":{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},"type":"if","locations":[{"start":{"line":17,"column":8},"end":{"line":19,"column":9}},{"start":{"line":17,"column":8},"end":{"line":19,"column":9}}],"line":17},"5":{"loc":{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":20,"column":8},"end":{"line":22,"column":9}},{"start":{"line":20,"column":8},"end":{"line":22,"column":9}}],"line":20},"6":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"7":{"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":119}},"type":"binary-expr","locations":[{"start":{"line":23,"column":12},"end":{"line":23,"column":65}},{"start":{"line":23,"column":69},"end":{"line":23,"column":119}}],"line":23},"8":{"loc":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},{"start":{"line":26,"column":8},"end":{"line":28,"column":9}}],"line":26},"9":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29},"10":{"loc":{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},"type":"if","locations":[{"start":{"line":52,"column":16},"end":{"line":54,"column":17}},{"start":{"line":52,"column":16},"end":{"line":54,"column":17}}],"line":52},"11":{"loc":{"start":{"line":59,"column":20},"end":{"line":61,"column":21}},"type":"if","locations":[{"start":{"line":59,"column":20},"end":{"line":61,"column":21}},{"start":{"line":59,"column":20},"end":{"line":61,"column":21}}],"line":59},"12":{"loc":{"start":{"line":64,"column":12},"end":{"line":69,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":69,"column":13}},{"start":{"line":64,"column":12},"end":{"line":69,"column":13}}],"line":64},"13":{"loc":{"start":{"line":79,"column":17},"end":{"line":88,"column":35}},"type":"binary-expr","locations":[{"start":{"line":79,"column":17},"end":{"line":79,"column":41}},{"start":{"line":80,"column":8},"end":{"line":80,"column":36}},{"start":{"line":81,"column":8},"end":{"line":81,"column":35}},{"start":{"line":82,"column":8},"end":{"line":82,"column":39}},{"start":{"line":83,"column":8},"end":{"line":83,"column":37}},{"start":{"line":84,"column":8},"end":{"line":84,"column":34}},{"start":{"line":85,"column":8},"end":{"line":85,"column":33}},{"start":{"line":86,"column":8},"end":{"line":86,"column":34}},{"start":{"line":87,"column":8},"end":{"line":87,"column":34}},{"start":{"line":88,"column":8},"end":{"line":88,"column":35}}],"line":79},"14":{"loc":{"start":{"line":134,"column":16},"end":{"line":137,"column":17}},"type":"if","locations":[{"start":{"line":134,"column":16},"end":{"line":137,"column":17}},{"start":{"line":134,"column":16},"end":{"line":137,"column":17}}],"line":134}},"s":{"0":1,"1":2,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":24,"10":24,"11":1,"12":23,"13":2,"14":21,"15":2,"16":19,"17":0,"18":19,"19":14,"20":5,"21":5,"22":1,"23":14,"24":14,"25":14,"26":14,"27":14,"28":13,"29":6080,"30":13,"31":13,"32":6080,"33":6080,"34":3644,"35":13,"36":3644,"37":66314,"38":66313,"39":13,"40":3,"41":10,"42":1,"43":1,"44":66314,"45":66314,"46":66314,"47":1,"48":22,"49":22,"50":22,"51":0,"52":0,"53":0,"54":1,"55":13,"56":13,"57":13,"58":13,"59":13,"60":13,"61":13,"62":13,"63":0,"64":1,"65":2,"66":2,"67":2,"68":2,"69":3,"70":3,"71":2,"72":2,"73":2,"74":0,"75":0,"76":1},"f":{"0":2,"1":24,"2":24,"3":14,"4":14,"5":13,"6":6080,"7":13,"8":13,"9":66314,"10":1,"11":66314,"12":22,"13":13,"14":13,"15":13,"16":13,"17":13,"18":0,"19":2,"20":2,"21":2,"22":2,"23":0},"b":{"0":[1,1,1],"1":[0,2],"2":[2,2],"3":[1,23],"4":[2,21],"5":[2,19],"6":[0,19],"7":[19,5],"8":[14,5],"9":[5,0],"10":[3644,2436],"11":[66313,1],"12":[3,10],"13":[66314,66314,66314,66314,66313,66313,66313,66313,66313,66313],"14":[2,1]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsAddDataset.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsAddDataset.ts"],"names":[],"mappings":"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","sourcesContent":["import JSZip from \"jszip\";\nimport {Dataset, InsightDatasetKind, InsightError} from \"./IInsightFacade\";\n\nimport fs from \"fs-extra\";\n\nconst persistDir = \"./data\";\nconst persistFile = \"./data/persistFile.json\";\n\n// SYED: Checks that ID param observes rules for naming and kind is of type \"sections\".\nfunction checkIdAndKind(id: string, kind: InsightDatasetKind, map: Map<string, Dataset>): Promise<any> {\n\treturn new Promise(function (resolve, reject) {\n\t\tif (map.has(id)) {\n\t\t\treturn reject(new InsightError(\"ID already exists\"));\n\t\t\t// return false;\n\t\t}\n\n\t\tif (id.includes(\"_\")) {\n\t\t\treturn reject(new InsightError(\"_ is not allowed\"));\n\t\t\t// return false;\n\t\t}\n\t\t// Removing whitespace reference: https://stackoverflow.com/questions/10800355/remove-whitespaces-inside-a-string-in-javascript\n\t\tif (id.replace(/\\s+/g, \"\").length === 0) {\n\t\t\treturn reject(new InsightError(\"ID only has whitespace\"));\n\t\t\t// return false;\n\t\t}\n\t\tif (kind !== InsightDatasetKind.Sections && kind !== InsightDatasetKind.Rooms) {\n\t\t\treturn reject(new InsightError(\"kind must only be of type sections or type rooms\"));\n\t\t\t// return false;\n\t\t}\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\treturn resolve(\"sections\");\n\t\t\t// return false;\n\t\t}\n\t\tif (kind === InsightDatasetKind.Rooms) {\n\t\t\treturn resolve(\"rooms\");\n\t\t\t// return false;\n\t\t}\n\t\t// return resolve(true);\n\t});\n}\n\nfunction readSectionsContent(content: any, dataset: JSON[]): Promise<number> {\n\treturn new Promise(function (resolve, reject) {\n\t\tlet zip = new JSZip();\n\t\tlet promisesArray: any = [];\n\t\tlet coursesArray: any = [];\n\t\t// SYED: ref: https://stuk.github.io/jszip/documentation/howto/read_zip.html &\n\t\t// https://stuk.github.io/jszip/documentation/api_jszip/for_each.html\n\t\tzip.loadAsync(content, {base64: true})\n\t\t\t.then((unzip: JSZip) => {\n\t\t\t\t// let foldRead: any;\n\t\t\t\t// try {\n\t\t\t\t// \t// foldRead = unzip.folder(/courses/);\n\t\t\t\t// } catch (e) {\n\t\t\t\t// \treturn reject(new InsightError(\"No courses folder?123\"));\n\t\t\t\t// }\n\t\t\t\t// //\n\t\t\t\t// if (foldRead.length === 0 || foldRead[0].name !== \"courses/\") {\n\t\t\t\t// \treturn reject(new InsightError(\"No courses folder?456\"));\n\t\t\t\t// }\n\t\t\t\tunzip.folder(\"courses\")?.forEach(function (relativePath, file) {\n\t\t\t\t\tpromisesArray.push(file.async(\"string\"));\n\t\t\t\t});\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn Promise.all(promisesArray);\n\t\t\t})\n\t\t\t.then((dataArray) => {\n\t\t\t\tfor (const element of dataArray) {\n\t\t\t\t\tlet courseFileJSON = JSON.parse(element);\n\t\t\t\t\tif (courseFileJSON.result.length > 0) {\n\t\t\t\t\t\tcoursesArray.push(courseFileJSON);\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tfor (const course of coursesArray) {\n\t\t\t\t\tcourse.result.forEach((section: any) => {\n\t\t\t\t\t\tif (checkValidSection(section)){\n\t\t\t\t\t\t\tdataset.push(section);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// dataset.push(section));\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\t// for (let i = 0; i < dataset.length; i++){\n\t\t\t\t// \tif (!checkValidSection(dataset[i])) {\n\t\t\t\t// \t\tdataset.splice(i, 1);\n\t\t\t\t// \t}\n\t\t\t\t// }\n\t\t\t\tif (dataset.length === 0) {\n\t\t\t\t\treturn reject(new InsightError(\"No valid sections to add?\"));\n\t\t\t\t} else {\n\t\t\t\t\treturn resolve(dataset.length);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(function (err: any) {\n\t\t\t\treturn reject(new InsightError(\"there is an error in readContent function???\"));\n\t\t\t});\n\t});\n}\n\nfunction checkValidSection(element: JSON): boolean {\n\tlet textArray = Object.keys(element);\n\tlet result: boolean =\n\t\ttextArray.includes(\"id\") &&\n\t\ttextArray.includes(\"Course\") &&\n\t\ttextArray.includes(\"Title\") &&\n\t\ttextArray.includes(\"Professor\") &&\n\t\ttextArray.includes(\"Subject\") &&\n\t\ttextArray.includes(\"Year\") &&\n\t\ttextArray.includes(\"Avg\") &&\n\t\ttextArray.includes(\"Pass\") &&\n\t\ttextArray.includes(\"Fail\") &&\n\t\ttextArray.includes(\"Audit\");\n\treturn result;\n}\n// comment\n// Changed checkFile function to be synchronous\n// function checkFileExistsElseCreateFile(): Promise<boolean> {\n// \treturn new Promise(function (resolve, reject) {\n// \t\t// ref: https://www.c-sharpcorner.com/article/how-to-check-if-a-file-exists-in-nodejs/\n// \t\tif (fs.existsSync(persistFile)) {\n// \t\t\tconsole.log(\"file already exists\");\n// \t\t\tresolve(true);\n// \t\t} else {\n// \t\t\tconst aPersistFileTemplate = {\n// \t\t\t\tfileArray: [],\n// \t\t\t};\n// \t\t\tfs.outputJsonSync(persistFile, aPersistFileTemplate);\n// \t\t\tconsole.log(\"File didn't exist but successfuly created!\");\n// \t\t\tresolve(true);\n// \t\t}\n// \t\treject(\"checkFileExists promise rejectedd\");\n// \t});\n// }\n// ASYNC\n// function readDirectory(path: any, map: Map<string, Dataset>): Promise<any> {\n// \t// ref: https://www.geeksforgeeks.org/node-js-fs-promise-readdir-method/\n// \treturn new Promise(function (resolve, reject) {\n// \t\tfs.ensureDir(path)\n// \t\t\t.then(() => {\n// \t\t\t\treturn fs.promises.readdir(path);\n// \t\t\t})\n// \t\t\t.then((filenames) => {\n// \t\t\t\tfor (let filename of filenames) {\n// \t\t\t\t\tconsole.log(filename);\n// \t\t\t\t\tconst jsonObj = fs.readJsonSync(`${persistDir}/${filename}`);\n// \t\t\t\t\tmap.set(jsonObj.fileArray[0].id, jsonObj.fileArray[0]);\n// \t\t\t\t}\n// \t\t\t\tresolve(\"directory read\");\n// \t\t\t})\n// \t\t\t.catch((err) => {\n// \t\t\t\tconsole.log(err);\n// \t\t\t\treject(new InsightError(err));\n// \t\t\t});\n// \t});\n// }\n// SYNC\nfunction readDirectory(path: any, map: Map<string, Dataset>) {\n\t// ref: https://www.geeksforgeeks.org/node-js-fs-promise-readdir-method/\n\tfs.ensureDirSync(path);\n\tlet filenames = fs.readdirSync(path);\n\tfor (let filename of filenames) {\n\t\tconsole.log(filename);\n\t\tconst jsonObj = fs.readJsonSync(`${persistDir}/${filename}`);\n\t\tmap.set(jsonObj.fileArray[0].id, jsonObj.fileArray[0]);\n\t}\n}\n\n// This is an Asynchronous function\nfunction addToPersistFolder(data: Dataset, keys: string[]): Promise<any> {\n\treturn new Promise(function (resolve, reject) {\n\t\tconst aPersistFileTemplate = {\n\t\t\tfileArray: [],\n\t\t};\n\t\tfs.outputJson(`${persistDir}/${data.id}.json`, aPersistFileTemplate)\n\t\t\t.then(() => {\n\t\t\t\tconsole.log(\"File has been successfuly created!\");\n\t\t\t\treturn fs.readJson(`${persistDir}/${data.id}.json`);\n\t\t\t})\n\t\t\t.then((jsonObj) => {\n\t\t\t\t//\tref: https://stackoverflow.com/questions/36093042/how-do-i-add-to-an-existing-json-file-\n\t\t\t\t//\tin-node-js\n\t\t\t\tjsonObj.fileArray.push(data);\n\t\t\t\treturn fs.writeJson(`${persistDir}/${data.id}.json`, jsonObj);\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\treturn resolve(keys);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\treturn reject(new InsightError(err + \"could not read json file from disk\"));\n\t\t\t});\n\t});\n}\n\n// This is a synchronous function\n// function loadDatasetFromPersistence(map: Map<string, Dataset>): Promise<boolean> {\n// \treturn new Promise(function (resolve, reject) {\n// \t\tif (fs.existsSync(persistFile)) {\n// \t\t\tconsole.log(\"Upon new facade: file does exist\");\n// \t\t\tconst jsonObj = fs.readJsonSync(persistFile);\n//\n// \t\t\tfor (const element of jsonObj.fileArray) {\n// \t\t\t\tmap.set(element.id, element);\n// \t\t\t}\n// \t\t\tresolve(true);\n// \t\t} else {\n// \t\t\tconsole.log(\"Upon new facade: no file existed\");\n// \t\t\tresolve(false);\n// \t\t}\n// \t\treject(\"loadDatasetfrompersistence file exists didn't work\");\n// \t});\n// }\n\n// This is a synchronous function\n// function deleteDatasetFromPersistence(id: string): boolean {\n// \tif (!fs.existsSync(persistFile)) {\n// \t\treturn false;\n// \t}\n// \ttry {\n// \t\tconst jsonObj = fs.readJsonSync(persistFile);\n// \t\tlet indexOfElement: number = -1;\n// \t\tfor (const element of jsonObj.fileArray) {\n// \t\t\tif (element.id === id) {\n// \t\t\t\tindexOfElement = jsonObj.fileArray.indexOf(element);\n// \t\t\t\tbreak;\n// \t\t\t}\n// \t\t}\n// \t\tif (indexOfElement !== -1) {\n// \t\t\tjsonObj.fileArray.splice(indexOfElement, 1);\n// \t\t\tfs.writeJSONSync(persistFile, jsonObj);\n// \t\t\treturn true;\n// \t\t}\n// \t\treturn false;\n// \t} catch (err) {\n// \t\tthrow new InsightError(\"Could not sync-read data file for delete\");\n// \t}\n// }\n\nfunction deleteDatasetFromPersistence(path: any, id: string): Promise<any> {\n\treturn new Promise(function (resolve, reject) {\n\t\tfs.ensureDir(path)\n\t\t\t.then(() => {\n\t\t\t\treturn fs.promises.readdir(path);\n\t\t\t})\n\t\t\t.then((filenames) => {\n\t\t\t\tfor (let filename of filenames) {\n\t\t\t\t\tconsole.log(filename);\n\t\t\t\t\tif (`${filename}` === `${id}.json`) {\n\t\t\t\t\t\tfs.removeSync(`${persistDir}/${filename}`);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn resolve(\"file deleted\");\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t\treturn reject(new InsightError(\"file removal no worky\" + err));\n\t\t\t});\n\t});\n}\n\nexport {\n\treadSectionsContent,\n\tcheckIdAndKind,\n\tcheckValidSection,\n\t// checkFileExistsElseCreateFile,\n\taddToPersistFolder,\n\t// loadDatasetFromPersistence,\n\tdeleteDatasetFromPersistence,\n\treadDirectory,\n};\n\n// newfunc(persistDir);\n\n// let myDataset: Dataset = {\n// \tid: \"sampleID\",\n// \tkind: InsightDatasetKind.Sections,\n// \tnumRows: 1,\n// \tdatasetArray: [],\n// };\n//\n// addToPersistFolder(myDataset);\n// let sections = getContentFromArchives(\"Pair3CoursesOnly.zip\");\n// let facade = new InsightFacade();\n// facade.addDataset(\"fgh\",sections,InsightDatasetKind.Sections).then(() =>{\n// \tconsole.log(InsightFacade.map.entries());\n// }\n// );\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3801ac67998e1210e2201d66cee865d30c12ad80","contentHash":"0923def826bf74c571c3458ce168c6000c8f8bc205227a2e904598f6e8c44c00"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/queryValidator.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/queryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":5,"column":40},"end":{"line":5,"column":82}},"4":{"start":{"line":12,"column":25},"end":{"line":12,"column":69}},"5":{"start":{"line":13,"column":20},"end":{"line":13,"column":60}},"6":{"start":{"line":14,"column":20},"end":{"line":14,"column":65}},"7":{"start":{"line":15,"column":17},"end":{"line":15,"column":40}},"8":{"start":{"line":16,"column":17},"end":{"line":16,"column":100}},"9":{"start":{"line":20,"column":8},"end":{"line":20,"column":29}},"10":{"start":{"line":21,"column":8},"end":{"line":21,"column":31}},"11":{"start":{"line":22,"column":8},"end":{"line":22,"column":41}},"12":{"start":{"line":23,"column":8},"end":{"line":23,"column":28}},"13":{"start":{"line":24,"column":8},"end":{"line":24,"column":32}},"14":{"start":{"line":25,"column":8},"end":{"line":25,"column":37}},"15":{"start":{"line":26,"column":8},"end":{"line":26,"column":39}},"16":{"start":{"line":29,"column":26},"end":{"line":29,"column":81}},"17":{"start":{"line":30,"column":8},"end":{"line":30,"column":48}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":43}},"19":{"start":{"line":32,"column":8},"end":{"line":32,"column":28}},"20":{"start":{"line":33,"column":8},"end":{"line":33,"column":38}},"21":{"start":{"line":34,"column":8},"end":{"line":34,"column":30}},"22":{"start":{"line":37,"column":8},"end":{"line":37,"column":35}},"23":{"start":{"line":38,"column":8},"end":{"line":38,"column":32}},"24":{"start":{"line":39,"column":8},"end":{"line":39,"column":41}},"25":{"start":{"line":40,"column":8},"end":{"line":40,"column":45}},"26":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"27":{"start":{"line":42,"column":12},"end":{"line":42,"column":65}},"28":{"start":{"line":44,"column":8},"end":{"line":63,"column":9}},"29":{"start":{"line":45,"column":12},"end":{"line":48,"column":13}},"30":{"start":{"line":46,"column":16},"end":{"line":46,"column":80}},"31":{"start":{"line":47,"column":16},"end":{"line":47,"column":68}},"32":{"start":{"line":49,"column":12},"end":{"line":52,"column":13}},"33":{"start":{"line":50,"column":16},"end":{"line":50,"column":80}},"34":{"start":{"line":51,"column":16},"end":{"line":51,"column":68}},"35":{"start":{"line":55,"column":12},"end":{"line":58,"column":13}},"36":{"start":{"line":56,"column":16},"end":{"line":56,"column":74}},"37":{"start":{"line":57,"column":16},"end":{"line":57,"column":65}},"38":{"start":{"line":59,"column":12},"end":{"line":62,"column":13}},"39":{"start":{"line":60,"column":16},"end":{"line":60,"column":74}},"40":{"start":{"line":61,"column":16},"end":{"line":61,"column":65}},"41":{"start":{"line":66,"column":24},"end":{"line":66,"column":42}},"42":{"start":{"line":67,"column":36},"end":{"line":67,"column":75}},"43":{"start":{"line":68,"column":8},"end":{"line":68,"column":73}},"44":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"45":{"start":{"line":70,"column":12},"end":{"line":70,"column":94}},"46":{"start":{"line":74,"column":24},"end":{"line":74,"column":52}},"47":{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},"48":{"start":{"line":76,"column":12},"end":{"line":76,"column":69}},"49":{"start":{"line":78,"column":13},"end":{"line":80,"column":9}},"50":{"start":{"line":79,"column":12},"end":{"line":79,"column":109}},"51":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"52":{"start":{"line":82,"column":12},"end":{"line":82,"column":19}},"53":{"start":{"line":84,"column":8},"end":{"line":84,"column":71}},"54":{"start":{"line":85,"column":8},"end":{"line":85,"column":43}},"55":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"56":{"start":{"line":89,"column":12},"end":{"line":89,"column":80}},"57":{"start":{"line":91,"column":8},"end":{"line":136,"column":9}},"58":{"start":{"line":92,"column":12},"end":{"line":135,"column":13}},"59":{"start":{"line":93,"column":16},"end":{"line":93,"column":89}},"60":{"start":{"line":94,"column":16},"end":{"line":96,"column":17}},"61":{"start":{"line":95,"column":20},"end":{"line":95,"column":58}},"62":{"start":{"line":98,"column":17},"end":{"line":135,"column":13}},"63":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"64":{"start":{"line":100,"column":20},"end":{"line":100,"column":85}},"65":{"start":{"line":102,"column":16},"end":{"line":102,"column":51}},"66":{"start":{"line":104,"column":17},"end":{"line":135,"column":13}},"67":{"start":{"line":105,"column":27},"end":{"line":105,"column":55}},"68":{"start":{"line":106,"column":16},"end":{"line":108,"column":17}},"69":{"start":{"line":107,"column":20},"end":{"line":107,"column":100}},"70":{"start":{"line":109,"column":16},"end":{"line":114,"column":17}},"71":{"start":{"line":110,"column":20},"end":{"line":110,"column":70}},"72":{"start":{"line":112,"column":21},"end":{"line":114,"column":17}},"73":{"start":{"line":113,"column":20},"end":{"line":113,"column":67}},"74":{"start":{"line":115,"column":16},"end":{"line":117,"column":17}},"75":{"start":{"line":116,"column":20},"end":{"line":116,"column":121}},"76":{"start":{"line":120,"column":27},"end":{"line":120,"column":55}},"77":{"start":{"line":121,"column":16},"end":{"line":123,"column":17}},"78":{"start":{"line":122,"column":20},"end":{"line":122,"column":100}},"79":{"start":{"line":124,"column":16},"end":{"line":129,"column":17}},"80":{"start":{"line":125,"column":20},"end":{"line":125,"column":70}},"81":{"start":{"line":127,"column":21},"end":{"line":129,"column":17}},"82":{"start":{"line":128,"column":20},"end":{"line":128,"column":67}},"83":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"84":{"start":{"line":131,"column":20},"end":{"line":131,"column":121}},"85":{"start":{"line":133,"column":26},"end":{"line":133,"column":50}},"86":{"start":{"line":134,"column":16},"end":{"line":134,"column":42}},"87":{"start":{"line":139,"column":28},"end":{"line":139,"column":53}},"88":{"start":{"line":140,"column":38},"end":{"line":140,"column":54}},"89":{"start":{"line":141,"column":8},"end":{"line":154,"column":9}},"90":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"91":{"start":{"line":143,"column":16},"end":{"line":143,"column":127}},"92":{"start":{"line":146,"column":13},"end":{"line":154,"column":9}},"93":{"start":{"line":147,"column":41},"end":{"line":147,"column":61}},"94":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"95":{"start":{"line":149,"column":16},"end":{"line":149,"column":127}},"96":{"start":{"line":152,"column":13},"end":{"line":154,"column":9}},"97":{"start":{"line":153,"column":12},"end":{"line":153,"column":123}},"98":{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},"99":{"start":{"line":158,"column":12},"end":{"line":158,"column":64}},"100":{"start":{"line":160,"column":13},"end":{"line":173,"column":9}},"101":{"start":{"line":161,"column":12},"end":{"line":161,"column":84}},"102":{"start":{"line":163,"column":13},"end":{"line":173,"column":9}},"103":{"start":{"line":164,"column":12},"end":{"line":164,"column":132}},"104":{"start":{"line":167,"column":38},"end":{"line":167,"column":76}},"105":{"start":{"line":168,"column":50},"end":{"line":168,"column":68}},"106":{"start":{"line":169,"column":12},"end":{"line":169,"column":103}},"107":{"start":{"line":170,"column":12},"end":{"line":170,"column":103}},"108":{"start":{"line":171,"column":12},"end":{"line":171,"column":66}},"109":{"start":{"line":172,"column":12},"end":{"line":172,"column":66}},"110":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"111":{"start":{"line":177,"column":12},"end":{"line":177,"column":82}},"112":{"start":{"line":179,"column":8},"end":{"line":185,"column":9}},"113":{"start":{"line":180,"column":12},"end":{"line":180,"column":104}},"114":{"start":{"line":183,"column":12},"end":{"line":183,"column":76}},"115":{"start":{"line":184,"column":12},"end":{"line":184,"column":86}},"116":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"117":{"start":{"line":189,"column":12},"end":{"line":189,"column":82}},"118":{"start":{"line":191,"column":8},"end":{"line":229,"column":9}},"119":{"start":{"line":192,"column":12},"end":{"line":192,"column":111}},"120":{"start":{"line":195,"column":34},"end":{"line":195,"column":36}},"121":{"start":{"line":196,"column":12},"end":{"line":223,"column":13}},"122":{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},"123":{"start":{"line":198,"column":20},"end":{"line":198,"column":133}},"124":{"start":{"line":200,"column":26},"end":{"line":200,"column":55}},"125":{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},"126":{"start":{"line":202,"column":20},"end":{"line":202,"column":105}},"127":{"start":{"line":204,"column":16},"end":{"line":204,"column":42}},"128":{"start":{"line":205,"column":38},"end":{"line":205,"column":56}},"129":{"start":{"line":206,"column":16},"end":{"line":208,"column":17}},"130":{"start":{"line":207,"column":20},"end":{"line":207,"column":133}},"131":{"start":{"line":209,"column":29},"end":{"line":209,"column":57}},"132":{"start":{"line":210,"column":38},"end":{"line":210,"column":75}},"133":{"start":{"line":211,"column":16},"end":{"line":211,"column":68}},"134":{"start":{"line":212,"column":16},"end":{"line":222,"column":17}},"135":{"start":{"line":213,"column":20},"end":{"line":213,"column":102}},"136":{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},"137":{"start":{"line":217,"column":24},"end":{"line":217,"column":103}},"138":{"start":{"line":220,"column":24},"end":{"line":220,"column":100}},"139":{"start":{"line":224,"column":36},"end":{"line":224,"column":108}},"140":{"start":{"line":224,"column":72},"end":{"line":224,"column":107}},"141":{"start":{"line":225,"column":12},"end":{"line":227,"column":13}},"142":{"start":{"line":226,"column":16},"end":{"line":226,"column":91}},"143":{"start":{"line":228,"column":12},"end":{"line":228,"column":91}},"144":{"start":{"line":232,"column":26},"end":{"line":232,"column":56}},"145":{"start":{"line":233,"column":38},"end":{"line":233,"column":58}},"146":{"start":{"line":234,"column":8},"end":{"line":247,"column":9}},"147":{"start":{"line":235,"column":12},"end":{"line":235,"column":71}},"148":{"start":{"line":237,"column":13},"end":{"line":247,"column":9}},"149":{"start":{"line":238,"column":12},"end":{"line":238,"column":72}},"150":{"start":{"line":240,"column":13},"end":{"line":247,"column":9}},"151":{"start":{"line":241,"column":12},"end":{"line":241,"column":79}},"152":{"start":{"line":244,"column":12},"end":{"line":244,"column":79}},"153":{"start":{"line":245,"column":12},"end":{"line":245,"column":62}},"154":{"start":{"line":246,"column":12},"end":{"line":246,"column":88}},"155":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"156":{"start":{"line":251,"column":12},"end":{"line":251,"column":89}},"157":{"start":{"line":253,"column":8},"end":{"line":253,"column":73}},"158":{"start":{"line":256,"column":8},"end":{"line":279,"column":9}},"159":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"160":{"start":{"line":258,"column":16},"end":{"line":258,"column":89}},"161":{"start":{"line":260,"column":12},"end":{"line":278,"column":13}},"162":{"start":{"line":261,"column":16},"end":{"line":261,"column":61}},"163":{"start":{"line":263,"column":17},"end":{"line":278,"column":13}},"164":{"start":{"line":264,"column":32},"end":{"line":264,"column":50}},"165":{"start":{"line":265,"column":39},"end":{"line":265,"column":54}},"166":{"start":{"line":266,"column":16},"end":{"line":266,"column":72}},"167":{"start":{"line":267,"column":16},"end":{"line":267,"column":72}},"168":{"start":{"line":268,"column":16},"end":{"line":270,"column":17}},"169":{"start":{"line":269,"column":20},"end":{"line":269,"column":86}},"170":{"start":{"line":271,"column":16},"end":{"line":273,"column":17}},"171":{"start":{"line":272,"column":20},"end":{"line":272,"column":90}},"172":{"start":{"line":274,"column":16},"end":{"line":274,"column":64}},"173":{"start":{"line":277,"column":16},"end":{"line":277,"column":95}},"174":{"start":{"line":282,"column":8},"end":{"line":286,"column":9}},"175":{"start":{"line":283,"column":12},"end":{"line":285,"column":13}},"176":{"start":{"line":284,"column":16},"end":{"line":284,"column":86}},"177":{"start":{"line":289,"column":0},"end":{"line":289,"column":40}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":19,"column":4},"end":{"line":19,"column":5}},"loc":{"start":{"line":19,"column":18},"end":{"line":27,"column":5}},"line":19},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":42},"end":{"line":35,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":33},"end":{"line":64,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":65,"column":4},"end":{"line":65,"column":5}},"loc":{"start":{"line":65,"column":28},"end":{"line":72,"column":5}},"line":65},"4":{"name":"(anonymous_4)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":19},"end":{"line":86,"column":5}},"line":73},"5":{"name":"(anonymous_5)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":24},"end":{"line":137,"column":5}},"line":87},"6":{"name":"(anonymous_6)","decl":{"start":{"line":138,"column":4},"end":{"line":138,"column":5}},"loc":{"start":{"line":138,"column":25},"end":{"line":155,"column":5}},"line":138},"7":{"name":"(anonymous_7)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":29},"end":{"line":174,"column":5}},"line":156},"8":{"name":"(anonymous_8)","decl":{"start":{"line":175,"column":4},"end":{"line":175,"column":5}},"loc":{"start":{"line":175,"column":29},"end":{"line":186,"column":5}},"line":175},"9":{"name":"(anonymous_9)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":29},"end":{"line":230,"column":5}},"line":187},"10":{"name":"(anonymous_10)","decl":{"start":{"line":224,"column":59},"end":{"line":224,"column":60}},"loc":{"start":{"line":224,"column":72},"end":{"line":224,"column":107}},"line":224},"11":{"name":"(anonymous_11)","decl":{"start":{"line":231,"column":4},"end":{"line":231,"column":5}},"loc":{"start":{"line":231,"column":21},"end":{"line":248,"column":5}},"line":231},"12":{"name":"(anonymous_12)","decl":{"start":{"line":249,"column":4},"end":{"line":249,"column":5}},"loc":{"start":{"line":249,"column":28},"end":{"line":254,"column":5}},"line":249},"13":{"name":"(anonymous_13)","decl":{"start":{"line":255,"column":4},"end":{"line":255,"column":5}},"loc":{"start":{"line":255,"column":33},"end":{"line":280,"column":5}},"line":255},"14":{"name":"(anonymous_14)","decl":{"start":{"line":281,"column":4},"end":{"line":281,"column":5}},"loc":{"start":{"line":281,"column":43},"end":{"line":287,"column":5}},"line":281}},"branchMap":{"0":{"loc":{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":43,"column":9}},{"start":{"line":41,"column":8},"end":{"line":43,"column":9}}],"line":41},"1":{"loc":{"start":{"line":44,"column":8},"end":{"line":63,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":63,"column":9}},{"start":{"line":44,"column":8},"end":{"line":63,"column":9}}],"line":44},"2":{"loc":{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},"type":"if","locations":[{"start":{"line":69,"column":8},"end":{"line":71,"column":9}},{"start":{"line":69,"column":8},"end":{"line":71,"column":9}}],"line":69},"3":{"loc":{"start":{"line":69,"column":12},"end":{"line":69,"column":76}},"type":"binary-expr","locations":[{"start":{"line":69,"column":12},"end":{"line":69,"column":40}},{"start":{"line":69,"column":45},"end":{"line":69,"column":75}}],"line":69},"4":{"loc":{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":80,"column":9}},{"start":{"line":75,"column":8},"end":{"line":80,"column":9}}],"line":75},"5":{"loc":{"start":{"line":75,"column":12},"end":{"line":75,"column":69}},"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":41}},{"start":{"line":75,"column":45},"end":{"line":75,"column":69}}],"line":75},"6":{"loc":{"start":{"line":78,"column":13},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":78,"column":13},"end":{"line":80,"column":9}},{"start":{"line":78,"column":13},"end":{"line":80,"column":9}}],"line":78},"7":{"loc":{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},"type":"if","locations":[{"start":{"line":81,"column":8},"end":{"line":83,"column":9}},{"start":{"line":81,"column":8},"end":{"line":83,"column":9}}],"line":81},"8":{"loc":{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":90,"column":9}},{"start":{"line":88,"column":8},"end":{"line":90,"column":9}}],"line":88},"9":{"loc":{"start":{"line":92,"column":12},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":92,"column":12},"end":{"line":135,"column":13}},{"start":{"line":92,"column":12},"end":{"line":135,"column":13}}],"line":92},"10":{"loc":{"start":{"line":92,"column":16},"end":{"line":92,"column":55}},"type":"binary-expr","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":33}},{"start":{"line":92,"column":37},"end":{"line":92,"column":55}}],"line":92},"11":{"loc":{"start":{"line":98,"column":17},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":98,"column":17},"end":{"line":135,"column":13}},{"start":{"line":98,"column":17},"end":{"line":135,"column":13}}],"line":98},"12":{"loc":{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},"type":"if","locations":[{"start":{"line":99,"column":16},"end":{"line":101,"column":17}},{"start":{"line":99,"column":16},"end":{"line":101,"column":17}}],"line":99},"13":{"loc":{"start":{"line":104,"column":17},"end":{"line":135,"column":13}},"type":"if","locations":[{"start":{"line":104,"column":17},"end":{"line":135,"column":13}},{"start":{"line":104,"column":17},"end":{"line":135,"column":13}}],"line":104},"14":{"loc":{"start":{"line":104,"column":21},"end":{"line":104,"column":80}},"type":"binary-expr","locations":[{"start":{"line":104,"column":21},"end":{"line":104,"column":38}},{"start":{"line":104,"column":42},"end":{"line":104,"column":59}},{"start":{"line":104,"column":63},"end":{"line":104,"column":80}}],"line":104},"15":{"loc":{"start":{"line":106,"column":16},"end":{"line":108,"column":17}},"type":"if","locations":[{"start":{"line":106,"column":16},"end":{"line":108,"column":17}},{"start":{"line":106,"column":16},"end":{"line":108,"column":17}}],"line":106},"16":{"loc":{"start":{"line":109,"column":16},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":114,"column":17}},{"start":{"line":109,"column":16},"end":{"line":114,"column":17}}],"line":109},"17":{"loc":{"start":{"line":112,"column":21},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":112,"column":21},"end":{"line":114,"column":17}},{"start":{"line":112,"column":21},"end":{"line":114,"column":17}}],"line":112},"18":{"loc":{"start":{"line":115,"column":16},"end":{"line":117,"column":17}},"type":"if","locations":[{"start":{"line":115,"column":16},"end":{"line":117,"column":17}},{"start":{"line":115,"column":16},"end":{"line":117,"column":17}}],"line":115},"19":{"loc":{"start":{"line":121,"column":16},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":121,"column":16},"end":{"line":123,"column":17}},{"start":{"line":121,"column":16},"end":{"line":123,"column":17}}],"line":121},"20":{"loc":{"start":{"line":124,"column":16},"end":{"line":129,"column":17}},"type":"if","locations":[{"start":{"line":124,"column":16},"end":{"line":129,"column":17}},{"start":{"line":124,"column":16},"end":{"line":129,"column":17}}],"line":124},"21":{"loc":{"start":{"line":127,"column":21},"end":{"line":129,"column":17}},"type":"if","locations":[{"start":{"line":127,"column":21},"end":{"line":129,"column":17}},{"start":{"line":127,"column":21},"end":{"line":129,"column":17}}],"line":127},"22":{"loc":{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},"type":"if","locations":[{"start":{"line":130,"column":16},"end":{"line":132,"column":17}},{"start":{"line":130,"column":16},"end":{"line":132,"column":17}}],"line":130},"23":{"loc":{"start":{"line":141,"column":8},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":141,"column":8},"end":{"line":154,"column":9}},{"start":{"line":141,"column":8},"end":{"line":154,"column":9}}],"line":141},"24":{"loc":{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},"type":"if","locations":[{"start":{"line":142,"column":12},"end":{"line":144,"column":13}},{"start":{"line":142,"column":12},"end":{"line":144,"column":13}}],"line":142},"25":{"loc":{"start":{"line":142,"column":16},"end":{"line":142,"column":91}},"type":"binary-expr","locations":[{"start":{"line":142,"column":16},"end":{"line":142,"column":45}},{"start":{"line":142,"column":49},"end":{"line":142,"column":91}}],"line":142},"26":{"loc":{"start":{"line":146,"column":13},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":146,"column":13},"end":{"line":154,"column":9}},{"start":{"line":146,"column":13},"end":{"line":154,"column":9}}],"line":146},"27":{"loc":{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},"type":"if","locations":[{"start":{"line":148,"column":12},"end":{"line":150,"column":13}},{"start":{"line":148,"column":12},"end":{"line":150,"column":13}}],"line":148},"28":{"loc":{"start":{"line":148,"column":16},"end":{"line":148,"column":90}},"type":"binary-expr","locations":[{"start":{"line":148,"column":16},"end":{"line":148,"column":45}},{"start":{"line":148,"column":49},"end":{"line":148,"column":90}}],"line":148},"29":{"loc":{"start":{"line":152,"column":13},"end":{"line":154,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":13},"end":{"line":154,"column":9}},{"start":{"line":152,"column":13},"end":{"line":154,"column":9}}],"line":152},"30":{"loc":{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":173,"column":9}},{"start":{"line":157,"column":8},"end":{"line":173,"column":9}}],"line":157},"31":{"loc":{"start":{"line":160,"column":13},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":13},"end":{"line":173,"column":9}},{"start":{"line":160,"column":13},"end":{"line":173,"column":9}}],"line":160},"32":{"loc":{"start":{"line":163,"column":13},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":163,"column":13},"end":{"line":173,"column":9}},{"start":{"line":163,"column":13},"end":{"line":173,"column":9}}],"line":163},"33":{"loc":{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},"type":"if","locations":[{"start":{"line":176,"column":8},"end":{"line":178,"column":9}},{"start":{"line":176,"column":8},"end":{"line":178,"column":9}}],"line":176},"34":{"loc":{"start":{"line":176,"column":12},"end":{"line":176,"column":59}},"type":"binary-expr","locations":[{"start":{"line":176,"column":12},"end":{"line":176,"column":36}},{"start":{"line":176,"column":40},"end":{"line":176,"column":59}}],"line":176},"35":{"loc":{"start":{"line":179,"column":8},"end":{"line":185,"column":9}},"type":"if","locations":[{"start":{"line":179,"column":8},"end":{"line":185,"column":9}},{"start":{"line":179,"column":8},"end":{"line":185,"column":9}}],"line":179},"36":{"loc":{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":188,"column":8},"end":{"line":190,"column":9}},{"start":{"line":188,"column":8},"end":{"line":190,"column":9}}],"line":188},"37":{"loc":{"start":{"line":188,"column":12},"end":{"line":188,"column":59}},"type":"binary-expr","locations":[{"start":{"line":188,"column":12},"end":{"line":188,"column":36}},{"start":{"line":188,"column":40},"end":{"line":188,"column":59}}],"line":188},"38":{"loc":{"start":{"line":191,"column":8},"end":{"line":229,"column":9}},"type":"if","locations":[{"start":{"line":191,"column":8},"end":{"line":229,"column":9}},{"start":{"line":191,"column":8},"end":{"line":229,"column":9}}],"line":191},"39":{"loc":{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},"type":"if","locations":[{"start":{"line":197,"column":16},"end":{"line":199,"column":17}},{"start":{"line":197,"column":16},"end":{"line":199,"column":17}}],"line":197},"40":{"loc":{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},"type":"if","locations":[{"start":{"line":201,"column":16},"end":{"line":203,"column":17}},{"start":{"line":201,"column":16},"end":{"line":203,"column":17}}],"line":201},"41":{"loc":{"start":{"line":206,"column":16},"end":{"line":208,"column":17}},"type":"if","locations":[{"start":{"line":206,"column":16},"end":{"line":208,"column":17}},{"start":{"line":206,"column":16},"end":{"line":208,"column":17}}],"line":206},"42":{"loc":{"start":{"line":212,"column":16},"end":{"line":222,"column":17}},"type":"if","locations":[{"start":{"line":212,"column":16},"end":{"line":222,"column":17}},{"start":{"line":212,"column":16},"end":{"line":222,"column":17}}],"line":212},"43":{"loc":{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},"type":"if","locations":[{"start":{"line":216,"column":20},"end":{"line":221,"column":21}},{"start":{"line":216,"column":20},"end":{"line":221,"column":21}}],"line":216},"44":{"loc":{"start":{"line":225,"column":12},"end":{"line":227,"column":13}},"type":"if","locations":[{"start":{"line":225,"column":12},"end":{"line":227,"column":13}},{"start":{"line":225,"column":12},"end":{"line":227,"column":13}}],"line":225},"45":{"loc":{"start":{"line":234,"column":8},"end":{"line":247,"column":9}},"type":"if","locations":[{"start":{"line":234,"column":8},"end":{"line":247,"column":9}},{"start":{"line":234,"column":8},"end":{"line":247,"column":9}}],"line":234},"46":{"loc":{"start":{"line":234,"column":12},"end":{"line":234,"column":73}},"type":"binary-expr","locations":[{"start":{"line":234,"column":12},"end":{"line":234,"column":43}},{"start":{"line":234,"column":47},"end":{"line":234,"column":73}}],"line":234},"47":{"loc":{"start":{"line":237,"column":13},"end":{"line":247,"column":9}},"type":"if","locations":[{"start":{"line":237,"column":13},"end":{"line":247,"column":9}},{"start":{"line":237,"column":13},"end":{"line":247,"column":9}}],"line":237},"48":{"loc":{"start":{"line":237,"column":17},"end":{"line":237,"column":66}},"type":"binary-expr","locations":[{"start":{"line":237,"column":17},"end":{"line":237,"column":42}},{"start":{"line":237,"column":46},"end":{"line":237,"column":66}}],"line":237},"49":{"loc":{"start":{"line":240,"column":13},"end":{"line":247,"column":9}},"type":"if","locations":[{"start":{"line":240,"column":13},"end":{"line":247,"column":9}},{"start":{"line":240,"column":13},"end":{"line":247,"column":9}}],"line":240},"50":{"loc":{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},"type":"if","locations":[{"start":{"line":250,"column":8},"end":{"line":252,"column":9}},{"start":{"line":250,"column":8},"end":{"line":252,"column":9}}],"line":250},"51":{"loc":{"start":{"line":250,"column":12},"end":{"line":250,"column":77}},"type":"binary-expr","locations":[{"start":{"line":250,"column":12},"end":{"line":250,"column":33}},{"start":{"line":250,"column":37},"end":{"line":250,"column":53}},{"start":{"line":250,"column":57},"end":{"line":250,"column":77}}],"line":250},"52":{"loc":{"start":{"line":256,"column":8},"end":{"line":279,"column":9}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":279,"column":9}},{"start":{"line":256,"column":8},"end":{"line":279,"column":9}}],"line":256},"53":{"loc":{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},"type":"if","locations":[{"start":{"line":257,"column":12},"end":{"line":259,"column":13}},{"start":{"line":257,"column":12},"end":{"line":259,"column":13}}],"line":257},"54":{"loc":{"start":{"line":260,"column":12},"end":{"line":278,"column":13}},"type":"if","locations":[{"start":{"line":260,"column":12},"end":{"line":278,"column":13}},{"start":{"line":260,"column":12},"end":{"line":278,"column":13}}],"line":260},"55":{"loc":{"start":{"line":263,"column":17},"end":{"line":278,"column":13}},"type":"if","locations":[{"start":{"line":263,"column":17},"end":{"line":278,"column":13}},{"start":{"line":263,"column":17},"end":{"line":278,"column":13}}],"line":263},"56":{"loc":{"start":{"line":268,"column":16},"end":{"line":270,"column":17}},"type":"if","locations":[{"start":{"line":268,"column":16},"end":{"line":270,"column":17}},{"start":{"line":268,"column":16},"end":{"line":270,"column":17}}],"line":268},"57":{"loc":{"start":{"line":271,"column":16},"end":{"line":273,"column":17}},"type":"if","locations":[{"start":{"line":271,"column":16},"end":{"line":273,"column":17}},{"start":{"line":271,"column":16},"end":{"line":273,"column":17}}],"line":271},"58":{"loc":{"start":{"line":271,"column":20},"end":{"line":271,"column":62}},"type":"binary-expr","locations":[{"start":{"line":271,"column":20},"end":{"line":271,"column":38}},{"start":{"line":271,"column":42},"end":{"line":271,"column":62}}],"line":271},"59":{"loc":{"start":{"line":283,"column":12},"end":{"line":285,"column":13}},"type":"if","locations":[{"start":{"line":283,"column":12},"end":{"line":285,"column":13}},{"start":{"line":283,"column":12},"end":{"line":285,"column":13}}],"line":283}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/queryValidator.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/queryValidator.ts"],"names":[],"mappings":"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","sourcesContent":["import {InsightDatasetKind, InsightError} from \"./IInsightFacade\";\nimport {JSONchecker} from \"./helperFunctionsQueryValidator\";\n\n\nexport class QueryValidator {\n\tpublic whereBlock: object;\n\tpublic optionsBlock: object;\n\tpublic transformationsBlock: object | null;\n\tpublic datasetID: string;\n\tpublic datasetKind: InsightDatasetKind | null;\n\tpublic allowableWhereKeys: string[] = [\"OR\", \"AND\", \"NOT\", \"IS\", \"GT\", \"LT\", \"EQ\"];\n\tpublic mkeysSections: string[] = [\"avg\", \"pass\", \"fail\", \"audit\", \"year\"];\n\tpublic skeysSections: string[] = [\"dept\", \"id\", \"instructor\", \"title\", \"uuid\"];\n\tpublic mkeysRooms: string[] = [\"lat\", \"lon\", \"seats\"];\n\tpublic skeysRooms: string[] = [\"fullname\", \"shortname\", \"number\", \"name\", \"address\", \"type\", \"furniture\", \"href\"];\n\tpublic allowableFieldKeys: string[];\n\tpublic allowableColumnsKeys: string[];\n\n\tconstructor () {\n\t\tthis.whereBlock = {};\n\t\tthis.optionsBlock = {};\n\t\tthis.transformationsBlock = null;\n\t\tthis.datasetID = \"\";\n\t\tthis.datasetKind = null;\n\t\tthis.allowableFieldKeys = [];\n\t\tthis.allowableColumnsKeys = [];\n\t}\n\n\tpublic validateQuery(query: any, datasetID: string, kind: InsightDatasetKind) {\n\t\tlet queryParsed = JSONchecker(query);\n\t\tthis.init(queryParsed, datasetID, kind);\n\t\tthis.structureChecker(queryParsed);\n\t\tthis.whereChecker();\n\t\tthis.transformationsChecker();\n\t\tthis.optionsChecker();\n\t}\n\n\tpublic init(query: object, datasetID: string, kind: InsightDatasetKind) {\n\t\tthis.datasetID = datasetID;\n\t\tthis.datasetKind = kind;\n\t\tthis.whereBlock = query[\"WHERE\" as keyof typeof query];\n\t\tthis.optionsBlock = query[\"OPTIONS\" as keyof typeof query];\n\t\tif (Object.keys(query).includes(\"TRANSFORMATIONS\")) {\n\t\t\tthis.transformationsBlock = query[\"TRANSFORMATIONS\" as keyof typeof query];\n\t\t}\n\t\tif (kind === InsightDatasetKind.Sections) {\n\t\t\tfor (let i in this.mkeysSections) {\n\t\t\t\tthis.mkeysSections[i] = datasetID + \"_\" + this.mkeysSections[i];\n\t\t\t\tthis.allowableFieldKeys.push(this.mkeysSections[i]);\n\t\t\t}\n\t\t\tfor (let i in this.skeysSections) {\n\t\t\t\tthis.skeysSections[i] = datasetID + \"_\" + this.skeysSections[i];\n\t\t\t\tthis.allowableFieldKeys.push(this.skeysSections[i]);\n\t\t\t}\n\t\t} else {\n\t\t\tfor (let i in this.mkeysRooms) {\n\t\t\t\tthis.mkeysRooms[i] = datasetID + \"_\" + this.mkeysRooms[i];\n\t\t\t\tthis.allowableFieldKeys.push(this.mkeysRooms[i]);\n\t\t\t}\n\t\t\tfor (let i in this.skeysRooms) {\n\t\t\t\tthis.skeysRooms[i] = datasetID + \"_\" + this.skeysRooms[i];\n\t\t\t\tthis.allowableFieldKeys.push(this.skeysRooms[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic structureChecker(query: object) {\n\t\tlet queryKeys = Object.keys(query);\n\t\tlet allowableKeysForQuery = [\"WHERE\", \"OPTIONS\", \"TRANSFORMATIONS\"];\n\t\tthis.areKeysValid(queryKeys, allowableKeysForQuery, \"the query\");\n\t\tif (!queryKeys.includes(\"WHERE\") || (!queryKeys.includes(\"OPTIONS\"))) {\n\t\t\tthrow new InsightError(\"query must have both WHERE and OPTIONS\");\n\t\t}\n\t}\n\n\tpublic whereChecker() {\n\t\tlet whereKeys = Object.keys(this.whereBlock);\n\t\tif (this.whereBlock === undefined || this.whereBlock === null) {\n\t\t\tthrow new InsightError(\"Missing WHERE\");\n\t\t} else if (whereKeys.length > 1) {\n\t\t\tthrow new InsightError(\"WHERE should only have 1 key, has \" + whereKeys.length);\n\t\t}\n\n\t\t// WHERE block is empty\n\t\tif (JSON.stringify(this.whereBlock) === \"{}\") {\n\t\t\treturn;\n\t\t}\n\t\t// WHERE block is not empty\n\t\tthis.areKeysValid(whereKeys, this.allowableWhereKeys, \"WHERE\");\n\t\tthis.checkFilters(this.whereBlock);\n\t}\n\n\tpublic checkFilters(query: any) {\n\t\tif (JSON.stringify(query) === \"{}\") {\n\t\t\tthrow new InsightError(\"block in query is Empty!\");\n\t\t}\n\t\tfor (let queryKey in query) {\n\t\t\tif (queryKey === \"OR\" || queryKey === \"AND\") {\n\t\t\t\tthis.areKeysValid(Object.keys(query), this.allowableWhereKeys, queryKey);\n\t\t\t\tfor (let i in query[queryKey]) {\n\t\t\t\t\tthis.checkFilters(query[queryKey][i]);\n\t\t\t\t}\n\t\t\t} else if (queryKey === \"NOT\") {\n\t\t\t\tif (typeof query[queryKey as keyof typeof query] !== \"object\") {\n\t\t\t\t\tthrow new InsightError(\"NOT must be an object\");\n\t\t\t\t}\n\t\t\t\tthis.checkFilters(query[queryKey]);\n\t\t\t} else if (queryKey === \"LT\" || queryKey === \"GT\" || queryKey === \"EQ\") {\n\t\t\t\tlet keys = Object.keys(query[queryKey]);\n\t\t\t\tif (keys.length !== 1) {\n\t\t\t\t\tthrow new InsightError(queryKey + \"must have only have 1 key\");\n\t\t\t\t}\n\t\t\t\tif (this.datasetKind === InsightDatasetKind.Sections) {\n\t\t\t\t\tthis.areKeysValid(keys, this.mkeysSections, \"IS\");\n\t\t\t\t} else if (this.datasetKind === InsightDatasetKind.Rooms) {\n\t\t\t\t\tthis.areKeysValid(keys, this.mkeysRooms, \"IS\");\n\t\t\t\t}\n\t\t\t\tif (typeof (query[queryKey][keys[0]]) !== \"number\") {\n\t\t\t\t\tthrow new InsightError(\"invalid Value type for \" + queryKey + \", should be number\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet keys = Object.keys(query[queryKey]);\n\t\t\t\tif (keys.length !== 1) {\n\t\t\t\t\tthrow new InsightError(queryKey + \"must have only have 1 key\");\n\t\t\t\t}\n\t\t\t\tif (this.datasetKind === InsightDatasetKind.Sections) {\n\t\t\t\t\tthis.areKeysValid(keys, this.skeysSections, \"IS\");\n\t\t\t\t} else if (this.datasetKind === InsightDatasetKind.Rooms) {\n\t\t\t\t\tthis.areKeysValid(keys, this.skeysRooms, \"IS\");\n\t\t\t\t}\n\t\t\t\tif (typeof (query[queryKey][keys[0]]) !== \"string\") {\n\t\t\t\t\tthrow new InsightError(\"invalid Value type for \" + queryKey + \", should be string\");\n\t\t\t\t}\n\t\t\t\tlet val: string = query[queryKey][keys[0]];\n\t\t\t\tthis.asteriskChecker(val);\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic asteriskChecker(val: string) {\n\t\tlet asteriskCount = val.split(\"*\").length - 1;\n\t\tlet firstPositionOfAsterisk = val.indexOf(\"*\");\n\t\tif (asteriskCount === 1) {\n\t\t\tif (firstPositionOfAsterisk !== 0 && firstPositionOfAsterisk !== val.length - 1){\n\t\t\t\tthrow new InsightError(\"Asterisks can only be the first or last characters of input strings\");\n\t\t\t}\n\t\t} else if (asteriskCount === 2) {\n\t\t\tlet lastPositionOfAsterisk = val.lastIndexOf(\"*\");\n\t\t\tif (firstPositionOfAsterisk !== 0 || lastPositionOfAsterisk !== val.length - 1){\n\t\t\t\tthrow new InsightError(\"Asterisks can only be the first or last characters of input strings\");\n\t\t\t}\n\t\t} else if (asteriskCount > 2) {\n\t\t\tthrow new InsightError(\"Asterisks can only be the first or last characters of input strings\");\n\t\t}\n\t}\n\n\tpublic transformationsChecker() {\n\t\tif (this.transformationsBlock === null) {\t// no transformations block!\n\t\t\tthis.allowableColumnsKeys = this.allowableFieldKeys;\n\t\t} else if (this.transformationsBlock === undefined) {\n\t\t\tthrow new InsightError(\"TRANSFORMATIONS is undefined\");\n\t\t} else if (typeof this.transformationsBlock !== \"object\") {\n\t\t\tthrow new InsightError(\"TRANSFORMATIONS if not an object, it's a \" + typeof  this.transformationsBlock);\n\t\t} else {\n\t\t\tlet transformationsKeys = Object.keys(this.transformationsBlock);\n\t\t\tlet allowableKeysForTransformations = [\"GROUP\", \"APPLY\"];\n\t\t\tthis.areKeysValid(transformationsKeys, allowableKeysForTransformations, \"TRANSFORMATIONS\");\n\t\t\tthis.areKeysValid(allowableKeysForTransformations, transformationsKeys, \"TRANSFORMATIONS\");\n\n\t\t\tthis.groupChecker(this.transformationsBlock[\"GROUP\" as keyof typeof this.transformationsBlock]);\n\t\t\tthis.applyChecker(this.transformationsBlock[\"APPLY\" as keyof typeof this.transformationsBlock]);\n\t\t}\n\t}\n\n\tpublic groupChecker(groupBlock: any) {\n\t\tif (groupBlock === undefined || groupBlock === null) {\n\t\t\tthrow new InsightError(\"GROUP is null or undefined\");\n\t\t}\n\t\tif (groupBlock.length === 0) {\n\t\t\tthrow new InsightError(\"GROUP list is empty; must contain at least 1 key\");\n\t\t} else {\n\t\t\tthis.areKeysValid(groupBlock, this.allowableFieldKeys, \"GROUP\");\n\t\t\tthis.allowableColumnsKeys = [...this.allowableColumnsKeys, ... groupBlock];\n\t\t}\n\t}\n\n\tpublic applyChecker(applyBlock: any) {\n\t\tif (applyBlock === undefined || applyBlock === null) {\n\t\t\tthrow new InsightError(\"APPLY is null or undefined\");\n\t\t}\n\t\tif (applyBlock.length === 0) {\n\t\t\tthrow new InsightError(\"APPLY list is empty; must contain at least 1 apply rule\");\n\t\t} else {\n\t\t\tlet applyRulesNames: string[] = [];\n\t\t\tfor (let i in applyBlock) {\n\t\t\t\tif (typeof applyBlock[i] !== \"object\") {\n\t\t\t\t\tthrow new InsightError(\"apply rule \" + i + \"is not an object; all apply rules must be objects\");\n\t\t\t\t}\n\n\t\t\t\tlet key = Object.keys(applyBlock[i])[0];\n\t\t\t\tif (key.includes(\"_\")) {\n\t\t\t\t\tthrow new InsightError(\"apply keys cannot have '_' in their names\");\n\t\t\t\t}\n\t\t\t\tapplyRulesNames.push(key);\n\n\t\t\t\tlet applyRuleObject = applyBlock[i][key];\n\t\t\t\tif (typeof applyRuleObject !== \"object\") {\n\t\t\t\t\tthrow new InsightError (\"apply rule defined by \" + key + \" is not an object; must be an object\");\n\t\t\t\t}\n\t\t\t\tlet tokens = Object.keys(applyRuleObject);\n\t\t\t\tlet allowableTokens: string[] = [\"MAX\", \"MIN\", \"AVG\", \"SUM\", \"COUNT\"];\n\t\t\t\tthis.areKeysValid(tokens, allowableTokens, \"token\");\n\t\t\t\tif (tokens[0] === \"COUNT\") {\n\t\t\t\t\tthis.areKeysValid([applyRuleObject[tokens[0]]], this.allowableFieldKeys, \"COUNT\");\n\t\t\t\t} else {\n\t\t\t\t\tif (this.datasetKind === InsightDatasetKind.Sections) {\n\t\t\t\t\t\tthis.areKeysValid([applyRuleObject[tokens[0]]], this.mkeysSections, tokens[0]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.areKeysValid([applyRuleObject[tokens[0]]], this.mkeysRooms, tokens[0]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet duplicatesRemoved = applyRulesNames.filter((n, name) =>\n\t\t\t\tapplyRulesNames.indexOf(n) === name);\n\t\t\tif (duplicatesRemoved.length !== applyRulesNames.length) {\n\t\t\t\tthrow new InsightError(\"apply rule names must be unique\");\n\t\t\t}\n\t\t\tthis.allowableColumnsKeys = [...this.allowableColumnsKeys, ...applyRulesNames];\n\t\t}\n\t}\n\n\tpublic optionsChecker() {\n\t\tlet optionsKeys = Object.keys(this.optionsBlock);\n\t\tlet allowableKeysForOptions = [\"COLUMNS\", \"ORDER\"];\n\t\tif (this.optionsBlock === undefined || this.optionsBlock === null) {\n\t\t\tthrow new InsightError(\"Missing OPTIONS\");\n\t\t} else if (optionsKeys === undefined || optionsKeys === null) {\n\t\t\tthrow new InsightError(\"OPTIONS is empty\");\n\t\t} else if (!optionsKeys.includes(\"COLUMNS\")) {\n\t\t\tthrow new InsightError(\"OPTIONS missing COLUMNS\");\n\t\t} else {\n\t\t\tthis.areKeysValid(optionsKeys, allowableKeysForOptions, \"OPTIONS\");\n\t\t\tthis.columnsChecker(this.optionsBlock[\"COLUMNS\" as keyof typeof this.optionsBlock]);\n\t\t\tthis.orderChecker(this.optionsBlock[\"ORDER\" as keyof typeof this.optionsBlock],\n\t\t\t\tthis.optionsBlock[\"COLUMNS\" as keyof typeof this.optionsBlock]);\n\t\t}\n\t}\n\n\tpublic columnsChecker(columns: any) {\n\t\tif (columns === undefined || columns === null || columns.length === 0) {\n\t\t \tthrow new InsightError(\"COLUMNS must be a non-empty array\");\n\t\t}\n\t\tthis.areKeysValid(columns, this.allowableColumnsKeys, \"COLUMNS\");\n\t}\n\n\tpublic orderChecker(order: any, columns: string[]) {\n\t\tif (Object.keys(this.optionsBlock).includes(\"ORDER\")) {\n\t\t\tif (order === undefined) {\n\t\t\t\tthrow new InsightError(\"ORDER is not properly defined\");\n\t\t\t}\n\t\t\tif (typeof order === \"string\") {\n\t\t\t\tthis.areKeysValid([order], columns, \"ORDER\");\n\t\t\t} else if (typeof order === \"object\") {\n\t\t\t\tlet orderKeys = Object.keys(order);\n\t\t\t\tlet allowedOrderKeys = [\"dir\", \"keys\"];\n\t\t\t\tthis.areKeysValid(orderKeys, allowedOrderKeys, \"ORDER\");\n\t\t\t\tthis.areKeysValid(allowedOrderKeys, orderKeys, \"ORDER\");\n\t\t\t\tif (orderKeys.length !== 2) {\n\t\t\t\t\tthrow new InsightError(\"Order must have 2 keys\");\n\t\t\t\t}\n\t\t\t\tif (order.dir !== \"UP\" && order.dir !== \"DOWN\") {\n\t\t\t\t\tthrow new InsightError(\"dir must be 'UP' or 'DOWN'\");\n\t\t\t\t}\n\t\t\t\tthis.areKeysValid(order.keys, columns, \"ORDER\");\n\t\t\t} else {\n\t\t\t\tthrow new InsightError(\"Order must be an object or a string\");\n\t\t\t}\n\t\t}\n\t}\n\n\tpublic areKeysValid(keys: string[], allowedKeys: string[], block: string) {\n\t\tfor (let key of keys) {\n\t\t\tif (!allowedKeys.includes(key)) {\n\t\t\t\tthrow new InsightError(\"Invalid key(s) in \" + block);\n\t\t\t}\n\t\t}\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3a4dbf2352ef1d6235bc740fa024f7e283b4a8ba","contentHash":"98e521a8e6cdc80c83d3654e07e3a2d48e52ab92aff5cd65ef6cefe0ac2d0332"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsQueryValidator.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsQueryValidator.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":25},"end":{"line":4,"column":52}},"3":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":72}},"5":{"start":{"line":10,"column":9},"end":{"line":12,"column":5}},"6":{"start":{"line":11,"column":8},"end":{"line":11,"column":72}},"7":{"start":{"line":13,"column":4},"end":{"line":18,"column":5}},"8":{"start":{"line":14,"column":8},"end":{"line":14,"column":56}},"9":{"start":{"line":17,"column":8},"end":{"line":17,"column":72}},"10":{"start":{"line":19,"column":21},"end":{"line":19,"column":45}},"11":{"start":{"line":20,"column":22},"end":{"line":20,"column":70}},"12":{"start":{"line":21,"column":28},"end":{"line":21,"column":33}},"13":{"start":{"line":22,"column":4},"end":{"line":26,"column":5}},"14":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"15":{"start":{"line":24,"column":12},"end":{"line":24,"column":37}},"16":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"17":{"start":{"line":28,"column":8},"end":{"line":28,"column":72}},"18":{"start":{"line":30,"column":4},"end":{"line":30,"column":23}},"19":{"start":{"line":32,"column":0},"end":{"line":32,"column":34}}},"fnMap":{"0":{"name":"JSONchecker","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":20}},"loc":{"start":{"line":5,"column":28},"end":{"line":31,"column":1}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":12,"column":5}},{"start":{"line":7,"column":4},"end":{"line":12,"column":5}}],"line":7},"1":{"loc":{"start":{"line":10,"column":9},"end":{"line":12,"column":5}},"type":"if","locations":[{"start":{"line":10,"column":9},"end":{"line":12,"column":5}},{"start":{"line":10,"column":9},"end":{"line":12,"column":5}}],"line":10},"2":{"loc":{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},"type":"if","locations":[{"start":{"line":23,"column":8},"end":{"line":25,"column":9}},{"start":{"line":23,"column":8},"end":{"line":25,"column":9}}],"line":23},"3":{"loc":{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":4},"end":{"line":29,"column":5}},{"start":{"line":27,"column":4},"end":{"line":29,"column":5}}],"line":27},"4":{"loc":{"start":{"line":27,"column":8},"end":{"line":27,"column":50}},"type":"binary-expr","locations":[{"start":{"line":27,"column":8},"end":{"line":27,"column":29}},{"start":{"line":27,"column":33},"end":{"line":27,"column":50}}],"line":27}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsQueryValidator.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperFunctionsQueryValidator.ts"],"names":[],"mappings":";;;AAAA,qDAA8C;AAE9C,SAAS,WAAW,CAAC,KAAc;IAClC,IAAI,WAAW,CAAC;IAChB,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC9B,MAAM,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC;KAC/C;SAAM,IAAI,KAAK,KAAK,IAAI,EAAE;QAC1B,MAAM,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC;KAC/C;IACD,IAAI;QACH,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;KAChD;IAAC,OAAO,GAAG,EAAE;QACb,MAAM,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC;KAC/C;IACD,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1C,IAAI,WAAW,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;IACnE,IAAI,iBAAiB,GAAG,KAAK,CAAC;IAC9B,KAAK,MAAM,GAAG,IAAI,UAAU,EAAE;QAC7B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAC;YAC9B,iBAAiB,GAAG,IAAI,CAAC;SACzB;KACD;IACD,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,IAAI,iBAAiB,EAAE;QAC/C,MAAM,IAAI,6BAAY,CAAC,sBAAsB,CAAC,CAAC;KAC/C;IACD,OAAO,WAAW,CAAC;AACpB,CAAC;AAEO,kCAAW","sourcesContent":["import {InsightError} from \"./IInsightFacade\";\n\nfunction JSONchecker(query: unknown): any{\n\tlet queryReturn;\n\tif (typeof query !== \"object\") {\n\t\tthrow new InsightError(\"Invalid query string\");\n\t} else if (query === null) {\n\t\tthrow new InsightError(\"Invalid query string\");\n\t}\n\ttry {\n\t\tqueryReturn = JSON.parse(JSON.stringify(query));\n\t} catch (err) {\n\t\tthrow new InsightError(\"Invalid query string\");\n\t}\n\tlet objectKeys = Object.keys(queryReturn);\n\tlet allowedKeys = [\"WHERE\", \"ORDER\", \"OPTIONS\", \"TRANSFORMATIONS\"];\n\tlet disallowedKeyFlag = false;\n\tfor (const key of objectKeys) {\n\t\tif (!allowedKeys.includes(key)){\n\t\t\tdisallowedKeyFlag = true;\n\t\t}\n\t}\n\tif (objectKeys.length > 3 || disallowedKeyFlag) {\n\t\tthrow new InsightError(\"Excess keys in query\");\n\t}\n\treturn queryReturn;\n}\n\nexport {JSONchecker};\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5d909e33a711855d6230a86f13cccc4cb35ab067","contentHash":"505b76684870bba3b471a076b1e54badff873504a6f589f8141b80e7cd2f8ba0"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/AddDatasetRooms.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/AddDatasetRooms.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":268}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":16},"end":{"line":8,"column":49}},"6":{"start":{"line":9,"column":17},"end":{"line":9,"column":34}},"7":{"start":{"line":10,"column":32},"end":{"line":10,"column":66}},"8":{"start":{"line":11,"column":0},"end":{"line":11,"column":71}},"9":{"start":{"line":12,"column":0},"end":{"line":12,"column":75}},"10":{"start":{"line":13,"column":0},"end":{"line":13,"column":77}},"11":{"start":{"line":14,"column":0},"end":{"line":14,"column":67}},"12":{"start":{"line":15,"column":0},"end":{"line":15,"column":58}},"13":{"start":{"line":16,"column":0},"end":{"line":16,"column":80}},"14":{"start":{"line":17,"column":0},"end":{"line":17,"column":65}},"15":{"start":{"line":18,"column":0},"end":{"line":18,"column":81}},"16":{"start":{"line":20,"column":4},"end":{"line":58,"column":7}},"17":{"start":{"line":21,"column":18},"end":{"line":21,"column":39}},"18":{"start":{"line":22,"column":28},"end":{"line":22,"column":30}},"19":{"start":{"line":23,"column":28},"end":{"line":23,"column":30}},"20":{"start":{"line":24,"column":8},"end":{"line":57,"column":11}},"21":{"start":{"line":26,"column":24},"end":{"line":26,"column":76}},"22":{"start":{"line":27,"column":12},"end":{"line":27,"column":35}},"23":{"start":{"line":28,"column":12},"end":{"line":30,"column":15}},"24":{"start":{"line":29,"column":16},"end":{"line":29,"column":57}},"25":{"start":{"line":31,"column":12},"end":{"line":31,"column":25}},"26":{"start":{"line":34,"column":28},"end":{"line":34,"column":54}},"27":{"start":{"line":35,"column":12},"end":{"line":35,"column":56}},"28":{"start":{"line":36,"column":12},"end":{"line":36,"column":58}},"29":{"start":{"line":39,"column":12},"end":{"line":39,"column":46}},"30":{"start":{"line":42,"column":33},"end":{"line":42,"column":35}},"31":{"start":{"line":43,"column":12},"end":{"line":45,"column":13}},"32":{"start":{"line":44,"column":16},"end":{"line":44,"column":63}},"33":{"start":{"line":46,"column":12},"end":{"line":48,"column":13}},"34":{"start":{"line":47,"column":16},"end":{"line":47,"column":68}},"35":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"36":{"start":{"line":50,"column":16},"end":{"line":50,"column":87}},"37":{"start":{"line":52,"column":12},"end":{"line":52,"column":40}},"38":{"start":{"line":53,"column":12},"end":{"line":53,"column":43}},"39":{"start":{"line":56,"column":12},"end":{"line":56,"column":115}},"40":{"start":{"line":60,"column":0},"end":{"line":60,"column":44}},"41":{"start":{"line":62,"column":18},"end":{"line":62,"column":20}},"42":{"start":{"line":63,"column":4},"end":{"line":63,"column":21}},"43":{"start":{"line":64,"column":23},"end":{"line":64,"column":32}},"44":{"start":{"line":66,"column":4},"end":{"line":82,"column":5}},"45":{"start":{"line":67,"column":23},"end":{"line":67,"column":36}},"46":{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},"47":{"start":{"line":69,"column":42},"end":{"line":69,"column":72}},"48":{"start":{"line":70,"column":25},"end":{"line":70,"column":54}},"49":{"start":{"line":71,"column":27},"end":{"line":71,"column":56}},"50":{"start":{"line":72,"column":27},"end":{"line":72,"column":59}},"51":{"start":{"line":73,"column":12},"end":{"line":73,"column":42}},"52":{"start":{"line":75,"column":8},"end":{"line":78,"column":9}},"53":{"start":{"line":76,"column":24},"end":{"line":76,"column":32}},"54":{"start":{"line":77,"column":12},"end":{"line":77,"column":45}},"55":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"56":{"start":{"line":80,"column":12},"end":{"line":80,"column":47}},"57":{"start":{"line":83,"column":4},"end":{"line":86,"column":5}},"58":{"start":{"line":83,"column":37},"end":{"line":83,"column":66}},"59":{"start":{"line":84,"column":8},"end":{"line":84,"column":38}},"60":{"start":{"line":85,"column":8},"end":{"line":85,"column":15}},"61":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"62":{"start":{"line":88,"column":8},"end":{"line":88,"column":89}},"63":{"start":{"line":92,"column":4},"end":{"line":106,"column":5}},"64":{"start":{"line":93,"column":8},"end":{"line":105,"column":9}},"65":{"start":{"line":94,"column":23},"end":{"line":94,"column":75}},"66":{"start":{"line":95,"column":27},"end":{"line":95,"column":68}},"67":{"start":{"line":96,"column":12},"end":{"line":96,"column":53}},"68":{"start":{"line":97,"column":12},"end":{"line":101,"column":13}},"69":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"70":{"start":{"line":99,"column":20},"end":{"line":99,"column":50}},"71":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"72":{"start":{"line":103,"column":16},"end":{"line":103,"column":38}},"73":{"start":{"line":109,"column":4},"end":{"line":109,"column":72}},"74":{"start":{"line":109,"column":40},"end":{"line":109,"column":70}},"75":{"start":{"line":112,"column":4},"end":{"line":112,"column":36}},"76":{"start":{"line":113,"column":4},"end":{"line":113,"column":38}},"77":{"start":{"line":114,"column":4},"end":{"line":114,"column":40}},"78":{"start":{"line":115,"column":4},"end":{"line":115,"column":28}},"79":{"start":{"line":116,"column":4},"end":{"line":116,"column":28}},"80":{"start":{"line":119,"column":4},"end":{"line":119,"column":51}},"81":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"82":{"start":{"line":123,"column":33},"end":{"line":123,"column":57}},"83":{"start":{"line":124,"column":36},"end":{"line":124,"column":78}},"84":{"start":{"line":125,"column":25},"end":{"line":125,"column":52}},"85":{"start":{"line":126,"column":8},"end":{"line":126,"column":33}},"86":{"start":{"line":128,"column":4},"end":{"line":128,"column":23}},"87":{"start":{"line":129,"column":4},"end":{"line":133,"column":5}},"88":{"start":{"line":130,"column":38},"end":{"line":130,"column":66}},"89":{"start":{"line":131,"column":27},"end":{"line":131,"column":63}},"90":{"start":{"line":132,"column":8},"end":{"line":132,"column":34}},"91":{"start":{"line":134,"column":4},"end":{"line":138,"column":5}},"92":{"start":{"line":135,"column":39},"end":{"line":135,"column":67}},"93":{"start":{"line":136,"column":28},"end":{"line":136,"column":65}},"94":{"start":{"line":137,"column":8},"end":{"line":137,"column":39}},"95":{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},"96":{"start":{"line":140,"column":34},"end":{"line":140,"column":62}},"97":{"start":{"line":141,"column":23},"end":{"line":141,"column":55}},"98":{"start":{"line":142,"column":8},"end":{"line":142,"column":29}},"99":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"100":{"start":{"line":145,"column":30},"end":{"line":145,"column":54}},"101":{"start":{"line":146,"column":22},"end":{"line":146,"column":62}},"102":{"start":{"line":147,"column":8},"end":{"line":147,"column":34}},"103":{"start":{"line":151,"column":18},"end":{"line":151,"column":20}},"104":{"start":{"line":152,"column":4},"end":{"line":152,"column":21}},"105":{"start":{"line":153,"column":4},"end":{"line":153,"column":24}},"106":{"start":{"line":154,"column":20},"end":{"line":154,"column":29}},"107":{"start":{"line":155,"column":4},"end":{"line":165,"column":5}},"108":{"start":{"line":156,"column":23},"end":{"line":156,"column":36}},"109":{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},"110":{"start":{"line":158,"column":24},"end":{"line":158,"column":32}},"111":{"start":{"line":159,"column":12},"end":{"line":159,"column":45}},"112":{"start":{"line":160,"column":12},"end":{"line":160,"column":71}},"113":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"114":{"start":{"line":163,"column":12},"end":{"line":163,"column":47}},"115":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"116":{"start":{"line":167,"column":8},"end":{"line":167,"column":84}},"117":{"start":{"line":171,"column":4},"end":{"line":171,"column":67}},"118":{"start":{"line":171,"column":39},"end":{"line":171,"column":65}},"119":{"start":{"line":174,"column":4},"end":{"line":174,"column":57}},"120":{"start":{"line":174,"column":34},"end":{"line":174,"column":55}},"121":{"start":{"line":177,"column":4},"end":{"line":177,"column":65}},"122":{"start":{"line":180,"column":4},"end":{"line":180,"column":59}},"123":{"start":{"line":183,"column":4},"end":{"line":183,"column":59}},"124":{"start":{"line":186,"column":4},"end":{"line":186,"column":80}},"125":{"start":{"line":186,"column":34},"end":{"line":186,"column":78}},"126":{"start":{"line":189,"column":4},"end":{"line":189,"column":88}},"127":{"start":{"line":189,"column":39},"end":{"line":189,"column":86}},"128":{"start":{"line":192,"column":4},"end":{"line":202,"column":5}},"129":{"start":{"line":193,"column":8},"end":{"line":201,"column":9}},"130":{"start":{"line":194,"column":27},"end":{"line":194,"column":83}},"131":{"start":{"line":195,"column":12},"end":{"line":199,"column":13}},"132":{"start":{"line":196,"column":16},"end":{"line":198,"column":17}},"133":{"start":{"line":197,"column":20},"end":{"line":197,"column":62}},"134":{"start":{"line":200,"column":12},"end":{"line":200,"column":41}},"135":{"start":{"line":205,"column":4},"end":{"line":220,"column":7}},"136":{"start":{"line":206,"column":28},"end":{"line":206,"column":30}},"137":{"start":{"line":207,"column":8},"end":{"line":209,"column":9}},"138":{"start":{"line":208,"column":12},"end":{"line":208,"column":90}},"139":{"start":{"line":210,"column":8},"end":{"line":219,"column":11}},"140":{"start":{"line":212,"column":12},"end":{"line":215,"column":15}},"141":{"start":{"line":213,"column":16},"end":{"line":213,"column":48}},"142":{"start":{"line":214,"column":16},"end":{"line":214,"column":48}},"143":{"start":{"line":216,"column":12},"end":{"line":216,"column":35}},"144":{"start":{"line":218,"column":12},"end":{"line":218,"column":60}},"145":{"start":{"line":223,"column":4},"end":{"line":226,"column":5}},"146":{"start":{"line":224,"column":27},"end":{"line":224,"column":80}},"147":{"start":{"line":225,"column":8},"end":{"line":225,"column":42}},"148":{"start":{"line":227,"column":4},"end":{"line":231,"column":5}},"149":{"start":{"line":228,"column":32},"end":{"line":228,"column":56}},"150":{"start":{"line":229,"column":28},"end":{"line":229,"column":75}},"151":{"start":{"line":230,"column":8},"end":{"line":230,"column":42}},"152":{"start":{"line":232,"column":4},"end":{"line":235,"column":5}},"153":{"start":{"line":233,"column":30},"end":{"line":233,"column":71}},"154":{"start":{"line":234,"column":8},"end":{"line":234,"column":43}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"readRoomsContent","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":25}},"loc":{"start":{"line":19,"column":44},"end":{"line":59,"column":1}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":23},"end":{"line":20,"column":24}},"loc":{"start":{"line":20,"column":50},"end":{"line":58,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":25,"column":18},"end":{"line":25,"column":19}},"loc":{"start":{"line":25,"column":29},"end":{"line":32,"column":9}},"line":25},"4":{"name":"(anonymous_4)","decl":{"start":{"line":28,"column":79},"end":{"line":28,"column":80}},"loc":{"start":{"line":28,"column":109},"end":{"line":30,"column":13}},"line":28},"5":{"name":"(anonymous_5)","decl":{"start":{"line":33,"column":18},"end":{"line":33,"column":19}},"loc":{"start":{"line":33,"column":29},"end":{"line":37,"column":9}},"line":33},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":18},"end":{"line":38,"column":19}},"loc":{"start":{"line":38,"column":24},"end":{"line":40,"column":9}},"line":38},"7":{"name":"(anonymous_7)","decl":{"start":{"line":41,"column":18},"end":{"line":41,"column":19}},"loc":{"start":{"line":41,"column":38},"end":{"line":54,"column":9}},"line":41},"8":{"name":"(anonymous_8)","decl":{"start":{"line":55,"column":19},"end":{"line":55,"column":20}},"loc":{"start":{"line":55,"column":34},"end":{"line":57,"column":9}},"line":55},"9":{"name":"traverseRoomsFile","decl":{"start":{"line":61,"column":9},"end":{"line":61,"column":26}},"loc":{"start":{"line":61,"column":60},"end":{"line":90,"column":1}},"line":61},"10":{"name":"(anonymous_10)","decl":{"start":{"line":69,"column":32},"end":{"line":69,"column":33}},"loc":{"start":{"line":69,"column":42},"end":{"line":69,"column":72}},"line":69},"11":{"name":"(anonymous_11)","decl":{"start":{"line":83,"column":28},"end":{"line":83,"column":29}},"loc":{"start":{"line":83,"column":37},"end":{"line":83,"column":66}},"line":83},"12":{"name":"iterateOverTableRowsForRooms","decl":{"start":{"line":91,"column":9},"end":{"line":91,"column":37}},"loc":{"start":{"line":91,"column":85},"end":{"line":107,"column":1}},"line":91},"13":{"name":"findBuilding","decl":{"start":{"line":108,"column":9},"end":{"line":108,"column":21}},"loc":{"start":{"line":108,"column":51},"end":{"line":110,"column":1}},"line":108},"14":{"name":"(anonymous_14)","decl":{"start":{"line":109,"column":30},"end":{"line":109,"column":31}},"loc":{"start":{"line":109,"column":40},"end":{"line":109,"column":70}},"line":109},"15":{"name":"copyBuildingDataIntoRoom","decl":{"start":{"line":111,"column":9},"end":{"line":111,"column":33}},"loc":{"start":{"line":111,"column":50},"end":{"line":117,"column":1}},"line":111},"16":{"name":"makeRoomName","decl":{"start":{"line":118,"column":9},"end":{"line":118,"column":21}},"loc":{"start":{"line":118,"column":28},"end":{"line":120,"column":1}},"line":118},"17":{"name":"populateRoom","decl":{"start":{"line":121,"column":9},"end":{"line":121,"column":21}},"loc":{"start":{"line":121,"column":34},"end":{"line":149,"column":1}},"line":121},"18":{"name":"traverseIndexFile","decl":{"start":{"line":150,"column":9},"end":{"line":150,"column":26}},"loc":{"start":{"line":150,"column":48},"end":{"line":169,"column":1}},"line":150},"19":{"name":"findChildNode","decl":{"start":{"line":170,"column":9},"end":{"line":170,"column":22}},"loc":{"start":{"line":170,"column":42},"end":{"line":172,"column":1}},"line":170},"20":{"name":"(anonymous_20)","decl":{"start":{"line":171,"column":32},"end":{"line":171,"column":33}},"loc":{"start":{"line":171,"column":39},"end":{"line":171,"column":65}},"line":171},"21":{"name":"FindValueInAttr","decl":{"start":{"line":173,"column":9},"end":{"line":173,"column":24}},"loc":{"start":{"line":173,"column":43},"end":{"line":175,"column":1}},"line":173},"22":{"name":"(anonymous_22)","decl":{"start":{"line":174,"column":27},"end":{"line":174,"column":28}},"loc":{"start":{"line":174,"column":34},"end":{"line":174,"column":55}},"line":174},"23":{"name":"checkIfTable","decl":{"start":{"line":176,"column":9},"end":{"line":176,"column":21}},"loc":{"start":{"line":176,"column":28},"end":{"line":178,"column":1}},"line":176},"24":{"name":"checkIfRow","decl":{"start":{"line":179,"column":9},"end":{"line":179,"column":19}},"loc":{"start":{"line":179,"column":26},"end":{"line":181,"column":1}},"line":179},"25":{"name":"checkIfTD","decl":{"start":{"line":182,"column":9},"end":{"line":182,"column":18}},"loc":{"start":{"line":182,"column":25},"end":{"line":184,"column":1}},"line":182},"26":{"name":"checkIfClass","decl":{"start":{"line":185,"column":9},"end":{"line":185,"column":21}},"loc":{"start":{"line":185,"column":40},"end":{"line":187,"column":1}},"line":185},"27":{"name":"(anonymous_27)","decl":{"start":{"line":186,"column":27},"end":{"line":186,"column":28}},"loc":{"start":{"line":186,"column":34},"end":{"line":186,"column":78}},"line":186},"28":{"name":"findTableBody","decl":{"start":{"line":188,"column":9},"end":{"line":188,"column":22}},"loc":{"start":{"line":188,"column":29},"end":{"line":190,"column":1}},"line":188},"29":{"name":"(anonymous_29)","decl":{"start":{"line":189,"column":32},"end":{"line":189,"column":33}},"loc":{"start":{"line":189,"column":39},"end":{"line":189,"column":86}},"line":189},"30":{"name":"iterateOverTableRowsForIndexFile","decl":{"start":{"line":191,"column":9},"end":{"line":191,"column":41}},"loc":{"start":{"line":191,"column":63},"end":{"line":203,"column":1}},"line":191},"31":{"name":"populateGeoLocationData","decl":{"start":{"line":204,"column":9},"end":{"line":204,"column":32}},"loc":{"start":{"line":204,"column":48},"end":{"line":221,"column":1}},"line":204},"32":{"name":"(anonymous_32)","decl":{"start":{"line":205,"column":23},"end":{"line":205,"column":24}},"loc":{"start":{"line":205,"column":50},"end":{"line":220,"column":5}},"line":205},"33":{"name":"(anonymous_33)","decl":{"start":{"line":211,"column":18},"end":{"line":211,"column":19}},"loc":{"start":{"line":211,"column":36},"end":{"line":217,"column":9}},"line":211},"34":{"name":"(anonymous_34)","decl":{"start":{"line":212,"column":34},"end":{"line":212,"column":35}},"loc":{"start":{"line":212,"column":54},"end":{"line":215,"column":13}},"line":212},"35":{"name":"(anonymous_35)","decl":{"start":{"line":217,"column":17},"end":{"line":217,"column":18}},"loc":{"start":{"line":217,"column":28},"end":{"line":219,"column":9}},"line":217},"36":{"name":"populateBuildingData","decl":{"start":{"line":222,"column":9},"end":{"line":222,"column":29}},"loc":{"start":{"line":222,"column":46},"end":{"line":236,"column":1}},"line":222}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},"type":"if","locations":[{"start":{"line":49,"column":12},"end":{"line":51,"column":13}},{"start":{"line":49,"column":12},"end":{"line":51,"column":13}}],"line":49},"4":{"loc":{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},"type":"if","locations":[{"start":{"line":68,"column":8},"end":{"line":74,"column":9}},{"start":{"line":68,"column":8},"end":{"line":74,"column":9}}],"line":68},"5":{"loc":{"start":{"line":68,"column":12},"end":{"line":69,"column":73}},"type":"binary-expr","locations":[{"start":{"line":68,"column":12},"end":{"line":68,"column":39}},{"start":{"line":68,"column":43},"end":{"line":68,"column":69}},{"start":{"line":69,"column":12},"end":{"line":69,"column":73}}],"line":68},"6":{"loc":{"start":{"line":75,"column":8},"end":{"line":78,"column":9}},"type":"if","locations":[{"start":{"line":75,"column":8},"end":{"line":78,"column":9}},{"start":{"line":75,"column":8},"end":{"line":78,"column":9}}],"line":75},"7":{"loc":{"start":{"line":75,"column":12},"end":{"line":75,"column":88}},"type":"binary-expr","locations":[{"start":{"line":75,"column":12},"end":{"line":75,"column":34}},{"start":{"line":75,"column":38},"end":{"line":75,"column":88}}],"line":75},"8":{"loc":{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":79,"column":8},"end":{"line":81,"column":9}},{"start":{"line":79,"column":8},"end":{"line":81,"column":9}}],"line":79},"9":{"loc":{"start":{"line":79,"column":12},"end":{"line":79,"column":77}},"type":"binary-expr","locations":[{"start":{"line":79,"column":12},"end":{"line":79,"column":20}},{"start":{"line":79,"column":24},"end":{"line":79,"column":43}},{"start":{"line":79,"column":47},"end":{"line":79,"column":77}}],"line":79},"10":{"loc":{"start":{"line":83,"column":4},"end":{"line":86,"column":5}},"type":"if","locations":[{"start":{"line":83,"column":4},"end":{"line":86,"column":5}},{"start":{"line":83,"column":4},"end":{"line":86,"column":5}}],"line":83},"11":{"loc":{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},"type":"if","locations":[{"start":{"line":87,"column":4},"end":{"line":89,"column":5}},{"start":{"line":87,"column":4},"end":{"line":89,"column":5}}],"line":87},"12":{"loc":{"start":{"line":87,"column":8},"end":{"line":87,"column":61}},"type":"binary-expr","locations":[{"start":{"line":87,"column":8},"end":{"line":87,"column":34}},{"start":{"line":87,"column":38},"end":{"line":87,"column":61}}],"line":87},"13":{"loc":{"start":{"line":93,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":93,"column":8},"end":{"line":105,"column":9}},{"start":{"line":93,"column":8},"end":{"line":105,"column":9}}],"line":93},"14":{"loc":{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},"type":"if","locations":[{"start":{"line":98,"column":16},"end":{"line":100,"column":17}},{"start":{"line":98,"column":16},"end":{"line":100,"column":17}}],"line":98},"15":{"loc":{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},"type":"if","locations":[{"start":{"line":102,"column":12},"end":{"line":104,"column":13}},{"start":{"line":102,"column":12},"end":{"line":104,"column":13}}],"line":102},"16":{"loc":{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},"type":"if","locations":[{"start":{"line":122,"column":4},"end":{"line":127,"column":5}},{"start":{"line":122,"column":4},"end":{"line":127,"column":5}}],"line":122},"17":{"loc":{"start":{"line":129,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":129,"column":4},"end":{"line":133,"column":5}},{"start":{"line":129,"column":4},"end":{"line":133,"column":5}}],"line":129},"18":{"loc":{"start":{"line":134,"column":4},"end":{"line":138,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":138,"column":5}},{"start":{"line":134,"column":4},"end":{"line":138,"column":5}}],"line":134},"19":{"loc":{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":143,"column":5}},{"start":{"line":139,"column":4},"end":{"line":143,"column":5}}],"line":139},"20":{"loc":{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":144,"column":4},"end":{"line":148,"column":5}},{"start":{"line":144,"column":4},"end":{"line":148,"column":5}}],"line":144},"21":{"loc":{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":161,"column":9}},{"start":{"line":157,"column":8},"end":{"line":161,"column":9}}],"line":157},"22":{"loc":{"start":{"line":157,"column":12},"end":{"line":157,"column":88}},"type":"binary-expr","locations":[{"start":{"line":157,"column":12},"end":{"line":157,"column":34}},{"start":{"line":157,"column":38},"end":{"line":157,"column":88}}],"line":157},"23":{"loc":{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":164,"column":9}},{"start":{"line":162,"column":8},"end":{"line":164,"column":9}}],"line":162},"24":{"loc":{"start":{"line":162,"column":12},"end":{"line":162,"column":77}},"type":"binary-expr","locations":[{"start":{"line":162,"column":12},"end":{"line":162,"column":20}},{"start":{"line":162,"column":24},"end":{"line":162,"column":43}},{"start":{"line":162,"column":47},"end":{"line":162,"column":77}}],"line":162},"25":{"loc":{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},"type":"if","locations":[{"start":{"line":166,"column":4},"end":{"line":168,"column":5}},{"start":{"line":166,"column":4},"end":{"line":168,"column":5}}],"line":166},"26":{"loc":{"start":{"line":177,"column":11},"end":{"line":177,"column":64}},"type":"binary-expr","locations":[{"start":{"line":177,"column":11},"end":{"line":177,"column":36}},{"start":{"line":177,"column":40},"end":{"line":177,"column":64}}],"line":177},"27":{"loc":{"start":{"line":180,"column":11},"end":{"line":180,"column":58}},"type":"binary-expr","locations":[{"start":{"line":180,"column":11},"end":{"line":180,"column":33}},{"start":{"line":180,"column":37},"end":{"line":180,"column":58}}],"line":180},"28":{"loc":{"start":{"line":183,"column":11},"end":{"line":183,"column":58}},"type":"binary-expr","locations":[{"start":{"line":183,"column":11},"end":{"line":183,"column":33}},{"start":{"line":183,"column":37},"end":{"line":183,"column":58}}],"line":183},"29":{"loc":{"start":{"line":186,"column":34},"end":{"line":186,"column":78}},"type":"binary-expr","locations":[{"start":{"line":186,"column":34},"end":{"line":186,"column":52}},{"start":{"line":186,"column":56},"end":{"line":186,"column":78}}],"line":186},"30":{"loc":{"start":{"line":189,"column":39},"end":{"line":189,"column":86}},"type":"binary-expr","locations":[{"start":{"line":189,"column":39},"end":{"line":189,"column":61}},{"start":{"line":189,"column":65},"end":{"line":189,"column":86}}],"line":189},"31":{"loc":{"start":{"line":193,"column":8},"end":{"line":201,"column":9}},"type":"if","locations":[{"start":{"line":193,"column":8},"end":{"line":201,"column":9}},{"start":{"line":193,"column":8},"end":{"line":201,"column":9}}],"line":193},"32":{"loc":{"start":{"line":196,"column":16},"end":{"line":198,"column":17}},"type":"if","locations":[{"start":{"line":196,"column":16},"end":{"line":198,"column":17}},{"start":{"line":196,"column":16},"end":{"line":198,"column":17}}],"line":196},"33":{"loc":{"start":{"line":223,"column":4},"end":{"line":226,"column":5}},"type":"if","locations":[{"start":{"line":223,"column":4},"end":{"line":226,"column":5}},{"start":{"line":223,"column":4},"end":{"line":226,"column":5}}],"line":223},"34":{"loc":{"start":{"line":227,"column":4},"end":{"line":231,"column":5}},"type":"if","locations":[{"start":{"line":227,"column":4},"end":{"line":231,"column":5}},{"start":{"line":227,"column":4},"end":{"line":231,"column":5}}],"line":227},"35":{"loc":{"start":{"line":232,"column":4},"end":{"line":235,"column":5}},"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":235,"column":5}},{"start":{"line":232,"column":4},"end":{"line":235,"column":5}}],"line":232}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":5,"17":5,"18":5,"19":5,"20":5,"21":5,"22":5,"23":5,"24":160,"25":5,"26":5,"27":3,"28":3,"29":3,"30":3,"31":3,"32":160,"33":3,"34":160,"35":3,"36":0,"37":3,"38":3,"39":2,"40":1,"41":160,"42":160,"43":160,"44":160,"45":298377,"46":298377,"47":22330,"48":160,"49":160,"50":160,"51":160,"52":298377,"53":95,"54":95,"55":298377,"56":135325,"57":160,"58":5954,"59":4,"60":4,"61":156,"62":91,"63":91,"64":1577,"65":743,"66":743,"67":743,"68":743,"69":8173,"70":3715,"71":743,"72":743,"73":743,"74":29519,"75":743,"76":743,"77":743,"78":743,"79":743,"80":3715,"81":3715,"82":743,"83":743,"84":743,"85":743,"86":3715,"87":3715,"88":743,"89":743,"90":743,"91":3715,"92":743,"93":743,"94":743,"95":3715,"96":743,"97":743,"98":743,"99":3715,"100":743,"101":743,"102":743,"103":3,"104":3,"105":3,"106":3,"107":3,"108":11337,"109":11337,"110":3,"111":3,"112":3,"113":11337,"114":4440,"115":3,"116":0,"117":5826,"118":7694,"119":743,"120":743,"121":309714,"122":2024,"123":10615,"124":22003,"125":22003,"126":98,"127":392,"128":3,"129":447,"130":222,"131":222,"132":2442,"133":1110,"134":222,"135":3,"136":3,"137":3,"138":222,"139":3,"140":3,"141":222,"142":222,"143":3,"144":0,"145":1110,"146":222,"147":222,"148":1110,"149":222,"150":222,"151":222,"152":1110,"153":222,"154":222},"f":{"0":1,"1":5,"2":5,"3":5,"4":160,"5":5,"6":3,"7":3,"8":2,"9":160,"10":22330,"11":5954,"12":91,"13":743,"14":29519,"15":743,"16":3715,"17":3715,"18":3,"19":5826,"20":7694,"21":743,"22":743,"23":309714,"24":2024,"25":10615,"26":22003,"27":22003,"28":98,"29":392,"30":3,"31":3,"32":3,"33":3,"34":222,"35":0,"36":1110},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[0,3],"4":[160,298217],"5":[298377,19306,19306],"6":[95,298282],"7":[298377,95],"8":[135325,163052],"9":[298377,298377,151106],"10":[4,156],"11":[91,65],"12":[156,156],"13":[743,834],"14":[3715,4458],"15":[743,0],"16":[743,2972],"17":[743,2972],"18":[743,2972],"19":[743,2972],"20":[743,2972],"21":[3,11334],"22":[11337,3],"23":[4440,6897],"24":[11337,11337,4965],"25":[0,3],"26":[309714,98],"27":[2024,965],"28":[10615,4825],"29":[22003,22003],"30":[392,98],"31":[222,225],"32":[1110,1332],"33":[222,888],"34":[222,888],"35":[222,888]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/AddDatasetRooms.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/AddDatasetRooms.ts"],"names":[],"mappings":"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","sourcesContent":["import * as http from \"http\";\nimport {Building, GeoResponse, InsightError, Rooms} from \"./IInsightFacade\";\nimport JSZip from \"jszip\";\nimport {getContentFromArchives} from \"../../test/TestUtil\";\nimport {parse} from \"parse5\";\nimport {checkValidRoom, getGeoData, initializeDefaultBuilding, initializeDefaultRoom} from \"./helperAddDatasetRooms\";\n\nexport const roomNumberString: string = \"views-field views-field-field-room-number\";\nexport const roomCapacityString: string = \"views-field views-field-field-room-capacity\";\nexport const roomFurnitureString: string = \"views-field views-field-field-room-furniture\";\nexport const roomTypeString: string = \"views-field views-field-field-room-type\";\nexport const roomURLString: string = \"views-field views-field-nothing\";\nexport const buildingShortNameString: string = \"views-field views-field-field-building-code\";\nexport const buildingFullNameString: string = \"views-field views-field-title\";\nexport const buildingAddressString: string = \"views-field views-field-field-building-address\";\n\nexport function readRoomsContent(content: any, dataset: JSON[]): Promise<number> {\n\treturn new Promise(function (resolve, reject) {\n\t\tlet zip = new JSZip();\n\t\t// let dataset: any = [];\n\t\tlet roomsPromises: any[] = [];\n\t\tlet buildingArray: Building[] = [];\n\t\tzip.loadAsync(content, {base64: true})\n\t\t\t.then((unzip: JSZip) => {\n\n\t\t\t\tlet index = unzip.folder(\"\")?.file(\"index.htm\")?.async(\"string\");\n\t\t\t\tconsole.log(\"wooottt\");\n\t\t\t\tunzip.folder(\"campus/discover/buildings-and-classrooms/\")?.forEach\n\t\t\t\t(function (relativePath, file) {\n\t\t\t\t\troomsPromises.push(file.async(\"string\"));\n\n\t\t\t\t});\n\t\t\t\treturn index;\n\t\t\t})\n\t\t\t.then((index) => {\n\t\t\t\tlet indexJSON = parse(index!);\n\n\t\t\t\ttraverseIndexFile(indexJSON,buildingArray);\n\t\t\t\t// check that geolocation errors are taken care of\n\t\t\t\t// that the 9 building file is correctly disgested\n\n\t\t\t\treturn populateGeoLocationData(buildingArray);\n\n\t\t\t})\n\t\t\t.then(() => {\n\t\t\t\t \treturn Promise.all(roomsPromises);\n\t\t\t})\n\t\t\t.then((roomsHTMLArray) => {\n\t\t\t\tlet roomsArrayJSON: any[] = [];\n\n\t\t\t\tfor (const room of roomsHTMLArray) {\n\t\t\t\t\troomsArrayJSON.push(parse(room));\n\t\t\t\t}\n\t\t\t\tfor (const roomJSON of roomsArrayJSON) {\n\t\t\t\t\ttraverseRoomsFile(roomJSON,buildingArray,dataset);\n\t\t\t\t}\n\t\t\t\tif (dataset.length === 0){\n\t\t\t\t\treturn reject(new InsightError((\"Zero valid rooms\")));\n\t\t\t\t}\n\t\t\t\tconsole.log(dataset.length);\n\t\t\t\treturn resolve(dataset.length);\n\t\t\t})\n\t\t\t.catch(function (err: any) {\n\t\t\t\treturn reject(new InsightError(\"there is an error in Rooms readContent function???\"));\n\t\t\t});\n\t});\n}\n\nfunction traverseRoomsFile (root: any, buildingArray: Building[], roomsArray: any) {\n\t// https://www.geeksforgeeks.org/level-order-tree-traversal/\n\tconst queue = [];\n\tqueue.push(root);\n\t// console.log(\"push for Room\");\n\tlet buildingName: string = \"default\";\n\tlet tableBody;\n\twhile (queue.length !== 0) {\n\t\t/*\n\t\t * The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.\n\t\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\n\t\t */\n\t\tlet tempNode = queue.shift();\n\n\t\t// Finds building Name in Room files\n\t\tif (tempNode.nodeName === \"div\" && tempNode.tagName === \"div\" &&\n\t\t\ttempNode.attrs.find((item: any) => item.value === \"building-info\")) {\n\t\t\t// console.log(tempNode.attrs.find((item: any) => item.value === \"building-info\"));\n\t\t\tlet h2Node = findChildNode(tempNode,\"h2\");\n\t\t\tlet spanNode = findChildNode(h2Node,\"span\");\n\t\t\tlet textNode = findChildNode(spanNode,\"#text\");\n\t\t\tbuildingName = textNode.value;\n\t\t}\n\n\t\tif (checkIfTable(tempNode) && checkIfClass(tempNode,\"views-table cols-5 table\")) {\n\t\t\tlet table = tempNode;\n\t\t\ttableBody = findTableBody(table);\n\t\t}\n\n\t\tif (tempNode && tempNode.childNodes && tempNode.childNodes.length > 0) {\n\t\t\tqueue.push(...tempNode.childNodes);\n\t\t}\n\t}\n\tif (!buildingArray.some((obj) => obj.fullname === buildingName)){\n\t\tconsole.log(\"name not found\");\n\t\treturn;\n\t}\n\tif (buildingName !== \"default\" && tableBody !== undefined) {\n\t\titerateOverTableRowsForRooms(tableBody,buildingArray,buildingName,roomsArray);\n\t}\n}\n\nfunction iterateOverTableRowsForRooms (node: any, buildingArray: any, buildingName: string, roomsArray: any) {\n\tfor (const element of node.childNodes) {\n\t\tif (checkIfRow(element)) {\n\t\t\tlet room: Rooms = initializeDefaultRoom();\n\t\t\tlet building = findBuilding(buildingArray,buildingName);\n\t\t\tcopyBuildingDataIntoRoom(building,room);\n\t\t\tfor (const elementTD of element.childNodes) {\n\t\t\t\tif (checkIfTD(elementTD)) {\n\t\t\t\t\tpopulateRoom(elementTD,room);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (checkValidRoom(room)) {\n\t\t\t\troomsArray.push(room);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction findBuilding (buildingArray: any, buildingName: any): Building {\n\treturn buildingArray.find((item: any) => item.fullname === buildingName);\n}\n\nfunction copyBuildingDataIntoRoom (building: Building, room: Rooms) {\n\troom.address = building.address;\n\troom.fullname = building.fullname;\n\troom.shortname = building.shortname;\n\troom.lat = building.lat!;\n\troom.lon = building.lon!;\n}\n\nfunction makeRoomName (room: Rooms) {\n\troom.name = room.shortname + \"_\" + room.number ;\n}\n\nfunction populateRoom (node: any, room: Rooms) {\n\tif (checkIfClass(node,roomNumberString)){\n\t\tlet roomNumberElementA = findChildNode(node,\"a\");\n\t\tlet roomNumberElementText = findChildNode(roomNumberElementA,\"#text\");\n\t\tlet roomNumber = roomNumberElementText.value;\n\t\troom.number = roomNumber;\n\t\t// console.log(room);\n\t}\n\tmakeRoomName(room);\n\tif (checkIfClass(node,roomCapacityString)){\n\t\tlet roomCapacityElementText = findChildNode(node,\"#text\");\n\t\tlet roomCapacity = roomCapacityElementText.value.trim();\n\t\troom.seats = roomCapacity;\n\t\t// console.log(room);\n\t}\n\tif (checkIfClass(node,roomFurnitureString)){\n\t\tlet roomFurnitureElementText = findChildNode(node,\"#text\");\n\t\tlet roomFurniture = roomFurnitureElementText.value.trim();\n\t\troom.furniture = roomFurniture;\n\t\t// console.log(room);\n\t}\n\tif (checkIfClass(node,roomTypeString)){\n\t\tlet roomTypeElementText = findChildNode(node,\"#text\");\n\t\tlet roomType = roomTypeElementText.value.trim();\n\t\troom.type = roomType;\n\t\t// console.log(room);\n\t}\n\tif (checkIfClass(node,roomURLString)){\n\t\tlet roomURLElementA = findChildNode(node,\"a\");\n\t\tlet roomURL = FindValueInAttr(roomURLElementA,\"href\");\n\t\troom.href = roomURL.value;\n\t\t// console.log(room);\n\t}\n}\n\nfunction traverseIndexFile (root: any, buildingArray: Building[]) {\n\t// https://www.geeksforgeeks.org/level-order-tree-traversal/\n\tconst queue = [];\n\tqueue.push(root);\n\tconsole.log(\"push\");\n\tlet tableBody = \"default\";\n\twhile (queue.length !== 0) {\n\t\t\t/*\n\t\t\t * The shift() method removes the first element from an array and returns that removed element. This method changes the length of the array.\n\t\t\t * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/shift\n\t\t\t */\n\t\tlet tempNode = queue.shift();\n\t\tif (checkIfTable(tempNode) && checkIfClass(tempNode,\"views-table cols-5 table\")) {\n\t\t\tlet table = tempNode;\n\t\t\ttableBody = findTableBody(table);\n\t\t\titerateOverTableRowsForIndexFile(tableBody,buildingArray);\n\t\t}\n\t\tif (tempNode && tempNode.childNodes && tempNode.childNodes.length > 0) {\n\t\t\tqueue.push(...tempNode.childNodes);\n\t\t}\n\t}\n\tif (tableBody === \"default\"){\n\t\tthrow new InsightError(\"The index.htm contains no table.\");\n\t}\n}\n\nfunction findChildNode (node: any, description: string): any {\n\treturn node.childNodes.find((e: any) => e.nodeName === description);\n}\n\nfunction FindValueInAttr (node: any, givenValue: string): any {\n\treturn node.attrs.find((e: any) => e.name === givenValue);\n}\n\nfunction checkIfTable (node: any) {\n\treturn node.nodeName === \"table\" && node.tagName === \"table\";\n}\n\nfunction checkIfRow (node: any) {\n\treturn node.nodeName === \"tr\" && node.tagName === \"tr\";\n}\n\nfunction checkIfTD (node: any) {\n\treturn node.nodeName === \"td\" && node.tagName === \"td\";\n}\n\n// https://stackoverflow.com/questions/8217419/how-to-determine-if-javascript-array-contains-an-object-with-an-\n// attribute-that-e\nfunction checkIfClass (node: any, givenValue: string) {\n\treturn node.attrs.some((e: any) => e.name === \"class\" && e.value === givenValue);\n}\n\nfunction findTableBody (node: any) {\n\treturn node.childNodes.find((e: any) => e.nodeName === \"tbody\" && e.tagName === \"tbody\");\n}\n\nfunction iterateOverTableRowsForIndexFile (node: any, buildingArray: any): any {\n\tfor (const element of node.childNodes) {\n\t\tif (checkIfRow(element)) {\n\t\t\tlet building: Building = initializeDefaultBuilding();\n\t\t\tfor (const elementTD of element.childNodes) {\n\t\t\t\tif (checkIfTD(elementTD)) {\n\t\t\t\t\tpopulateBuildingData(elementTD,building);\n\t\t\t\t}\n\t\t\t}\n\t\t\tbuildingArray.push(building);\n\t\t}\n\t}\n}\n\nfunction populateGeoLocationData (buildingArray: any) {\n\treturn new Promise(function (resolve, reject) {\n\t\tlet promisesArray: Array<Promise<GeoResponse>> = [];\n\t\tfor (const building of buildingArray) {\n\t\t\tpromisesArray.push(getGeoData(building.address));\n\t\t}\n\t\treturn Promise.all(promisesArray)\n\t\t\t.then((geoDataArray) => {\n\t\t\t\tbuildingArray.forEach(function (value: Building, i: any) {\n\t\t\t\t\t// console.log(\"%d: %s\", i, value);\n\t\t\t\t\tvalue.lat = geoDataArray[i].lat;\n\t\t\t\t\tvalue.lon = geoDataArray[i].lon;\n\t\t\t\t});\n\t\t\t\treturn resolve(\"done\");\n\t\t\t}).catch((error) => {\n\t\t\t\treturn reject(\"populating geodata didn't work\");\n\t\t\t});\n\t});\n}\n\nfunction populateBuildingData (node: any, building: Building) {\n\tif (checkIfClass(node,buildingShortNameString)){\n\t//\thttps://linuxhint.com/remove-all-non-alphanumeric-characters-in-javascript/\n\t\tlet buildingCode = findChildNode(node,\"#text\").value.replace(/\\W/g, \"\");\n\t\tbuilding.shortname = buildingCode;\n\t}\n\tif (checkIfClass(node,buildingFullNameString)){\n\t\t//\thttps://linuxhint.com/remove-all-non-alphanumeric-characters-in-javascript/\n\t\tlet buildingTitleNode = findChildNode(node,\"a\");\n\t\tlet buildingTitle = findChildNode(buildingTitleNode,\"#text\").value;\n\t\t// console.log(buildingTitle);\n\t\tbuilding.fullname = buildingTitle;\n\t}\n\tif (checkIfClass(node,buildingAddressString)){\n\t\t//\thttps://linuxhint.com/remove-all-non-alphanumeric-characters-in-javascript/\n\t\tlet buildingAddress = findChildNode(node,\"#text\").value.trim();\n\t\tbuilding.address = buildingAddress;\n\t}\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b89cf08c0cadb514ac6ea5fd51f302c46b4ac410","contentHash":"994c84c48194dcb2e9c718a6f2bca9665862392ce55d7a9ec27c75acb6f564bb"},"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperAddDatasetRooms.ts":{"path":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperAddDatasetRooms.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":145}},"4":{"start":{"line":7,"column":25},"end":{"line":7,"column":52}},"5":{"start":{"line":8,"column":15},"end":{"line":8,"column":47}},"6":{"start":{"line":10,"column":15},"end":{"line":22,"column":5}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":16}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":54}},"9":{"start":{"line":27,"column":19},"end":{"line":33,"column":5}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":20}},"11":{"start":{"line":36,"column":0},"end":{"line":36,"column":62}},"12":{"start":{"line":38,"column":17},"end":{"line":52,"column":45}},"13":{"start":{"line":53,"column":4},"end":{"line":53,"column":18}},"14":{"start":{"line":55,"column":0},"end":{"line":55,"column":40}},"15":{"start":{"line":57,"column":4},"end":{"line":57,"column":39}},"16":{"start":{"line":59,"column":0},"end":{"line":59,"column":38}},"17":{"start":{"line":61,"column":4},"end":{"line":100,"column":7}},"18":{"start":{"line":62,"column":29},"end":{"line":62,"column":51}},"19":{"start":{"line":63,"column":21},"end":{"line":63,"column":101}},"20":{"start":{"line":64,"column":8},"end":{"line":99,"column":11}},"21":{"start":{"line":65,"column":35},"end":{"line":65,"column":38}},"22":{"start":{"line":66,"column":32},"end":{"line":66,"column":59}},"23":{"start":{"line":68,"column":12},"end":{"line":75,"column":13}},"24":{"start":{"line":69,"column":16},"end":{"line":70,"column":50}},"25":{"start":{"line":72,"column":17},"end":{"line":75,"column":13}},"26":{"start":{"line":73,"column":16},"end":{"line":74,"column":77}},"27":{"start":{"line":76,"column":12},"end":{"line":79,"column":13}},"28":{"start":{"line":77,"column":16},"end":{"line":77,"column":29}},"29":{"start":{"line":78,"column":16},"end":{"line":78,"column":37}},"30":{"start":{"line":80,"column":12},"end":{"line":80,"column":36}},"31":{"start":{"line":81,"column":26},"end":{"line":81,"column":28}},"32":{"start":{"line":82,"column":12},"end":{"line":84,"column":15}},"33":{"start":{"line":83,"column":16},"end":{"line":83,"column":33}},"34":{"start":{"line":85,"column":12},"end":{"line":94,"column":15}},"35":{"start":{"line":86,"column":16},"end":{"line":93,"column":17}},"36":{"start":{"line":87,"column":39},"end":{"line":87,"column":58}},"37":{"start":{"line":88,"column":20},"end":{"line":88,"column":47}},"38":{"start":{"line":91,"column":20},"end":{"line":91,"column":37}},"39":{"start":{"line":92,"column":20},"end":{"line":92,"column":37}},"40":{"start":{"line":96,"column":12},"end":{"line":96,"column":53}},"41":{"start":{"line":97,"column":12},"end":{"line":97,"column":94}},"42":{"start":{"line":98,"column":12},"end":{"line":98,"column":29}},"43":{"start":{"line":102,"column":0},"end":{"line":102,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"initializeDefaultRoom","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":30}},"loc":{"start":{"line":9,"column":33},"end":{"line":24,"column":1}},"line":9},"2":{"name":"initializeDefaultBuilding","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":34}},"loc":{"start":{"line":26,"column":37},"end":{"line":35,"column":1}},"line":26},"3":{"name":"checkValidRoom","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":23}},"loc":{"start":{"line":37,"column":30},"end":{"line":54,"column":1}},"line":37},"4":{"name":"encodeAddress","decl":{"start":{"line":56,"column":9},"end":{"line":56,"column":22}},"loc":{"start":{"line":56,"column":32},"end":{"line":58,"column":1}},"line":56},"5":{"name":"getGeoData","decl":{"start":{"line":60,"column":9},"end":{"line":60,"column":19}},"loc":{"start":{"line":60,"column":29},"end":{"line":101,"column":1}},"line":60},"6":{"name":"(anonymous_6)","decl":{"start":{"line":61,"column":23},"end":{"line":61,"column":24}},"loc":{"start":{"line":61,"column":50},"end":{"line":100,"column":5}},"line":61},"7":{"name":"(anonymous_7)","decl":{"start":{"line":64,"column":35},"end":{"line":64,"column":36}},"loc":{"start":{"line":64,"column":44},"end":{"line":95,"column":9}},"line":64},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":27},"end":{"line":82,"column":28}},"loc":{"start":{"line":82,"column":38},"end":{"line":84,"column":13}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":85,"column":26},"end":{"line":85,"column":27}},"loc":{"start":{"line":85,"column":32},"end":{"line":94,"column":13}},"line":85},"10":{"name":"(anonymous_10)","decl":{"start":{"line":95,"column":23},"end":{"line":95,"column":24}},"loc":{"start":{"line":95,"column":30},"end":{"line":99,"column":9}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":38,"column":17},"end":{"line":52,"column":45}},"type":"binary-expr","locations":[{"start":{"line":38,"column":17},"end":{"line":38,"column":58}},{"start":{"line":39,"column":8},"end":{"line":39,"column":50}},{"start":{"line":40,"column":8},"end":{"line":40,"column":47}},{"start":{"line":41,"column":8},"end":{"line":41,"column":45}},{"start":{"line":42,"column":8},"end":{"line":42,"column":48}},{"start":{"line":43,"column":8},"end":{"line":43,"column":28}},{"start":{"line":44,"column":8},"end":{"line":44,"column":28}},{"start":{"line":45,"column":8},"end":{"line":45,"column":38}},{"start":{"line":46,"column":8},"end":{"line":46,"column":38}},{"start":{"line":47,"column":8},"end":{"line":47,"column":41}},{"start":{"line":48,"column":8},"end":{"line":48,"column":41}},{"start":{"line":49,"column":8},"end":{"line":49,"column":30}},{"start":{"line":50,"column":8},"end":{"line":50,"column":45}},{"start":{"line":51,"column":8},"end":{"line":51,"column":50}},{"start":{"line":52,"column":8},"end":{"line":52,"column":45}}],"line":38},"4":{"loc":{"start":{"line":68,"column":12},"end":{"line":75,"column":13}},"type":"if","locations":[{"start":{"line":68,"column":12},"end":{"line":75,"column":13}},{"start":{"line":68,"column":12},"end":{"line":75,"column":13}}],"line":68},"5":{"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":80}},"type":"binary-expr","locations":[{"start":{"line":68,"column":16},"end":{"line":68,"column":40}},{"start":{"line":68,"column":44},"end":{"line":68,"column":60}},{"start":{"line":68,"column":64},"end":{"line":68,"column":80}}],"line":68},"6":{"loc":{"start":{"line":72,"column":17},"end":{"line":75,"column":13}},"type":"if","locations":[{"start":{"line":72,"column":17},"end":{"line":75,"column":13}},{"start":{"line":72,"column":17},"end":{"line":75,"column":13}}],"line":72},"7":{"loc":{"start":{"line":76,"column":12},"end":{"line":79,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":79,"column":13}},{"start":{"line":76,"column":12},"end":{"line":79,"column":13}}],"line":76}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":743,"7":743,"8":1,"9":222,"10":222,"11":1,"12":743,"13":743,"14":1,"15":222,"16":1,"17":222,"18":222,"19":222,"20":222,"21":222,"22":222,"23":222,"24":0,"25":222,"26":0,"27":222,"28":0,"29":0,"30":222,"31":222,"32":222,"33":222,"34":222,"35":222,"36":222,"37":222,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1},"f":{"0":1,"1":743,"2":222,"3":743,"4":222,"5":222,"6":222,"7":222,"8":222,"9":222,"10":0},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[743,743,743,743,743,743,743,743,743,743,743,743,743,743,743],"4":[0,222],"5":[222,222,222],"6":[0,222],"7":[0,222]},"inputSourceMap":{"version":3,"file":"/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperAddDatasetRooms.ts","sources":["/Users/syedwaqarahmed/Documents/UBC/Term_7_current/CPSC_310/Project/project_team043/src/controller/helperAddDatasetRooms.ts"],"names":[],"mappings":"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","sourcesContent":["import {Building, InsightError, Rooms} from \"./IInsightFacade\";\nimport http from \"http\";\n\n\nexport function initializeDefaultRoom(): Rooms {\n\tlet room: Rooms = {\n\t\tfullname : \"ImpossibleWord@$%#123\",\n\t\tshortname : \"ImpossibleWord@$%#123\",\n\t\tnumber : \"ImpossibleWord@$%#123\",\n\t\tname : \"ImpossibleWord@$%#123\",\n\t\taddress : \"ImpossibleWord@$%#123\",\n\t\tlat : 1000000,\n\t\tlon : 1000000,\n\t\tseats : 1000000,\n\t\ttype : \"ImpossibleWord@$%#123\",\n\t\tfurniture : \"ImpossibleWord@$%#123\",\n\t\thref : \"ImpossibleWord@$%#123\",\n\t};\n\treturn room;\n}\n\nexport function initializeDefaultBuilding(): Building {\n\tlet building: Building = {\n\t\tfullname : \"ImpossibleWord@$%#123\",\n\t\tshortname : \"ImpossibleWord@$%#123\",\n\t\taddress : \"ImpossibleWord@$%#123\",\n\t\tlat : 1000000,\n\t\tlon : 1000000\n\t};\n\treturn building;\n}\n\nexport function checkValidRoom(room: Rooms): boolean {\n\tlet result: boolean =\n\t\troom.fullname !== \"ImpossibleWord@$%#123\" &&\n\t\troom.shortname !== \"ImpossibleWord@$%#123\" &&\n\t\troom.number !== \"ImpossibleWord@$%#123\" &&\n\t\troom.name !== \"ImpossibleWord@$%#123\" &&\n\t\troom.address !== \"ImpossibleWord@$%#123\" &&\n\t\troom.lat !== 1000000 &&\n\t\troom.lon !== 1000000 &&\n\t\ttypeof (room.lat) !== \"string\" &&\n\t\ttypeof (room.lon) !== \"string\" &&\n\t\ttypeof (room.lat) !== \"undefined\" &&\n\t\ttypeof (room.lon) !== \"undefined\" &&\n\t\troom.seats !== 1000000 &&\n\t\troom.type !== \"ImpossibleWord@$%#123\" &&\n\t\troom.furniture !== \"ImpossibleWord@$%#123\" &&\n\t\troom.href !== \"ImpossibleWord@$%#123\";\n\treturn result;\n}\n\n\n// Encodes building address (string) for use in a URL request\nexport function encodeAddress (address: string) {\n\treturn encodeURIComponent(address);\n}\n\n// Takes in building address and returns its lat and lon coordinates.\nexport function getGeoData (address: string): any {\n\treturn new Promise(function (resolve, reject) {\n\t\tlet encodedAddress: string = encodeAddress(address);\n\t\t// The following function is copied from HTTP API\n\t\t// Reference: https://nodejs.org/api/http.html#httpgeturl-options-callback\n\t\tlet getURL = \"http://cs310.students.cs.ubc.ca:11316/api/v1/project_team043/\" + encodedAddress;\n\t\thttp.get(getURL, (res) => {\n\t\t\tconst {statusCode} = res;\n\t\t\tconst contentType = res.headers[\"content-type\"];\n\t\t\tlet error;\n\t\t\t// Any 2xx status code signals a successful response but\n\t\t\t// here we're only checking for 200.\n\t\t\t// if (statusCode !== 200) {\n\t\t\tif (statusCode === undefined || statusCode < 200 || statusCode > 299) {\n\t\t\t\terror = new Error(\"Request Failed.\\n\" +\n\t\t\t\t\t`Status Code: ${statusCode}`);\n\t\t\t\t// return reject(error);\n\t\t\t} else if (!/^application\\/json/.test(contentType as string)) {\n\t\t\t\terror = new Error(\"Invalid content-type.\\n\" +\n\t\t\t\t\t`Expected application/json but received ${contentType}`);\n\t\t\t\t// return reject(error);\n\t\t\t}\n\t\t\tif (error) {\n\t\t\t\t// console.error(error.message);\n\t\t\t\t// Consume response data to free up memory\n\t\t\t\tres.resume();\n\t\t\t\t// This catches both if there is an internet error or the address is wrong.\n\t\t\t\treturn reject(error);\n\t\t\t\t// return;\n\t\t\t}\n\t\t\tres.setEncoding(\"utf8\");\n\t\t\tlet rawData = \"\";\n\t\t\tres.on(\"data\", (chunk) => {\n\t\t\t\trawData += chunk;\n\t\t\t});\n\t\t\tres.on(\"end\", () => {\n\t\t\t\ttry {\n\t\t\t\t\tconst parsedData = JSON.parse(rawData);\n\t\t\t\t\treturn resolve(parsedData);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\treturn reject(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}).on(\"error\", (e) => {\n\t\t\tconsole.error(`Got error: ${e.message}`);\n\t\t\tthrow new InsightError(\"Internet connection not working maybe?\");\n\t\t\treturn reject(e);\n\t\t});\n\t});\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"457c2f389c581a461ec1925f040ce39ac8a3107a","contentHash":"1fc1b84b58e20131f0367282a65c62d201c658d4c96fa52901fa10a95f3013fd"}}